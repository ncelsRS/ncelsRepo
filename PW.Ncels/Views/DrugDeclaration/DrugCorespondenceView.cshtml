@model PW.Ncels.Database.DataModel.EXP_DrugDeclaration
@{
    var tableName = Model.Id + "_corespondence";
}

<div class="panel panel-default">
    <div class="panel-heading">
        Переписка
    </div>
    <div class="panel-body" style="padding: 10px;">
        <div class="CSSTableGenerator">
            <table style="width: 100%; text-align: center" id="@tableName">
                <thead>
                <tr>
                    <td style="width: 160px">Этап</td>
                    <td style="width: 100px">Тип</td>
                    @*                        <td>Вид</td>*@
                    <td style="width: 100px">№ письма</td>
                    <td>Автор</td>
                    <td style="width: 100px">Статус</td>
                    <td style="width: 120px">Дата создания</td>
                    <td style="width: 120px">Дата отправки</td>
                    <td style="width: 120px">Дата прочтения</td>
                    @*                    <td>Комментарии</td>*@
                    <td style="width: 100px"></td>
                </tr>

                </thead>
                <tbody>
                @for (var i = 0; i < Model.Letters.Count; i++)
                {
                    <tr rowid="@Model.Letters[i].Id">
                        <td>
                            @Html.TextBoxFor(e => Model.Letters[i].EXP_DIC_Stage.NameRu, new { @class = "form-control", @readonly = "readonly" })
                        </td>
                        <td>
                            @Html.TextBoxFor(e => Model.Letters[i].EXP_DIC_CorespondenceType.NameRu, new { @class = "form-control", @readonly = "readonly" })
                        </td>
                        <td>
                            @Html.TextBoxFor(e => Model.Letters[i].NumberLetter, new { @class = "form-control", @readonly = "readonly"})
                        </td>
                        <td>
                            @Html.TextBoxFor(e => Model.Letters[i].Employee.DisplayName, new { @class = "form-control", @readonly = "readonly" })
                        </td>
                        <td>
                            @Html.TextBoxFor(e => Model.Letters[i].Dictionary.Name, new { @class = "form-control", @readonly = "readonly" })
                        </td>
                        <td>
                            @Html.TextBoxFor(e => Model.Letters[i].DateCreate, new { @class = "form-control", @readonly = "readonly" })
                        </td>
                        <td>
                            @Html.TextBoxFor(e => Model.Letters[i].DateSend, new { @class = "form-control", @readonly = "readonly" })
                        </td>
                        <td>
                            @Html.TextBoxFor(e => Model.Letters[i].DateRead, new { @class = "form-control", @readonly = "readonly" })
                        </td>
                        <td>
                            <div class="btn-group" style="float: right; margin-right: 10px; color: white; text-align: left">
                                <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Операции <span class="caret"></span></button>
                                <ul class="dropdown-menu btnmenu">

                                    <li class="btn-info">
                                        <a href="#" class="link-object" onclick="location.href = '@Url.Action("LetterPreview", "DrugDeclaration", new { id = @Model.Letters[i].Id })'" style="color: white; padding: 5px"><span class="glyphicon glyphicon-search" aria-hidden="true"></span> Просмотр</a>
                                    </li>                                    
                                </ul>
                            </div>
                        </td>

                    </tr>
                }
                <tfoot>
            </table>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function() {
        $("#corespondenceBtn").show();
    });
</script>
