<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<StiSerializer version="1.02" type="Net" application="StiReport">
  <Dictionary Ref="1" type="Dictionary" isKey="true">
    <BusinessObjects isList="true" count="0" />
    <Databases isList="true" count="1">
      <Connection Ref="2" type="Stimulsoft.Report.Dictionary.StiSqlDatabase" isKey="true">
        <Alias>Connection</Alias>
        <ConnectionStringEncrypted>+dZpSdVfsvlyZE3JYhzjL4ZawQJnVEvx4hW5OGJJpHvVavXrYghC7XJlvdzk2Ogv4XTbiVZr093hfNXM6XTgj9V4z4liTdmBZ2s=</ConnectionStringEncrypted>
        <Name>Connection</Name>
      </Connection>
    </Databases>
    <DataSources isList="true" count="1">
      <ActData Ref="3" type="Stimulsoft.Report.Dictionary.StiSqlSource" isKey="true">
        <Alias>ActData</Alias>
        <Columns isList="true" count="28">
          <value>Id,System.Guid</value>
          <value>DicStageId,System.Int32</value>
          <value>DrugDeclarationId,System.Guid</value>
          <value>TotalPrice,System.Decimal</value>
          <value>StatusId,System.Guid</value>
          <value>CreateDate,System.DateTime</value>
          <value>DeleteDate,System.DateTime</value>
          <value>ModifyDate,System.DateTime</value>
          <value>SendDate,System.DateTime</value>
          <value>CreateEmployeeId,System.Guid</value>
          <value>TradeNameRu,System.String</value>
          <value>TradeNameKz,System.String</value>
          <value>TradeNameEn,System.String</value>
          <value>ContractNumber,System.String</value>
          <value>ContractDate,System.DateTime</value>
          <value>ApplicantNameRu,System.String</value>
          <value>ApplicantNameKz,System.String</value>
          <value>ApplicantNameEn,System.String</value>
          <value>OrgTypeName,System.String</value>
          <value>SignerLastName,System.String</value>
          <value>SignerFirstName,System.String</value>
          <value>SignerMiddleName,System.String</value>
          <value>ManufacturerNameRu,System.String</value>
          <value>ManufacturerNameKz,System.String</value>
          <value>ManufacturerNameEn,System.String</value>
          <value>ManufacturerCountry,System.String</value>
          <value>InvoiceNumber1C,System.String</value>
          <value>InvoiceDatetime1C,System.Nullable`1[System.DateTime]</value>
        </Columns>
        <CommandTimeout>30</CommandTimeout>
        <Dictionary isRef="1" />
        <Name>ActData</Name>
        <NameInSource>Connection</NameInSource>
        <Parameters isList="true" count="1">
          <value>_x0040_CertificateOfCompletion,Code,14,0</value>
        </Parameters>
        <SqlCommand>SELECT Tcc.[Id]
	,Tcc.[DicStageId]
	,Tcc.[DrugDeclarationId]
	,Tcc.[TotalPrice]
	,Tcc.[StatusId]
	,Tcc.[CreateDate]
	,Tcc.[DeleteDate]
	,Tcc.[ModifyDate]
	,Tcc.[SendDate]
	,Tcc.[CreateEmployeeId]
	,Tdd.NameRu AS TradeNameRu
	,Tdd.NameKz AS TradeNameKz
	,Tdd.NameEn AS TradeNameEn
	,Tc.Number AS ContractNumber
	,Tc.CreatedDate AS ContractDate
	,Torg.NameRu AS ApplicantNameRu
	,Torg.NameKz AS ApplicantNameKz
	,Torg.NameEn AS ApplicantNameEn
	,Torg.OpfTypeName AS OrgTypeName
	,Torg.BossLastName AS SignerLastName
	,Torg.BossFirstName AS SignerFirstName
	,Torg.BossMiddleName AS SignerMiddleName
	,Tmanuf.NameRu AS ManufacturerNameRu
	,Tmanuf.NameKz AS ManufacturerNameKz
	,Tmanuf.NameEn AS ManufacturerNameEn
	,Tmanuf.CountryName AS ManufacturerCountry
	,Tdp.InvoiceNumber1C
	,Tdp.InvoiceDatetime1C 
	FROM [dbo].[EXP_CertificateOfCompletion] AS Tcc 
	INNER JOIN [dbo].[EXP_DrugDeclaration] AS Tdd ON Tcc.DrugDeclarationId = Tdd.Id
INNER JOIN [dbo].[Contracts] AS Tc ON Tc.Id = Tdd.ContractId
INNER JOIN [dbo].[OrganizationsView] AS Torg ON Torg.Id = Tc.ApplicantOrganizationId
INNER JOIN [dbo].[OrganizationsView] AS Tmanuf ON Tmanuf.Id = Tc.ManufacturerOrganizationId
INNER JOIN [dbo].[EXP_DirectionToPays_DrugDeclaration] AS Tdpdd ON Tdpdd.DrugDeclarationId = Tdd.Id
INNER JOIN [dbo].[EXP_DirectionToPays] AS Tdp ON Tdp.Id = Tdpdd.DirectionToPayId
WHERE Tcc.Id = @CertificateOfCompletion</SqlCommand>
      </ActData>
    </DataSources>
    <Relations isList="true" count="0" />
    <Report isRef="0" />
    <Variables isList="true" count="2">
      <value>,Code,Code,Ид_x0020_Акта_x0020_выполненых_x0020_работ,System.Guid,,False,False,False</value>
      <value>,CurrentUserName,CurrentUserName,Пользователь_x0020_создавщий_x0020_акт,System.String,,False,False,False</value>
    </Variables>
  </Dictionary>
  <EngineVersion>EngineV2</EngineVersion>
  <GlobalizationStrings isList="true" count="0" />
  <MetaTags isList="true" count="0" />
  <Pages isList="true" count="1">
    <Page1 Ref="4" type="Page" isKey="true">
      <Border>None;Black;2;Solid;False;4;Black</Border>
      <Brush>Transparent</Brush>
      <Components isList="true" count="6">
        <PageFooterBand1 Ref="5" type="PageFooterBand" isKey="true">
          <Brush>Transparent</Brush>
          <ClientRectangle>0,26.7,19,1</ClientRectangle>
          <Components isList="true" count="2">
            <Text13 Ref="6" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>0,0.1,8.8,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,8</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text13</Name>
              <Page isRef="4" />
              <Parent isRef="5" />
              <Text>Пользователь: {CurrentUserName}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text13>
            <Text14 Ref="7" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>8.8,0.1,10.2,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,8</Font>
              <Guid>da474feb14844ab895e394797dbf8edf</Guid>
              <HorAlignment>Right</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text14</Name>
              <Page isRef="4" />
              <Parent isRef="5" />
              <Text>Дата и время печати: {Today.ToString("dd.MM.yyyy")} {Time.ToString("HH:mm:ss")}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text14>
          </Components>
          <Conditions isList="true" count="0" />
          <Name>PageFooterBand1</Name>
          <Page isRef="4" />
          <Parent isRef="4" />
        </PageFooterBand1>
        <ReportTitleBand1 Ref="8" type="ReportTitleBand" isKey="true">
          <Brush>Transparent</Brush>
          <ClientRectangle>0,0.4,19,6.4</ClientRectangle>
          <Components isList="true" count="5">
            <Text1 Ref="9" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>0,0,19,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,9</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text1</Name>
              <Page isRef="4" />
              <Parent isRef="8" />
              <Text>РГП на ПХВ «Национальный центр экспертизы лекарственных средств, изделий медицинского назначения и медицинской техники»</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text1>
            <Text2 Ref="10" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>0,0.6,19,1.2</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,14,Bold</Font>
              <Guid>5596f21fca7f49cda0af6c5a0fb50d9f</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text2</Name>
              <Page isRef="4" />
              <Parent isRef="8" />
              <Text>{ActData.DicStageId == 8? "АКТ выполненных работ по заключению безопасности" : "АКТ выполненных работ по первичной экспертизе"}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Bottom</VertAlignment>
            </Text2>
            <Text3 Ref="11" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>0,1.8,9.8,0.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,12</Font>
              <Guid>3631ae820b5944978681301863378957</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text3</Name>
              <Page isRef="4" />
              <Parent isRef="8" />
              <Text>г. Алматы</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text3>
            <Text4 Ref="12" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>9.8,1.8,9.2,0.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,12</Font>
              <Guid>f6ced44b8b3a46b88fee14548e491bc2</Guid>
              <HorAlignment>Right</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text4</Name>
              <Page isRef="4" />
              <Parent isRef="8" />
              <Text>{Today.ToString("dd.MM.yyyy")}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text4>
            <Text5 Ref="13" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <CanBreak>True</CanBreak>
              <CanGrow>True</CanGrow>
              <ClientRectangle>0,2.6,19,3.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,12</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text5</Name>
              <Page isRef="4" />
              <Parent isRef="8" />
              <Text>Настоящий акт подписан между {ActData.OrgTypeName} {ActData.ApplicantNameRu}, в лице {ActData.SignerLastName} {ActData.SignerFirstName} {ActData.SignerMiddleName} с одной стороны и РГП на ПХВ «Национальный центр экспертизы лекарственных средств, изделий медицинского назначения и медицинской техники» в лице генерального директора Шоранова А.Е. с другой стороны, в соответствии с договором № {ActData.ContractNumber} от {ActData.ContractDate.ToString("dd.MM.yyyy")}, согласно которому заявитель оплатил за проведение первичной экспертизы экспертных работ при  в регистрационное досье внесение изменений лекарственных средств в Республике Казахстан.</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>,,,,WordWrap=True,A=0</TextOptions>
              <Type>Expression</Type>
            </Text5>
          </Components>
          <Conditions isList="true" count="0" />
          <Name>ReportTitleBand1</Name>
          <Page isRef="4" />
          <Parent isRef="4" />
        </ReportTitleBand1>
        <HeaderBand1 Ref="14" type="HeaderBand" isKey="true">
          <Brush>Transparent</Brush>
          <ClientRectangle>0,7.6,19,0.6</ClientRectangle>
          <Components isList="true" count="3">
            <Text6 Ref="15" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <ClientRectangle>0,0,6.2,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,12,Bold</Font>
              <GrowToHeight>True</GrowToHeight>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text6</Name>
              <Page isRef="4" />
              <Parent isRef="14" />
              <Text>Торговое название</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>,,,,WordWrap=True,A=0</TextOptions>
              <Type>Expression</Type>
            </Text6>
            <Text7 Ref="16" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <ClientRectangle>6.2,0,6.2,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,12,Bold</Font>
              <GrowToHeight>True</GrowToHeight>
              <Guid>9f50201f69fe4aa9950e6be4349c19c7</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text7</Name>
              <Page isRef="4" />
              <Parent isRef="14" />
              <Text>Производитель, страна</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>,,,,WordWrap=True,A=0</TextOptions>
              <Type>Expression</Type>
            </Text7>
            <Text8 Ref="17" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <ClientRectangle>12.4,0,6.6,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,12,Bold</Font>
              <GrowToHeight>True</GrowToHeight>
              <Guid>108b3210abdd472c990f230187c3034a</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text8</Name>
              <Page isRef="4" />
              <Parent isRef="14" />
              <Text>{ActData.DicStageId == 8? "Сумма (30% от прейскуранта)" : "Сумма (70% от прейскуранта)"}

</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>,,,,WordWrap=True,A=0</TextOptions>
              <Type>Expression</Type>
            </Text8>
          </Components>
          <Conditions isList="true" count="0" />
          <Name>HeaderBand1</Name>
          <Page isRef="4" />
          <Parent isRef="4" />
          <PrintIfEmpty>True</PrintIfEmpty>
        </HeaderBand1>
        <DataBand1 Ref="18" type="DataBand" isKey="true">
          <Brush>Transparent</Brush>
          <BusinessObjectGuid isNull="true" />
          <CanBreak>True</CanBreak>
          <ClientRectangle>0,9,19,0.8</ClientRectangle>
          <Components isList="true" count="3">
            <Text9 Ref="19" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanBreak>True</CanBreak>
              <CanGrow>True</CanGrow>
              <ClientRectangle>0,0,6.2,0.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,12</Font>
              <GrowToHeight>True</GrowToHeight>
              <Guid>d54a781318254facabd996bd83f9b6b5</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text9</Name>
              <Page isRef="4" />
              <Parent isRef="18" />
              <Text>{ActData.TradeNameRu}</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>,,,,WordWrap=True,A=0</TextOptions>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text9>
            <Text10 Ref="20" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanBreak>True</CanBreak>
              <CanGrow>True</CanGrow>
              <ClientRectangle>6.2,0,6.2,0.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,12</Font>
              <GrowToHeight>True</GrowToHeight>
              <Guid>02c95cef57eb4cd78b1467ce94fad823</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text10</Name>
              <Page isRef="4" />
              <Parent isRef="18" />
              <Text>{ActData.ManufacturerNameRu}, {ActData.ManufacturerCountry}</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>,,,,WordWrap=True,A=0</TextOptions>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text10>
            <Text11 Ref="21" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanBreak>True</CanBreak>
              <CanGrow>True</CanGrow>
              <ClientRectangle>12.4,0,6.6,0.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,12</Font>
              <GrowToHeight>True</GrowToHeight>
              <Guid>279df5be5ea0429684c9cf4e6c84dce3</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text11</Name>
              <Page isRef="4" />
              <Parent isRef="18" />
              <Text>{ActData.TotalPrice} согласно счета № {ActData.InvoiceNumber1C} от {ActData.InvoiceDatetime1C == null ? "" : ActData.InvoiceDatetime1C.Value.ToString("dd.MM.yyyy")}</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>,,,,WordWrap=True,A=0</TextOptions>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text11>
          </Components>
          <Conditions isList="true" count="0" />
          <DataRelationName isNull="true" />
          <DataSourceName>ActData</DataSourceName>
          <Filters isList="true" count="0" />
          <Name>DataBand1</Name>
          <Page isRef="4" />
          <Parent isRef="4" />
          <PrintIfDetailEmpty>True</PrintIfDetailEmpty>
          <Sort isList="true" count="0" />
        </DataBand1>
        <FooterBand1 Ref="22" type="FooterBand" isKey="true">
          <Brush>Transparent</Brush>
          <CanBreak>True</CanBreak>
          <ClientRectangle>0,10.6,19,0.6</ClientRectangle>
          <Components isList="true" count="2">
            <Text12 Ref="23" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <CanBreak>True</CanBreak>
              <CanGrow>True</CanGrow>
              <ClientRectangle>0,0,6.4,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,12,Bold</Font>
              <GrowToHeight>True</GrowToHeight>
              <Margins>0,0,0,0</Margins>
              <Name>Text12</Name>
              <Page isRef="4" />
              <Parent isRef="22" />
              <Text>Сумма первичной экспертизы:</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>,,,,WordWrap=True,A=0</TextOptions>
              <Type>Expression</Type>
            </Text12>
            <Text17 Ref="24" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <CanBreak>True</CanBreak>
              <CanGrow>True</CanGrow>
              <ClientRectangle>6.4,0,12.4,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,12,Underline</Font>
              <GrowToHeight>True</GrowToHeight>
              <Margins>0,0,0,0</Margins>
              <Name>Text17</Name>
              <Page isRef="4" />
              <Parent isRef="22" />
              <Text>{ToCurrencyWordRuKZT(ActData.TotalPrice,false)}</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>,,,,WordWrap=True,A=0</TextOptions>
              <Type>Expression</Type>
            </Text17>
          </Components>
          <Conditions isList="true" count="0" />
          <Name>FooterBand1</Name>
          <Page isRef="4" />
          <Parent isRef="4" />
          <PrintIfEmpty>True</PrintIfEmpty>
        </FooterBand1>
        <ReportSummaryBand1 Ref="25" type="ReportSummaryBand" isKey="true">
          <Brush>Transparent</Brush>
          <CanBreak>True</CanBreak>
          <ClientRectangle>0,12,19,7</ClientRectangle>
          <Components isList="true" count="2">
            <Text15 Ref="26" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <CanBreak>True</CanBreak>
              <CanGrow>True</CanGrow>
              <ClientRectangle>0.4,0,9,6.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,12</Font>
              <GrowToHeight>True</GrowToHeight>
              <Margins>0,0,0,0</Margins>
              <Name>Text15</Name>
              <Page isRef="4" />
              <Parent isRef="25" />
              <Text>Принял
{ActData.OrgTypeName} {ActData.ApplicantNameRu}

{ActData.SignerLastName} {ActData.SignerFirstName} {ActData.SignerMiddleName}

М.П.</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>,,,,WordWrap=True,A=0</TextOptions>
              <Type>Expression</Type>
            </Text15>
            <Text16 Ref="27" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <CanBreak>True</CanBreak>
              <CanGrow>True</CanGrow>
              <ClientRectangle>9.8,0,9,6.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Times New Roman,12</Font>
              <GrowToHeight>True</GrowToHeight>
              <Guid>2de88985b0ce4e779dc35476baf0c20c</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text16</Name>
              <Page isRef="4" />
              <Parent isRef="25" />
              <Text>Сдал:
Начальник УПЭ ЛС
РГП на ПХВ «Национальный центр экспертизы лекарственных средств, изделий медицинского назначения и медицинской техники»


Главный специалист УПЭ ЛС
РГП на ПХВ «Национальный центр экспертизы лекарственных средств, изделий медицинского назначения и медицинской техники»


М.П.</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>,,,,WordWrap=True,A=0</TextOptions>
              <Type>Expression</Type>
            </Text16>
          </Components>
          <Conditions isList="true" count="0" />
          <Name>ReportSummaryBand1</Name>
          <Page isRef="4" />
          <Parent isRef="4" />
        </ReportSummaryBand1>
      </Components>
      <Conditions isList="true" count="0" />
      <Guid>430091df5a4b48849d614647f8ce2c9f</Guid>
      <Margins>1,1,1,1</Margins>
      <Name>Page1</Name>
      <PageHeight>29.7</PageHeight>
      <PageWidth>21</PageWidth>
      <Report isRef="0" />
      <Watermark Ref="28" type="Stimulsoft.Report.Components.StiWatermark" isKey="true">
        <Font>Arial,100</Font>
        <TextBrush>[50:0:0:0]</TextBrush>
      </Watermark>
    </Page1>
  </Pages>
  <PrinterSettings Ref="29" type="Stimulsoft.Report.Print.StiPrinterSettings" isKey="true" />
  <ReferencedAssemblies isList="true" count="8">
    <value>System.Dll</value>
    <value>System.Drawing.Dll</value>
    <value>System.Windows.Forms.Dll</value>
    <value>System.Data.Dll</value>
    <value>System.Xml.Dll</value>
    <value>Stimulsoft.Controls.Dll</value>
    <value>Stimulsoft.Base.Dll</value>
    <value>Stimulsoft.Report.Dll</value>
  </ReferencedAssemblies>
  <ReportAlias>Report</ReportAlias>
  <ReportChanged>5/14/2017 2:54:54 PM</ReportChanged>
  <ReportCreated>5/13/2017 12:32:55 PM</ReportCreated>
  <ReportFile>D:\PROJECTS\krypton pro\NCLS\source\Expertise\PW.Prism\Reports\List\ActPrimary.mrt</ReportFile>
  <ReportGuid>29f83a86b5d246009d863daf084d9b2d</ReportGuid>
  <ReportName>Report</ReportName>
  <ReportUnit>Centimeters</ReportUnit>
  <ReportVersion>2015.1.0</ReportVersion>
  <Script>using System;
using System.Drawing;
using System.Windows.Forms;
using System.Data;
using Stimulsoft.Controls;
using Stimulsoft.Base.Drawing;
using Stimulsoft.Report;
using Stimulsoft.Report.Dialogs;
using Stimulsoft.Report.Components;

namespace Reports
{
    public class Report : Stimulsoft.Report.StiReport
    {
        public Report()        {
            this.InitializeComponent();
        }

        #region StiReport Designer generated code - do not modify
		#endregion StiReport Designer generated code - do not modify
		
		
		public string ToCurrencyWordRuKZT(decimal _amount, bool _firstCapital){
			return RuDateAndMoneyConverter.CurrencyToTxt((double)_amount,_firstCapital);		
		}
		
    }
	
	public enum TextCase { Nominative/*Кто? Что?*/, Genitive/*Кого? Чего?*/, Dative/*Кому? Чему?*/, Accusative/*Кого? Что?*/, Instrumental/*Кем? Чем?*/, Prepositional/*О ком? О чём?*/ };

	public static class RuDateAndMoneyConverter
	{
		static string[] monthNamesGenitive =
			{
			"", "января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря" 
			};

		static string zero = "ноль";
		static string firstMale = "один";
		static string firstFemale = "одна";
		static string firstFemaleAccusative = "одну";
		static string firstMaleGenetive = "одно";
		static string secondMale = "два";
		static string secondFemale = "две";
		static string secondMaleGenetive = "двух";
		static string secondFemaleGenetive = "двух";

		static string[] from3till19 = 
			{
			"", "три", "четыре", "пять", "шесть",
			"семь", "восемь", "девять", "десять", "одиннадцать",
			"двенадцать", "тринадцать", "четырнадцать", "пятнадцать",
			"шестнадцать", "семнадцать", "восемнадцать", "девятнадцать"
			};
		static string[] from3till19Genetive = 
			{
			"", "трех", "четырех", "пяти", "шести",
			"семи", "восеми", "девяти", "десяти", "одиннадцати",
			"двенадцати", "тринадцати", "четырнадцати", "пятнадцати",
			"шестнадцати", "семнадцати", "восемнадцати", "девятнадцати"
			};
		static string[] tens =
			{
			"", "двадцать", "тридцать", "сорок", "пятьдесят",
			"шестьдесят", "семьдесят", "восемьдесят", "девяносто"
			};
		static string[] tensGenetive =
			{
			"", "двадцати", "тридцати", "сорока", "пятидесяти",
			"шестидесяти", "семидесяти", "восьмидесяти", "девяноста"
			};
		static string[] hundreds =
			{
			"", "сто", "двести", "триста", "четыреста",
			"пятьсот", "шестьсот", "семьсот", "восемьсот", "девятьсот"
			};
		static string[] hundredsGenetive =
			{
			"", "ста", "двухсот", "трехсот", "четырехсот",
			"пятисот", "шестисот", "семисот", "восемисот", "девятисот"
			};
		static string[] thousands =
			{
			"", "тысяча", "тысячи", "тысяч"
			};
		static string[] thousandsAccusative =
			{
			"", "тысячу", "тысячи", "тысяч"
			};
		static string[] millions =
			{
			"", "миллион", "миллиона", "миллионов"
			};
		static string[] billions =
			{
			"", "миллиард", "миллиарда", "миллиардов"
			};
		static string[] trillions =
			{
			"", "трилион", "трилиона", "триллионов"
			};
		static string[] rubles =
			{
			"", "тенге", "тенге", "тенге"
			};
		static string[] copecks =
			{
			"", "тиын", "тиына", "тиын"
			};
		/// &lt;summary&gt;
		/// «07» января 2004 [+ _year(:года)]
		/// &lt;/summary&gt;
		/// &lt;param name="_date"&gt;&lt;/param&gt;
		/// &lt;param name="_year"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public static string DateToTextLong(DateTime _date, string _year)
		{
			return String.Format("«{0}» {1} {2}",
				_date.Day.ToString("D2"),
				MonthName(_date.Month, TextCase.Genitive),
				_date.Year.ToString()) + ((_year.Length != 0) ? " " : "") + _year;
		}

		/// &lt;summary&gt;
		/// «07» января 2004
		/// &lt;/summary&gt;
		/// &lt;param name="_date"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public static string DateToTextLong(DateTime _date)
		{
			return String.Format("«{0}» {1} {2}",
				_date.Day.ToString("D2"),
				MonthName(_date.Month, TextCase.Genitive),
				_date.Year.ToString());
		}
		/// &lt;summary&gt;
		/// II квартал 2004
		/// &lt;/summary&gt;
		/// &lt;param name="_date"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public static string DateToTextQuarter(DateTime _date)
		{
			return NumeralsRoman(DateQuarter(_date)) + " квартал " + _date.Year.ToString();
		}
		/// &lt;summary&gt;
		/// 07.01.2004
		/// &lt;/summary&gt;
		/// &lt;param name="_date"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public static string DateToTextSimple(DateTime _date)
		{
			return String.Format("{0:dd.MM.yyyy}", _date);
		}
		public static int DateQuarter(DateTime _date)
		{
			return (_date.Month - 1) / 3 + 1;
		}

		static bool IsPluralGenitive(int _digits)
		{
			if (_digits &gt;= 5 || _digits == 0)
				return true;

			return false;
		}
		static bool IsSingularGenitive(int _digits)
		{
			if (_digits &gt;= 2 &amp;&amp; _digits &lt;= 4)
				return true;

			return false;
		}
		static int lastDigit(long _amount)
		{
			long amount = _amount;

			if (amount &gt;= 100)
				amount = amount % 100;

			if (amount &gt;= 20)
				amount = amount % 10;

			return (int)amount;
		}
		/// &lt;summary&gt;
		/// Десять тысяч рублей 67 копеек
		/// &lt;/summary&gt;
		/// &lt;param name="_amount"&gt;&lt;/param&gt;
		/// &lt;param name="_firstCapital"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public static string CurrencyToTxt(double _amount, bool _firstCapital)
		{
			//Десять тысяч рублей 67 копеек
			long rublesAmount = (long)Math.Floor(_amount);
			long copecksAmount = ((long)Math.Round(_amount * 100)) % 100;
			int lastRublesDigit = lastDigit(rublesAmount);
			int lastCopecksDigit = lastDigit(copecksAmount);

			string s = NumeralsToTxt(rublesAmount, TextCase.Nominative, true, _firstCapital) + " ";

			if (IsPluralGenitive(lastRublesDigit))
			{
				s += rubles[3] + " ";
			}
			else if (IsSingularGenitive(lastRublesDigit))
			{
				s += rubles[2] + " ";
			}
			else
			{
				s += rubles[1] + " ";
			}

			s += NumeralsToTxt(copecksAmount, TextCase.Nominative, true, _firstCapital) + " "; //String.Format("{0:00} ", copecksAmount);

			if (IsPluralGenitive(lastCopecksDigit))
			{
				s += copecks[3] + " ";
			}
			else if (IsSingularGenitive(lastCopecksDigit))
			{
				s += copecks[2] + " ";
			}
			else
			{
				s += copecks[1] + " ";
			}

			return s.Trim();
		}
		/// &lt;summary&gt;
		/// 10 000 (Десять тысяч) рублей 67 копеек
		/// &lt;/summary&gt;
		/// &lt;param name="_amount"&gt;&lt;/param&gt;
		/// &lt;param name="_firstCapital"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public static string CurrencyToTxtFull(double _amount, bool _firstCapital)
		{
			//10 000 (Десять тысяч) рублей 67 копеек
			long rublesAmount = (long)Math.Floor(_amount);
			long copecksAmount = ((long)Math.Round(_amount * 100)) % 100;
			int lastRublesDigit = lastDigit(rublesAmount);
			int lastCopecksDigit = lastDigit(copecksAmount);

			string s = String.Format("{0:N0} ({1}) ", rublesAmount, NumeralsToTxt(rublesAmount, TextCase.Nominative, true, _firstCapital));

			if (IsPluralGenitive(lastRublesDigit))
			{
				s += rubles[3] + " ";
			}
			else if (IsSingularGenitive(lastRublesDigit))
			{
				s += rubles[2] + " ";
			}
			else
			{
				s += rubles[1] + " ";
			}

			s += String.Format("{0:00} ", copecksAmount);

			if (IsPluralGenitive(lastCopecksDigit))
			{
				s += copecks[3] + " ";
			}
			else if (IsSingularGenitive(lastCopecksDigit))
			{
				s += copecks[2] + " ";
			}
			else
			{
				s += copecks[1] + " ";
			}

			return s.Trim();
		}
		/// &lt;summary&gt;
		/// 10 000 рублей 67 копеек  
		/// &lt;/summary&gt;
		/// &lt;param name="_amount"&gt;&lt;/param&gt;
		/// &lt;param name="_firstCapital"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public static string CurrencyToTxtShort(double _amount, bool _firstCapital)
		{
			//10 000 рублей 67 копеек        
			long rublesAmount = (long)Math.Floor(_amount);
			long copecksAmount = ((long)Math.Round(_amount * 100)) % 100;
			int lastRublesDigit = lastDigit(rublesAmount);
			int lastCopecksDigit = lastDigit(copecksAmount);

			string s = String.Format("{0:N0} ", rublesAmount);

			if (IsPluralGenitive(lastRublesDigit))
			{
				s += rubles[3] + " ";
			}
			else if (IsSingularGenitive(lastRublesDigit))
			{
				s += rubles[2] + " ";
			}
			else
			{
				s += rubles[1] + " ";
			}

			s += String.Format("{0:00} ", copecksAmount);

			if (IsPluralGenitive(lastCopecksDigit))
			{
				s += copecks[3] + " ";
			}
			else if (IsSingularGenitive(lastCopecksDigit))
			{
				s += copecks[2] + " ";
			}
			else
			{
				s += copecks[1] + " ";
			}

			return s.Trim();
		}
		static string MakeText(int _digits, string[] _hundreds, string[] _tens, string[] _from3till19, string _second, string _first, string[] _power)
		{
			string s = "";
			int digits = _digits;

			if (digits &gt;= 100)
			{
				s += _hundreds[digits / 100] + " ";
				digits = digits % 100;
			}
			if (digits &gt;= 20)
			{
				s += _tens[digits / 10 - 1] + " ";
				digits = digits % 10;
			}

			if (digits &gt;= 3)
			{
				s += _from3till19[digits - 2] + " ";
			}
			else if (digits == 2)
			{
				s += _second + " ";
			}
			else if (digits == 1)
			{
				s += _first + " ";
			}

			if (_digits != 0 &amp;&amp; _power.Length &gt; 0)
			{
				digits = lastDigit(_digits);

				if (IsPluralGenitive(digits))
				{
					s += _power[3] + " ";
				}
				else if (IsSingularGenitive(digits))
				{
					s += _power[2] + " ";
				}
				else
				{
					s += _power[1] + " ";
				}
			}

			return s;
		}
    
		/// &lt;summary&gt;
		/// реализовано для падежей: именительный (nominative), родительный (Genitive),  винительный (accusative)
		/// &lt;/summary&gt;
		/// &lt;param name="_sourceNumber"&gt;&lt;/param&gt;
		/// &lt;param name="_case"&gt;&lt;/param&gt;
		/// &lt;param name="_isMale"&gt;&lt;/param&gt;
		/// &lt;param name="_firstCapital"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public static string NumeralsToTxt(long _sourceNumber, TextCase _case, bool _isMale, bool _firstCapital)
		{
			string s = "";
			long number = _sourceNumber;
			int remainder;
			int power = 0;

			if ((number &gt;= (long)Math.Pow(10, 15)) || number &lt; 0)
			{
				return "";
			}

			while (number &gt; 0)
			{
				remainder = (int)(number % 1000);
				number = number / 1000;

				switch (power)
				{
					case 12:
						s = MakeText(remainder, hundreds, tens, from3till19, secondMale, firstMale, trillions) + s;
						break;
					case 9:
						s = MakeText(remainder, hundreds, tens, from3till19, secondMale, firstMale, billions) + s;
						break;
					case 6:
						s = MakeText(remainder, hundreds, tens, from3till19, secondMale, firstMale, millions) + s;
						break;
					case 3:
						switch (_case)
						{
							case TextCase.Accusative:
								s = MakeText(remainder, hundreds, tens, from3till19, secondFemale, firstFemaleAccusative, thousandsAccusative) + s;
								break;
							default:
								s = MakeText(remainder, hundreds, tens, from3till19, secondFemale, firstFemale, thousands) + s;
								break;
						}
						break;
					default:
						string[] powerArray = { };
						switch (_case)
						{
							case TextCase.Genitive:
								s = MakeText(remainder, hundredsGenetive, tensGenetive, from3till19Genetive, _isMale ? secondMaleGenetive : secondFemaleGenetive, _isMale ? firstMaleGenetive : firstFemale, powerArray) + s;
								break;
							case TextCase.Accusative:
								s = MakeText(remainder, hundreds, tens, from3till19, _isMale ? secondMale : secondFemale, _isMale ? firstMale : firstFemaleAccusative, powerArray) + s;
								break;
							default:
								s = MakeText(remainder, hundreds, tens, from3till19, _isMale ? secondMale : secondFemale, _isMale ? firstMale : firstFemale, powerArray) + s;
								break;
						}
						break;
				}

				power += 3;
			}

			if (_sourceNumber == 0)
			{
				s = zero + " ";
			}

			if (s != "" &amp;&amp; _firstCapital)
				s = s.Substring(0, 1).ToUpper() + s.Substring(1);

			return s.Trim();
		}
		public static string NumeralsDoubleToTxt(double _sourceNumber, int _decimal, TextCase _case, bool _firstCapital)
		{
			long decNum = (long)Math.Round(_sourceNumber * Math.Pow(10, _decimal)) % (long)(Math.Pow(10, _decimal));

			string s = String.Format(" {0} целых {1} сотых", NumeralsToTxt((long)_sourceNumber, _case, true, _firstCapital),
				NumeralsToTxt((long)decNum, _case, true, false));
			return s.Trim();
		}
		/// &lt;summary&gt;
		/// название м-ца
		/// &lt;/summary&gt;
		/// &lt;param name="_month"&gt;с единицы&lt;/param&gt;
		/// &lt;param name="_case"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public static string MonthName(int _month, TextCase _case)
		{
			string s = "";

			if (_month &gt; 0 &amp;&amp; _month &lt;= 12)
			{
				switch (_case)
				{
					case TextCase.Genitive:
						s = monthNamesGenitive[_month];
						break;
				}
			}

			return s;
		}
		public static string NumeralsRoman(int _number)
		{
			string s = "";

			switch (_number)
			{
				case 1: s = "I"; break;
				case 2: s = "II"; break;
				case 3: s = "III"; break;
				case 4: s = "IV"; break;
			}

			return s;
		}
	}
}
</Script>
  <ScriptLanguage>CSharp</ScriptLanguage>
  <Styles isList="true" count="0" />
</StiSerializer>