@using PW.Ncels.Database.DataModel
@model Guid
@{
//Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

<script>
    InitFilterContractAllGrid('@Model.ToString()');
</script>

@(Html.Kendo().Splitter()
            .HtmlAttributes(new { @class = "pwSplitter k-block" })
            .Name(("splitter" + Model))
            .Panes(panes =>
            {
            panes.Add()
                .Size("250px")
                .Collapsible(true)
                .MaxSize("500px")
                .MinSize("250px")
                .Content(
                @<div class="pwPanelBar">
                    @(Html.Kendo().PanelBar().HtmlAttributes(new { @class = "pwPanelBar" })
                               .Name("panelbar" + Model)
                               .ExpandMode(PanelBarExpandMode.Multiple)
                               .ExpandAll(true)
                               .HtmlAttributes(new { style = "width:auto;" })
                               .Events(e => e.Select("panelInstallationSelect"))
                               .Items(panelbar =>
                               {
                                   panelbar.Add().Expanded(true);
                                   panelbar.Add().Text("Тип")
                                                                   .Items(projects =>
                                                                   {
                                                                       projects.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Все_394__00).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "" }, { "ItemType", "" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("Виварий ВО").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Виварий ВО" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("Виварий ИО").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Виварий ИО" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("Виварий СИ").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Виварий СИ" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ВО ЛФИ").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ВО ЛФИ" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("Всего Виварий").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Всего Виварий" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ИО ЛФИ").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ИО ЛФИ" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ЛБИ ВО").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ЛБИ ВО" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ЛБИ Всего").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ЛБИ Всего" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ЛБИ ИО").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ЛБИ ИО" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ЛБИ СИ").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ЛБИ СИ" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ЛИМИ ВО").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ЛИМИ ВО" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ЛИМИ Всего").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ЛИМИ Всего" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ЛИМИ ИО").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ЛИМИ ИО" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ЛИМИ СИ").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ЛИМИ СИ" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ЛФИ Всего").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ЛФИ Всего" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("СИ ЛФИ").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "СИ ЛФИ" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ФХЛ").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ФХЛ" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ФХЛ ВО").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ФХЛ ВО" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ФХЛ Всего").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ФХЛ Всего" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ФХЛ ИО").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ФХЛ ИО" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                       projects.Add().Text("ФХЛ СИ").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ФХЛ СИ" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                                                   });

                               })
                    )
                </div>
                );

            panes.Add().Scrollable(false).Size("100%").Content(
                @<div class="pwPanelBar">
                    @(Html.Kendo().Grid<Installation>()
	.Name("gridInstallationList" + Model)
	.Columns(columns =>
	{
		columns.Bound(p => p.Type).Title("Тип").Width(150);
		columns.Bound(p => p.Name).Title("Наименование").Width(150);
		columns.Bound(p => p.Model).Title("Модель").Width(100);
		columns.Bound(p => p.ManufacturerFactory).Title("Завод изготовитель").Width(150);
		columns.Bound(p => p.FactoryNumber).Title("Заводской номер").Width(150);
		columns.Bound(p => p.InvertoryNumber).Title("Инвентарный номер").Width(150);
		columns.Bound(p => p.LaboratoryRoom).Title("Помещение").Width(150);
		columns.Bound(p => p.Country).Title("Страна-изготовитель").Width(150);
		columns.Bound(p => p.InstallationYear).Title("Год инсталляции").Width(150);
		columns.Bound(p => p.Note).Title("Примечание").Width(150);
		columns.Bound(p => p.State).Title("Состояние").Width(150); // State or StateIn
		columns.Bound(p => p.CheckDate).Title("Дата поверки").Width(150);
		//columns.Command(command => { command.Edit(); command.Destroy(); command.Custom("Отправить").Click("editDetails"); }).Width(200);
	})
   //.ToolBar(toolbar => toolbar.Create())
   //.Editable(editable => editable.Mode(GridEditMode.PopUp))
   //.Groupable()
   .Filterable()
	.Sortable()
	.Pageable()
	.Scrollable()
	 .HtmlAttributes(new { @class = "pwGrid" })
	.DataSource(dataSource => dataSource
		.Ajax()
			 .Model(model =>
			 {
				 model.Id(p => p.Id);
			 })
		.PageSize(20)
			.Read(read => read.Action("Read", "Installation")))

                    )
                </div>
             );
            }))
<script>
    resizeGrid('@("#gridInstallationList" + Model)');

</script>
