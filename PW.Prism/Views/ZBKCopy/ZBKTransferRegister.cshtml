@using PW.Ncels.Database.Constants
@using PW.Ncels.Database.DataModel
@using PW.Ncels.Database.Helpers
@using PW.Ncels.Database.Models
@{
    var currentUser = UserHelper.GetCurrentEmployee().Id;
    var controllerName = @ViewContext.RouteData.GetRequiredString("controller");
}
@helper GridToolbarTemplate()
    {

        <div class="pull-right">
            <div style="display: inline-block" id="columnMenu" class="custom-grid-menu"></div>
            <div style="display: inline-block">
                @( Html.Kendo().Button().Name("reload")
                               .Content("")
                               .ImageUrl("/Content/images/reload.png"))
            </div>
        </div>
}

@(Html.Kendo().Splitter()
          .HtmlAttributes(new { @class = "pwSplitter k-block" })
          .Name(("splitter"))
          .Panes(panes =>
          {
              panes.Add().Scrollable(false).Size("100%").Content(
                @<div class="pwPanelBar">
                    @( Html.Kendo().Grid<OBK_ZBKTransferRegisterView>()
                                     .Name("OBK_ZBKTransferRegisterView")                                                       

                                     .Columns(columns =>
                                     {                                                            
                                         columns.Bound(p => p.Id).ClientTemplate("#= renderNum(data) #").Title("№ n/n").Width(40);
                                         columns.Bound(p => p.SendDate).Format("{0:dd.MM.yyyy}").Title("Дата передачи ЗБК").Width(100);
                                         columns.Bound(p => p.Declarant).Title("Наименование заявителя").Width(150);
                                         columns.Bound(p => p.DrugFormFullName).Title("Наименование продукции").Width(300);
                                         columns.Bound(p => p.RequestType).Title("Оригинал/Копия").Width(100);
                                         columns.Bound(p => p.ConclusionNumber).Title("Номер ЗБК").Width(150);
                                         columns.Bound(p => p.ExtraditeDate).Format("{0:dd.MM.yyyy}").Title("Дата выдачи").Width(100);
                                         columns.Bound(p => p.ReceiverFIO).Title("Получатель").Width(150);

                                     })
                                     .AutoBind(false)
                                     .Reorderable(reorderable => reorderable.Columns(true))
                                     .Resizable(resizable => resizable.Columns(true))
                                     .ToolBar(toolbar => { toolbar.Template(GridToolbarTemplate().ToHtmlString()); })
                                     .Groupable()
                                     .Sortable()
                                     .Filterable()
                                     .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                                     .Scrollable(scrollable => scrollable.Virtual(true))
                                     .Pageable()
                                     .Events(o => o.DataBinding("function() { row = (this.dataSource.page() - 1) * this.dataSource.pageSize();}"))
                                     .HtmlAttributes(new { @class = "pwGrid" })
                                     .DataSource(dataSource => dataSource
                                         .Ajax()
                                         .Sort(sort => { sort.Add("SendDate").Descending(); })
                                         .PageSize(50)
                                         .Read(read => read.Action("ZBKTransferRegisterList", "ZBKCopy"))
                                        )
                    ))

                </div>
                          );
                  }))

<script>

    var row = 0;

    function renderNum(data)
    {
        return ++row;
    }

    $(document).ready(function ()
    {
        $("#OBK_ZBKTransferRegisterView").data("kendoGrid").dataSource.read();

    });
</script>

