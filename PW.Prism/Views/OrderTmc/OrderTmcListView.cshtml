@using PW.Ncels.Database.DataModel
@using PW.Ncels.Database.Models
@using PW.Ncels.Database.Recources
<!-- Список ТМЦ на получение -->
@model  PW.Prism.ViewModels.Lims.OrderTmcListViewModel
<script>
    var OrderTMCList = {
        _reload: function () {
            var grid = $('@("#gridOrderTmcList" + Model.Id)').data("kendoGrid");
            grid.dataSource.read();
        },
        _syncHandler: function (e) {
            this.read();
        },
        _callConfirmDialog: function (dataItem, url, text) {
            var window = $("#TaskCommandWindow");
            window.kendoWindow({

                width: "550px",
                height: "auto",
                modal: true,
                title: 'Заказ ТМЦ',
                actions: ["Close"],
                content: '@Url.Action("ConfirmDialog", "Dialog")?Id=' + dataItem.Id
                + '&url=' + url
                + '&text=' + text
            });
            window.data("kendoWindow").gridId = 'gridOrderTmcList' + '@Model.Id';

            window.data("kendoWindow").center();
            window.data("kendoWindow").open();
        },
        sendRequestFn: function () {
            var grid = $('#gridOrderTmcList' + '@Model.Id').data('kendoGrid');
            var selectedRow = grid.select();
            var dataItem = grid.dataItem(selectedRow);

            var text = "Запросить?";
            var url = encodeURIComponent('@Url.Action("ConfirmSendOrder", "OrderTmc")?tmcOutId=' +
                dataItem.TmcOutId);
            OrderTMCList._callConfirmDialog(dataItem, url, text);
        },
        repealFn: function () {
            var grid = $('#gridOrderTmcList' + '@Model.Id').data('kendoGrid');
            var selectedRow = grid.select();
            var dataItem = grid.dataItem(selectedRow);

            var text = "Аннулировать?";
            var url = encodeURIComponent('@Url.Action("RepealOrder", "OrderTmc")?tmcOutId=' +
                dataItem.TmcOutId);
            OrderTMCList._callConfirmDialog(dataItem, url, text);
        },
        editFn: function (e) {
            var grid = $('#gridOrderTmcList' + '@Model.Id').data('kendoGrid');
            var selectedRow = grid.select();
            var dataItem = grid.dataItem(selectedRow);
            var window = $("#TaskCommandWindow");
            window.kendoWindow({
                width: "550px",
                height: "auto",
                modal: true,
                title: 'Запрос ТМЦ',
                actions: ["Close"],
                position: {
                    top: 100,
                    left: "30%"
                },
                content: '/OrderTmc/OrderTmcView?tmcId=' + dataItem.TmcId + '&id=' + dataItem.TmcOutId
                + '&note=' + dataItem.Note + '&isEdit=true'
            });
            window.data("kendoWindow").dialogCallback = function() {
                OrderTMCList._reload();
            };
            window.data("kendoWindow").open();
        },
        deleteFn: function () {
            var grid = $('#gridOrderTmcList' + '@Model.Id').data('kendoGrid');
            var selectedRow = grid.select();
            if (selectedRow)
                grid.removeRow(selectedRow);
        },
        dataBoundHandler: function () {
            var grid = this;
            grid.tbody.find("tr[role='row']").each(function () {
                var model = grid.dataItem(this);

                if (model.StateType == 1 || model.StateType == 2) {
                    $(this).find(".k-grid-edit").addClass("k-state-disabled");
                    $(this).find(".k-grid-delete").addClass("k-state-disabled");
                    $(this).find(".k-grid-send").addClass("k-state-disabled");
                }
            });
        },
        changeHandler: function (e) {
            var data = this.dataItem(this.select());

            $('#custombtnSendRequest').removeClass("k-state-disabled");
            $('#custombtnRepeal').removeClass("k-state-disabled");
            $('#custombtnEdit').removeClass("k-state-disabled");
            $('#custombtnDelete').removeClass("k-state-disabled");


            if (data.StateType == '@TmcOut.TmcOutStatuses.Ordered' ||
                    data.StateType == '@TmcOut.TmcOutStatuses.Sended') {
                $('#custombtnSendRequest').addClass("k-state-disabled");
                $('#custombtnEdit').addClass("k-state-disabled");
                $('#custombtnDelete').addClass("k-state-disabled");
            } else if (data.StateType == '@TmcOut.TmcOutStatuses.New' ||
                    data.StateType == '@TmcOut.TmcOutStatuses.Rejected' ||
                    data.StateType == '@TmcOut.TmcOutStatuses.Repealed') {
                //$('#custombtnSendRequest').addClass("k-state-disabled");
                $('#custombtnRepeal').addClass("k-state-disabled");
                //$('#custombtnEdit').addClass("k-state-disabled");
                //$('#custombtnDelete').addClass("k-state-disabled");
            } else if (data.StateType == '@TmcOut.TmcOutStatuses.Issued') {
                $('#custombtnSendRequest').addClass("k-state-disabled");
                $('#custombtnRepeal').addClass("k-state-disabled");
                $('#custombtnEdit').addClass("k-state-disabled");
                $('#custombtnDelete').addClass("k-state-disabled");
            }
        }
    };
</script>

<div id="pwSix">
    @(Html.Kendo().Button().Name("reload" + Model.Id)
            .HtmlAttributes(new { @class = "pwWidth100 pwButtonReload" })
            .Content("")
            .ImageUrl("/Content/images/reload.png")
    )
</div>

@(Html.Kendo().Grid<LimsTmcOutView>()
    .Name("gridOrderTmcList" + Model.Id)
    .Columns(columns =>
    {
        columns.Bound(p => p.Name).Title("Наименование ТМЦ").Width(150);
        columns.Bound(p => p.Code).Title("Код").Width(100);
        columns.Bound(p => p.Count).Format("{0:n6}").Title("Количество/объем на получение").Width(100);
        columns.Bound(p => p.CountFact).Format("{0:n6}").Title("Количество/объем получен").Width(100);
        columns.Bound(p => p.MeasureTypeConvertName).Title("Единица измерения").Width(100);
        columns.Bound(p => p.OutTypeDicValue).Title("Вид получения").Width(150);
        columns.Bound(p => p.OwnerEmployeeFullName).Title("ФИО МОЛ").Width(150);
        columns.Bound(p => p.CreatedEmployeeFullName).Title("ФИО сотрудника").Width(150);
        columns.Bound(p => p.StateTypeValue).Title("Статус").Sortable(false).Filterable(false).Width(150);
        columns.Bound(p => p.CreatedDate).Format("{0:dd.MM.yyyy}").Title("Дата создания").Width(100);
        columns.Bound(p => p.Note).Title("Описание (цель использования)").Width(150);
        columns.Bound(p => p.Comment).Title("Комментарии").Width(150);
    })
    .ColumnMenu(c => c.Columns(true))
    .Reorderable(reorder => reorder.Columns(true))
    .ToolBar(toolbar =>
    {
        toolbar.Custom().Name("btnSendRequest").Text("Запросить").HtmlAttributes(new { Id = "custombtnSendRequest", @class= "k-state-disabled" });
        toolbar.Custom().Name("btnRepeal").Text("Аннулировать").HtmlAttributes(new { Id = "custombtnRepeal", @class = "k-state-disabled" });
        toolbar.Custom().Name("btnEdit").Text("Редактировать").HtmlAttributes(new { Id = "custombtnEdit", @class = "k-state-disabled" });
        toolbar.Custom().Name("btnDelete").Text("Удалить").HtmlAttributes(new { Id = "custombtnDelete", @class = "k-state-disabled" });
    })
    .Groupable()
    .Filterable()
    .Sortable()
    .Pageable(s => s.Refresh(true))
    .Scrollable()
    .Resizable(s => s.Columns(true))
    .Selectable(c => c.Mode(GridSelectionMode.Single))
    .HtmlAttributes(new { @class = "pwGrid" })
    .DataSource(dataSource => dataSource
        .Ajax().Model(model =>
        {
            model.Id(p => p.Id);
        })
        .PageSize(20)
        .Read(read => read.Action("ReadData", "OrderTmc"))
        .Destroy(destroy => destroy.Action("Delete", "OrderTmc"))
    )
    .Events(c =>
    {
        c.Change("OrderTMCList.changeHandler");
        //c.DataBound("dataBoundHandler");
    })
)

<script>
    (function () {
        var name = '@Model.Id';

        resizeGrid3("#gridOrderTmcList" + name, 110);

        $('#reload' + name).click(function (e) {
            OrderTMCList._reload();
        });

        $("#custombtnSendRequest").click(function (e) {
            e.preventDefault();
            OrderTMCList.sendRequestFn();
            return false;
        });

        $("#custombtnRepeal").click(function (e) {
            e.preventDefault();
            OrderTMCList.repealFn();
            return false;
        });

        $("#custombtnEdit").click(function (e) {
            e.preventDefault();
            OrderTMCList.editFn();
            return false;
        });

        $("#custombtnDelete").click(function (e) {
            //e.preventDefault();
            OrderTMCList.deleteFn();
            return false;
        });
    })();
</script>


