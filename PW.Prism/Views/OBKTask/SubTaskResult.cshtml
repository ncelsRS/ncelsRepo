@using System.Web.UI.WebControls
@using Quartz.Util
@model PW.Ncels.Database.Models.OBK.OBKSubTaskResult

@{
    var tab1 = "tab-1" + Model.Id;
    var tab1b = "#" + tab1;
    var tab2 = "tab-2" + Model.Id;
    var tab2b = "#" + tab2;
    var tab3 = "tab-3" + Model.Id;
    var tab3b = "#" + tab3;
}

<style>
    .add-commnet {
        background-color: #dd4353;
        color: #2e2e2e;
    }
</style>

<div style="display: none;" id="labMarkId">
    @Html.DropDownList("LaboratoryMarkId", (IEnumerable<SelectListItem>)(ViewData["LabMarks"]), String.Empty, new { @class = "form-control", onchange = "javascript:GetRegulation(this.value, this.closest('tr'));" })
</div>

<div id="resultSubTaskPanel_@Model.Id" class="panel panel-default">
    <div class="panel-heading">
        Протокол № @Model.SubTaskNumber
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group">
                    @*<a href="@Url.Action("GetInstruction","OBKTask", new { registerId = Model.RegisterId})">Скачать АНД</a>*@
                    <div class="row">
                        <div class="col-lg-12">
                            @*<div>&nbsp;</div>
                                <label>Инструкции</label>*@
                            <div id="noinstructions_@Model.Id" style="display: none">
                                <span>Нет доступных инструкций</span>
                            </div>
                            <ul id="listinstructions_@Model.Id" style="display: none"></ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="tabs-container">
                    <ul class="nav nav-tabs">
                        <li class="active"><a data-toggle="tab" onclick="allRegilation()" href="@tab1b">Данные протокола</a></li>
                        <li class=""><a data-toggle="tab" href="@tab2b">Показатели результаты испытаний</a></li>
                        @if (Model.SubTaskCoExecutorResult != null && Model.SubTaskCoExecutorResult.Count > 0)
                        {
                            <li class=""><a data-toggle="tab" href="@tab3b">Показатели результатов испытаний соисполнителей</a></li>
                        }
                    </ul>
                    <div class="tab-content">
                        <div id="@tab1" class="tab-pane active">
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            <label>Наименование продукции</label>
                                            <textarea class="form-control" disabled="disabled" type="text">@Model.ProductNameKz</textarea>
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            <label>Общий НД</label>
                                            <textarea class="form-control" disabled="disabled" type="text">@Model.NdProduct</textarea>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class="form-group">
                                            <label>НД на методы испытаний</label>
                                            @if (Model.Type == "create")
                                            {<textarea class="form-control" disabled="disabled" id="textRegulation" type="text"></textarea>}
                                            else
                                            {<textarea class="form-control" disabled="disabled" type="text">@Model.Regulation</textarea>}
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12">
                                        @if (Model.Type == "create")
                                        {<button type="button" class="btn btn-default" id="saveResultBtn" onclick="saveResult()">Сохранить</button>}
                                        @*else
                                            {<button type="button" class="btn btn-default" onclick="location.href = '@Url.Action("SubTaskProtokol", "OBKTask", new { tmid = Model.Id})'">Печатная форма протокола</button>}*@
                                        <button type="button" class="btn btn-default" onclick="signBtn()">Подписать</button>
                                        <button type="button" class="btn btn-default">Отмена</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="@tab2" class="tab-pane">
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div hidden="hidden" id="panelTaskComment_@Model.TaskExecutorId">
                                            <div id="taskComment_@Model.TaskExecutorId"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <table id="tableExpertResult_@Model.Id" class="table table-bordered">
                                            <thead>
                                                <tr>
                                                    <td></td>
                                                    <td>Показатель</td>
                                                    <td>Обозначение нормативных документов на методы испытаний</td>
                                                    <td>Требования НД</td>
                                                    <td>Фактически полученный результат</td>
                                                    <td>Т 0С и влажность (%)</td>
                                                    <td>Результат испытаний</td>
                                                    <td></td>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.Type == "create")
                                                {
                                                    <tr rowid="1">
                                                        <td>1</td>
                                                        <td>
                                                            @Html.DropDownList("LaboratoryMarkId", (IEnumerable<SelectListItem>)(ViewData["LabMarks"]),
                                                                 String.Empty, new
                                                                 {
                                                                     @class = "form-control subtask-control",
                                                                     onchange = "javascript:GetRegulation(this.value, this.closest('tr'));",
                                                                 })
                                                        </td>

                                                        <td><select id="regulation_1" name="regulation" class="form-control subtask-control"></select></td>
                                                        <td><input type="text" id="claim" class="form-control subtask-control" /></td>
                                                        <td><input type="text" id="factResult" class="form-control subtask-control" /></td>
                                                        <td><input type="text" id="humidity" class="form-control subtask-control" /></td>
                                                        <td>@Html.DropDownList("ExpertiseResult", (IEnumerable<SelectListItem>)ViewData["ExpertiseResults"], String.Empty, new { @class = "form-control subtask-control", value = "" })</td>
                                                        <td></td>
                                                    </tr>
                                                }
                                                else
                                                {
                                                    for (int i = 0; i < Model.SubTaskIndicator.Count; i++)
                                                    {
                                                        var rowId = i + 1;
                                                        var expResult = Model.SubTaskIndicator[i].ExpertiseResult ? "Соотвествует требованиям" : " Не соотвествет требованиям";
                                                        if (Model.SubTaskIndicator[i].TaskComment)
                                                        {
                                                            //var lmid = Model.SubTaskIndicator[i].LaboratoryMarkId;
                                                            //var lmNdid = Model.SubTaskIndicator[i].RegulationId;
                                                            <tr rowid="@rowId" class="add-commnet" rcId="@Model.SubTaskIndicator[i].ResearchCenterId" teId="@Model.TaskExecutorId">
                                                                <td>@rowId</td>
                                                                <td>@Html.DropDownList("LaboratoryMarkId", (IEnumerable<SelectListItem>)ViewData["LabMarks"], String.Empty, new { @class = "form-control subtask-control", onchange = "javascript:GetRegulation(this.value, this.closest('tr'));" })</td>
                                                                <td><select id="regulation_@rowId" name="regulation" class="form-control subtask-control"><option value='@Model.SubTaskIndicator[i].RegulationId'>@Model.SubTaskIndicator[i].LaboratoryRegulationNameRu</option></select></td>
                                                                <td><input type="text" id="claim" class="form-control subtask-control" value="@Model.SubTaskIndicator[i].Claim" /></td>
                                                                <td><input type="text" id="factResult" class="form-control subtask-control" value="@Model.SubTaskIndicator[i].FactResult" /></td>
                                                                <td><input type="text" id="humidity" class="form-control subtask-control" value="@Model.SubTaskIndicator[i].Humidity" /></td>
                                                                <td>@Html.DropDownList("ExpertiseResult", (IEnumerable<SelectListItem>)ViewData["ExpertiseResults"], String.Empty, new { @class = "form-control subtask-control", value = expResult })</td>
                                                                <td>
                                                                    <span class="input-group-addon">
                                                                        <a class="subTaskComment" href="#">
                                                                            <i class="glyphicon glyphicon-info-sign"></i>
                                                                        </a>
                                                                    </span>
                                                                </td>
                                                            </tr>
                                                        }
                                                        else
                                                        {
                                                            <tr rcId="@Model.SubTaskIndicator[i].ResearchCenterId" teId="@Model.TaskExecutorId">
                                                                <td>@rowId</td>
                                                                <td>@Model.SubTaskIndicator[i].LaboratoryMarkNameRu</td>
                                                                <td>@Model.SubTaskIndicator[i].LaboratoryRegulationNameRu</td>
                                                                <td>@Model.SubTaskIndicator[i].Claim</td>
                                                                <td>@Model.SubTaskIndicator[i].FactResult</td>
                                                                <td>@Model.SubTaskIndicator[i].Humidity</td>
                                                                <td>@expResult</td>
                                                                <td>
                                                                    <span class="input-group-addon">
                                                                        <a class="subTaskComment" href="#">
                                                                            <i class="glyphicon glyphicon-info-sign"></i>
                                                                        </a>
                                                                    </span>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                }
                                            </tbody>
                                            @if (Model.Type == "create")
                                            {
                                                <tfoot>
                                                    <tr>
                                                        <td colspan="8" style="text-align: left;">
                                                            <button type="button" class="btn btn-default" id="addRowTableBtn" onclick="addRowTable()">Добавить</button>
                                                        </td>
                                                    </tr>
                                                </tfoot>
                                            }
                                            @if (Model.Type != "create" && Model.SubTaskIndicator.Any(x => x.TaskComment))
                                            {
                                                <tfoot>
                                                    <tr>
                                                        <td colspan="8" style="text-align: left;">
                                                            <button type="button" class="btn btn-default" id="saveRemarkTableBtn_@Model.Id" onclick="saveRemark()">Сохранить</button>
                                                        </td>
                                                    </tr>
                                                </tfoot>
                                            }
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @if (Model.SubTaskCoExecutorResult != null)
                        {
                            <div id="@tab3" class="tab-pane">
                                <div class="panel-body">
                                    @foreach (var s in Model.SubTaskCoExecutorResult)
                                    {
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <label>Соисполнитель: </label>
                                                <p>@s.SubTaskCoExecutorName</p>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-sm-12">
                                                <label>Показатели результатов испытаний: </label>
                                                <table class="table table-striped table-bordered table-hover dataTable">
                                                    <thead>
                                                        <tr>
                                                            <td></td>
                                                            <td>Показатель</td>
                                                            <td>Обозначение нормативных документов на методы испытаний</td>
                                                            <td>Требования НД</td>
                                                            <td>Фактически полученный результат</td>
                                                            <td>Т 0С и влажность (%)</td>
                                                            <td>Результат испытаний</td>
                                                            <td>Подписан</td>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (s.SubTaskIndicatorCoExecutor.Count > 0)
                                                        {
                                                            for (int i = 0; i < s.SubTaskIndicatorCoExecutor.Count; i++)
                                                            {
                                                                var rowId = i + 1;
                                                                var expResult = s.SubTaskIndicatorCoExecutor[i].ExpertiseResult ? "Соотвествует требованиям" : "Не соотвествет требованиям";
                                                                <tr>
                                                                    <td>@rowId</td>
                                                                    <td>@s.SubTaskIndicatorCoExecutor[i].LaboratoryMarkNameRu</td>
                                                                    <td>@s.SubTaskIndicatorCoExecutor[i].LaboratoryRegulationNameRu</td>
                                                                    <td>@s.SubTaskIndicatorCoExecutor[i].Claim</td>
                                                                    <td>@s.SubTaskIndicatorCoExecutor[i].FactResult</td>
                                                                    <td>@s.SubTaskIndicatorCoExecutor[i].Humidity</td>
                                                                    <td>@expResult</td>
                                                                    <td>
                                                                        @if (s.SubTaskIndicatorCoExecutor[i].ExecutorSign)
                                                                        {<label>Да</label>}
                                                                        else
                                                                        {<label>Нет</label>}
                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <tr>
                                                                <td colspan="8">Нет данных</td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    }

                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>

    $(document).ready(function() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetInstuctionCount", "OBKTask")',
            data: { 'registerId': '@Model.RegisterId' },
            dataType: 'json',
            cache: false,
            success: function (data) {
                debugger;
                if (data > 0) {
                    $("#listinstructions_@Model.Id").empty();
                    $("#listinstructions_@Model.Id").append('<li><a href="/OBKContract/GetInstruction?registerId=' + '@Model.RegisterId' + '">' + 'Скачать АНД' + '</a></li>');

                    $("#noinstructions_@Model.Id").hide();
                    $("#listinstructions_@Model.Id").show();
                }
                else {
                    $("#listinstructions_@Model.Id").empty();
                    $("#noinstructions_@Model.Id").show();
                    $("#listinstructions_@Model.Id").hide();
                }
            },
            error: function () {
                alert("Connection Failed. Please Try Again");
            }
        });
    });

    if('@Model.Regulation.IsNullOrWhiteSpace()' === 'False'){$("#textRegulation").val('@Model.Regulation')}
    if ('@Model.Type' === 'create') { $("#ExpertiseResult").val(''); }

    function addRowTable() {
        debugger;
        var tbody = $('table#tableExpertResult_@Model.Id tbody:first');
        var lastRowIndex = tbody.children('tr').length;
        var nextIndex = parseInt(lastRowIndex) + 1;
        var selectList = document.getElementById("labMarkId");
        var selectType = replaceAll('"form-control"', '"form-control subtask-control"', selectList.innerHTML);
        var cols = '<tr rowid="' + nextIndex + '">';
        cols += '<td>' + nextIndex + '</td>';
        cols += '<td>' + selectType + '</td>';
        cols += '<td><select id="regulation_' +
            nextIndex +
            '" name="regulation"  class="form-control subtask-control"></select></td>';
        cols += '<td><input type="text" id="claim" class="form-control subtask-control" /></td>';
        cols += '<td><input type="text" id="factResult" class="form-control subtask-control" /></td>';
        cols += '<td><input type="text" id="humidity" class="form-control subtask-control" /></td>';
        cols += '<td><select class="form-control subtask-control" data-val="true" data-val-required="Требуется поле ExpertiseResult." id="ExpertiseResult" name="ExpertiseResult" value="">' +
            '<option selected="selected" value=""></option>' +
            '<option value="True">Соответствует требованиям</option>' +
            '<option value="False">Не соответствует требованиям</option>' +
            '</select></td>';
        cols += '<td><i class="glyphicon glyphicon-remove" onclick="deleteRow(this)" title="Удалить"></i></td>';
        cols += '</tr>';
        tbody.append(cols);
    }

    function deleteRow(e) {
        var row = $(e).closest('tr');
        var success = function() {
            row.remove();
        }
        var cancel = function() {
        };
        showConfirmation("Удалить", "Вы уверены, что хотите удалить?", success, cancel);
    }

    function GetRegulation(labMarkId, tr) {
        debugger;
        var rowId = $(tr).attr('rowid');
        $.ajax({
            url: '/OBKTask/GetRegulation',
            data: { id: labMarkId },
            cache: false,
            type: "POST",
            success: function(result) {
                var markup = "<option value=''></option>";
                for (var x = 0; x < result.length; x++) {
                    markup += "<option value=" + result[x].Value + ">" + result[x].Text + "</option>";
                }
                $("#regulation_" + rowId).html(markup).show();
            },
            error: function(reponse) {
                alert("error : " + reponse);
            }
        });
    }

    function allRegilation() {
        debugger;
        $("#textRegulation").val('');
        var reg = Array();
        $("table#tableExpertResult_@Model.Id tbody tr").each(function () {
            var rowid = $(this).attr('rowid');
            var regulationId = $(this).find('select#regulation_' + rowid + ' option:selected').text();
            reg.push(regulationId);
        });
        if ('@Model.Regulation.IsNullOrWhiteSpace()' === 'False') {
            $("#textRegulation").val('@Model.Regulation' + ', ' + reg.join(', '));
        } else {
            $("#textRegulation").val(reg.join(', '));
        }
    }

    function saveResult() {
        if (validSubTask()) {
            var success = function() {
                var subTaskIndicator = new Array();
                $("table#tableExpertResult_@Model.Id tbody tr").each(function() {
                    debugger;
                    var rowid = $(this).attr('rowid');
                    var laboratoryMarkId = $(this).find('select#LaboratoryMarkId option:selected').val();
                    var regulationId = $(this).find('select#regulation_' + rowid + ' option:selected').val();
                    var claim = $(this).find('input#claim').val();
                    var factResult = $(this).find('input#factResult').val();
                    var humidity = $(this).find('input#humidity').val();
                    var expertiseResult = $(this).find('#ExpertiseResult').val();
                    subTaskIndicator.push({
                        LaboratoryMarkId: laboratoryMarkId,
                        RegulationId: regulationId,
                        Claim: claim,
                        FactResult: factResult,
                        Humidity: humidity,
                        ExpertiseResult: expertiseResult
                    });
                });

                var model = {
                    Id: '@Model.Id',
                    Nd: $("textarea#nd").val(),
                    SubTaskNumber: '@Model.SubTaskNumber',
                    ExpertiseResult: $("#ExpertiseResult").val(),
                    Regulation: $("#textRegulation").val(),
                    SubTaskIndicator: subTaskIndicator
                }
                $.ajax({
                    type: 'POST',
                    url: '/OBKTask/SaveSubTaskResult',
                    data: JSON.stringify(model),
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    cache: false,
                    success: function(data) {
                        switch (data.result) {
                        case 'save':
                            $('#resultSubTaskPanel_@Model.Id input')
                                .each(function() { $(this).attr('readonly', true); });
                            $('#resultSubTaskPanel_@Model.Id textarea').each(function() {
                                $(this).attr('readonly', true);
                            });
                            $('#resultSubTaskPanel_@Model.Id select').each(function() {
                                $(this).attr('disabled', true);
                            });
                            $("#addRowTableBtn").attr('disabled', true);
                            $("#saveResultBtn").attr('disabled', true);
                            $("#createResultBtn_@Model.Id").attr('disabled', true);
                            $("#showResultBtn_@Model.Id").removeAttr('disabled');
                            break;
                        case 'notFound':
                            alert('Задание не найдно');
                            break;
                        case 'moreThanOne':
                            alert('Найдено более одного повторяющегося показателя');
                            break;
                        case 'error':
                            alert('Ошибка при сохранении');
                            break;
                        default:
                            alert(data.result);
                        }
                    }
                });
            }
            var cancel = function() {
            };
            showConfirmation("Сохранить",
                "Данное действие не возможно будет отметить. Вы уверены, что хотите сохранить результаты?",
                success,
                cancel);
        } else {
            alert("Заполните обязательные поля");
        }
    }

    function signBtn() {
        var subTaskId = '@Model.Id';
        $.ajax({
            type: 'GET',
            url: '/OBKTask/GetSignSubTaskExpert?id=' + subTaskId,
            success: function(result) {
                startSign(result.data, subTaskId, saveSignedPayment);
            }
        });

        function saveSignedPayment(signedData, id) {
            var sData = {
                id: id,
                signedData: signedData
            };
            var json = JSON.stringify(sData);
            $.ajax({
                type: 'POST',
                url: '/OBKTask/SaveSignedSubTaskExpert',
                contentType: 'application/json; charset=utf-8',
                data: json,
                success: function(result) {
                    debugger;
                    if (result.isSuccess) {
                        $("label#els_@Model.Id").remove();
                        $("#expertSign_@Model.Id").append('<label>Да</label>');
                        alert("Результат успешно подписан");
                    } else {
                        alert("Ошибка при подписании");
                    }
                }
            });
        }
    }

    function validSubTask() {
        var valid = true;
        $('.subtask-control').each(function() {
            if ($(this).val() == "" || $(this).val() == null) {
                $(this).css({ 'border-color': '#a94442' });
                valid = false;
            } else {
                $(this).css({ 'border-color': '#cccccc' });
            }
        });
        if ($("#ExpertiseResult").val() == "" || $("#ExpertiseResult").val() == null) {
            $("#ExpertiseResult").css({ 'border-color': '#a94442' });
            valid = false;
        } else {
            $("#ExpertiseResult").css({ 'border-color': '#cccccc' });
        }
        return valid;
    }


    $(".subTaskComment").click(function() {
        debugger;
        var table = $(this).parent().parent().parent();
        var rcId = table.attr('rcId');
        var teId = table.attr('teId');
        $.ajax({
            type: 'GET',
            url: '/OBKExpDocument/TaskComment?rcId=' + rcId + '&teId=' + teId,
            cache: false,
            success: function(data) {
                debugger;
                $("#taskComment_" + teId).html(data);
                $("#panelTaskComment_" + teId).show();
            }
        });
    });

    function saveRemark() {
        debugger;
        var subTaskIndicator = new Array();
        $("table#tableExpertResult_@Model.Id tbody tr.add-commnet").each(function () {
            debugger;
            var rowid = $(this).attr('rowid');
            var researchCenterId = $(this).attr('rcId');
            var laboratoryMarkId = $(this).find('select#LaboratoryMarkId option:selected').val();
            var regulationId = $(this).find('select#regulation_' + rowid + ' option:selected').val();
            var claim = $(this).find('input#claim').val();
            var factResult = $(this).find('input#factResult').val();
            var humidity = $(this).find('input#humidity').val();
            var expertiseResult = $(this).find('#ExpertiseResult').val();
            subTaskIndicator.push({
                ResearchCenterId: researchCenterId,
                LaboratoryMarkId: laboratoryMarkId,
                RegulationId: regulationId,
                Claim: claim,
                FactResult: factResult,
                Humidity: humidity,
                ExpertiseResult: expertiseResult
            });
        });

        $.ajax({
            type: 'POST',
            url: '/OBKTask/SaveSubTaskRemark',
            data: JSON.stringify(subTaskIndicator),
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {
                if (data.isSuccess) {
                    $("table#tableExpertResult_@Model.Id tbody tr.add-commnet").each(function () {
                        debugger;
                        var rowid = $(this).attr('rowid');
                        $(this).find('select#LaboratoryMarkId').attr('disabled', true);
                        $(this).find('select#regulation_' + rowid).attr('disabled', true);
                        $(this).find('input#claim').attr('disabled', true);
                        $(this).find('input#factResult').attr('disabled', true);
                        $(this).find('input#humidity').attr('disabled', true);
                        $(this).find('#ExpertiseResult').attr('disabled', true);
                    });
                    $("#saveRemarkTableBtn_@Model.Id").attr('disabled', true);
                }
            }
        });
    }
</script>
<script>
    $(function () {
        $('#LaboratoryMarkId').select2();
    });
</script>