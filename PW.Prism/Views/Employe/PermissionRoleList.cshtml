﻿@using PW.Ncels.Database.DataModel
@model Guid?
@{
//Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<script>
    InitFilterPermissionRoleAllGrid('@Model.ToString()');

    function error_handlerPP(e) {
        e.preventDefault(e);
        var grid = $("#gridPermissionRoleList" + '@Model.ToString()').data("kendoGrid");
        grid.cancelChanges();
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            ShowAlert('Внимание!', message, window.AlertType.Warning, 3000);
        }
    }
</script>
@(Html.Kendo().Splitter()
            .HtmlAttributes(new { @class = "pwSplitter k-block" })
            .Name(("splitter" + Model))
            .Panes(panes =>
            {
            panes.Add().Scrollable(false).Size("100%").Content(
                @<div class="pwPanelBar">
                    <div class="pwBlockAdd k-block">
                        <div id="pwOne">
                            @(Html.Kendo().MaskedTextBox().Name("findText" + Model).Mask("").HtmlAttributes(new { @class = "pwWidth100" }))
                        </div>
                        @*<div id="pwTwo">
                            @(Html.Kendo().DropDownList().Name("findType" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                                   .DataTextField("Text")
                                   .DataValueField("Value")
                                   .BindTo(new List<SelectListItem>() {
                                       new SelectListItem() {
                                           Text = PW.Ncels.Database.Recources.Messages.Property_Все_394__00, Value = "0"
                                       },
                                   })
                                   .SelectedIndex(0)
                            )
                        </div>*@
                        <div id="pwThree">
                            @(Html.Kendo().Button().Name("find" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                             .Content(PW.Ncels.Database.Recources.Messages.Property_Найти_372__00)
                             .ImageUrl("/Content/images/find.png"))
                        </div>
                        <div id="pwFour">
                        </div>
                    </div>
                    <div id="pwSix">
                        @(Html.Kendo().Button().Name("reload" + Model).HtmlAttributes(new { @class = "pwWidth100 pwButtonReload" })
                                                        .Content("")
                                   .ImageUrl("/Content/images/reload.png"))
                    </div>

                    @(Html.Kendo().Grid<PermissionRole>()
        .Name("gridPermissionRoleList" + Model)
        .Columns(columns =>
        {
            columns.Bound(p => p.Name).Title("Наименование");
            columns.Bound(p => p.Id).ClientTemplate(
                                     "<div class=\"btn-group btn-group-xs\" style='height:14px;margin-top: -9px;'>" +
                                          "<button type='button' style='width:90px;' class='btn btn-default btn-xs' onclick=\"openPermissionRole('#=Id#','#=Name#')\"><span style=\"color:rgb(66,139,202);\">Права доступа</span></button>" +
                                      "</div>"
                                    ).Title("").Width(120).Filterable(false).Sortable(false);
            columns.Command(command => { command.Edit(); command.Destroy(); }).Width(200);
        })
        .ToolBar(toolbar => toolbar.Create().HtmlAttributes(new { @class = "pwRefAdd" }))
        .Filterable()
        .Sortable()
        .Pageable()
        .Scrollable()
        .HtmlAttributes(new { @class = "pwGrid" })
        .DataSource(dataSource => dataSource
            .Ajax()
                 .Model(model =>
                 {
                     model.Id(p => p.Id);
                     model.Field(p => p.Id).Editable(false);
                 })
                .PageSize(20)
                .Sort(sort => sort.Add("Name").Ascending())
                .Read(read => read.Action("PermissionRoleRead", "Employe"))
                .Create(update => update.Action("PermissionRoleCreate", "Employe"))
                .Update(update => update.Action("PermissionRoleUpdate", "Employe"))
                .Destroy(update => update.Action("PermissionRoleDestroy", "Employe"))
                .Events(events => events.Error("error_handlerPP"))
                ))
                </div>
                 );
            }))
<script>
    resizeGrid('@("#gridPermissionRoleList" + Model)');
</script>