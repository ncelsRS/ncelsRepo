@using PW.Ncels.Database.DataModel
@model Guid




<script>
  
    InitFilterEmployeGrid('@Model.ToString()');

    function ShowEmployee(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var window = $("#TaskCommandWindow");
        window.kendoWindow({
            width: "700px",
            height: "550px",
            modal: true, resizable: false,
            title: @PW.Ncels.Database.Recources.Messages.Property_Уволенныесотрудник,
            actions: ["Close"]
        });


        window.data("kendoWindow").title(@PW.Ncels.Database.Recources.Messages.Property_Уволенныесотрудник);
        window.data("kendoWindow").setOptions({
            width: 700,
            height: 'auto'
        });
        window.data("kendoWindow").refresh('/Employe/Edit?Id=' + dataItem.Id + '&Type=3'  );
        window.data("kendoWindow").center();
        window.data("kendoWindow").open();
    }
</script>

@(Html.Kendo().Splitter()
            .HtmlAttributes(new { @class = "pwSplitter k-block" })
            .Name(("splitter" + Model))
            .Panes(panes => {
                panes.Add()
                    .Size("250px")
                    .Collapsed(true)
                    .Collapsible(true)
                    .MaxSize("500px")
                    .MinSize("250px")
                    .Content(
                    @<div class="pwPanelBar">
                        @(Html.Kendo().PanelBar().HtmlAttributes(new { @class = "pwPanelBar" })
                               .Name("panelbar" + Model)
                               .ExpandMode(PanelBarExpandMode.Multiple)
                               .ExpandAll(true)
                               .HtmlAttributes(new { style = "width:auto;" })
                                       .Events(e => e.Select("panelDictionarySelect"))
                               .Items(panelbar => {
                                   panelbar.Add().Expanded(true);
                                   //panelbar.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Типысправочников_108__00)
                                   //    .Items(projects => {
                                   //        foreach (DictionaryInfo dictionaryInfo in (List<DictionaryInfo>)ViewData["DictionaryList"]) {
                                   //            projects.Add().Text(dictionaryInfo.Name).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemType", dictionaryInfo.Type }, { "ModelId", Model.ToString() } });
                                   //        }

                                   //    });


                               })
                        )

                    </div>
                );

                panes.Add().Scrollable(false).Size("100%").Content(
                    @<div class="pwPanelBar">
                        <div class="pwBlockAdd k-block">

                            <div id="pwOne">
                                @(Html.Kendo().MaskedTextBox().Name("findText" + Model).Mask("").HtmlAttributes(new { @class = "pwWidth100" }))
                            </div>

                            <div id="pwTwo" hidden="true">
                                @(Html.Kendo().DropDownList().Name("findType" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                                       .DataTextField("Text")
                                       .DataValueField("Value")
                                       .BindTo(new List<SelectListItem>() {
                                           new SelectListItem() {
                                               Text = PW.Ncels.Database.Recources.Messages.Property_Все_394__00, Value = "0"
                                           }
                                       })
                                       .SelectedIndex(0)
                                )
                            </div>

                            <div id="pwThree">
                                @(Html.Kendo().Button().Name("find" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                                   .Content(PW.Ncels.Database.Recources.Messages.Property_Найти_372__00)
                                   .ImageUrl("/Content/images/find.png"))
                            </div>



                        </div>
                        <div id="pwSix">
                            @(Html.Kendo().Button().Name("reload" + Model).HtmlAttributes(new { @class = "pwWidth100 pwButtonReload" })
                                                    .Content("")
                               .ImageUrl("/Content/images/reload.png"))

                        </div>
                        @(Html.Kendo().Grid<Employee>()
                                   .Name("gridListDic" + Model)
                           .Columns(columns => {

                               columns.Bound(p => p.DisplayName).Title(PW.Ncels.Database.Recources.Messages.Property_ФИО_336__00).Width(350).ClientFooterTemplate(PW.Ncels.Database.Recources.Messages.Property_Всего_356__00 + "#=count#");
                               columns.Bound(p => p.LastName).Title(PW.Ncels.Database.Recources.Messages.Property_Подразделение_200__00).Width(250);
                               columns.Bound(p => p.TerminationDate).Format("{0:dd.MM.yyyy}").Title(PW.Ncels.Database.Recources.Messages.Property_Датаувольнения_126__00).Width(150);
                               columns.Command(c => c.Custom(PW.Ncels.Database.Recources.Messages.Property_Просмотр_328__00).Click("ShowEmployee"));


                           })
                            .Reorderable(reorderable => reorderable.Columns(true))
                            .Resizable(resizable => resizable.Columns(true))
                            .Scrollable(scrollable => scrollable.Virtual(true))
                             .Filterable()
                            .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                            .HtmlAttributes(new { @class = "pwGridRef" })
                            .DataSource(dataSource => dataSource
                               .Ajax()
                                       .Model(model => model.Id(p => p.Id))
                                               .Aggregates(aggregates => { aggregates.Add(p => p.DisplayName).Count(); })

                            .PageSize(50)
                                    .Sort(sort => sort.Add("DisplayName").Ascending())

                                            .Read(read => read.Action("EmployeDismissedListDep", "Employe"))

                           ))
                    </div>
             );
            }))

<script>
    resizeGrid('@("#gridListDic" + Model)');
</script>
