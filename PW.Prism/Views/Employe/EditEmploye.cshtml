@using Aspose.Words.Lists
@using PW.Ncels.Database.DataModel
@using PW.Ncels.Database.Helpers
@using PW.Ncels.Database.Models
@model Guid[]

@{
    Layout = null;
}
<style>
    .k-toolbar.k-grid-toolbar.k-grid-top {
        height: 25px;
    }
</style>
<script>

    var nameData = '@Model[0]';
    var employeeId = nameData;
    var parentId = '@(Model.Length==2? Model[1].ToString():string.Empty)';
    var modelId = '@ViewData["modelId"]';
    var modelUid = '@ViewData["ModeUid"]';
    var validIIN = true;
    function PermissionParams() {
        return {
            employeeId: '@Model[0]'
        };
    }

    function customAgrigate(parameters) {
        var grid = $("#gridHolidays" + nameData).data("kendoGrid");
        var periodStart = grid.dataSource.aggregates().PeriodStart;
        var periodEnd = grid.dataSource.aggregates().PeriodEnd;
        if (periodStart == null) {
            return '';
        }
        if (periodEnd == null) {
            return '';
        }
        console.log('min', periodStart.min);
        console.log('max', periodEnd.max);
        var dateMinStr = periodStart.min;
        var dateMaxStr = periodEnd.max;
        var substringedDate = dateMinStr.substring(6); //substringedDate= 1291548407008)/
        var parsedIntDate = parseInt(substringedDate); //parsedIntDate= 1291548407008
        var dateMin = new Date(parsedIntDate);
        substringedDate = dateMaxStr.substring(6); //substringedDate= 1291548407008)/
        parsedIntDate = parseInt(substringedDate); //parsedIntDate= 1291548407008
        var dateMax = new Date(parsedIntDate);
        console.log('min', dateMin);
        console.log('max', dateMax);
        console.log('math', dateMax.getDate() - dateMin.getDate());

        return '@PW.Ncels.Database.Recources.Messages.Property_Всегодней_245__00 ' + (DateDiff.inMonths(dateMin, dateMax) * 2.5) + ' @PW.Ncels.Database.Recources.Messages.Property_Изнихосталось_125__00 ' + ((DateDiff.inMonths(dateMin, dateMax) * 2.5) - parameters);

    }
    function dataBoundPermission(e) {

    }

    function changePermissionRole(e) {
        debugger;
        var x = $("#PermissionRoleCombobox").data("kendoDropDownList").text();
        var y = $("#PermissionRoleCombobox").val();
        console.log(y + ' ' + x);
        $("#RoleId").val(y).change();
        $("#RoleName").val(x).change();
    }

    var viewModel = kendo.observable({
        item: {},
        Save: function () {
            Save();
        }
    });
    var viewModelProfile = kendo.observable({
        item: {},
        Reset: function () {
            Reset();
        },
        Release: function () {
            Release();
        },
        LoginSave: function () {
            LoginSave();
        }
    });
    function Save() {
        var json = JSON.stringify(viewModel.get('item'));

        if (!validIIN)
            return alert("Недопустимое значение поля ИИН");

        var iin = viewModel.get('item.Iin');
        if (iin == null)
            return alert("ИИН обязательное поле для заполнения");

        $.ajax({
            type: 'POST',
            url: '/Employe/EmployeUpdate',
            data: json,
            contentType: 'application/json; charset=utf-8',
            success: function (result) {

                Valid(result);
                $("#treeview" + modelId).data("kendoTreeView").dataItem($("#treeview" + modelId).data("kendoTreeView").findByUid(modelUid)).loaded(false);
                $("#treeview" + modelId).data("kendoTreeView").dataItem($("#treeview" + modelId).data("kendoTreeView").findByUid(modelUid)).load();
            },
            complete: function () {

            }
        });
    }

    function Reset() {
        var json = JSON.stringify(viewModel.get('item'));

        $.ajax({
            type: 'POST',
            url: '/Employe/EmployeReset',
            data: json,
            contentType: 'application/json; charset=utf-8',
            success: function (result) {

                alert(result);

            },
            complete: function () {

            }
        });
    }
    function LoginSave() {
        var json = JSON.stringify(viewModelProfile.get('item'));

        $.ajax({
            type: 'POST',
            url: '/Employe/EmployeLoginReset',
            data: json,
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                ShowAlert('Внимание!', result, window.AlertType.Info, 10000);
            },
            complete: function () {

            }
        });
    }
    function Release() {
        var json = JSON.stringify(viewModel.get('item'));

        $.ajax({
            type: 'POST',
            url: '/Employe/EmployeRelease',
            data: json,
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                if (result == 'True') {
                    ShowAlert('Успех!', '@PW.Ncels.Database.Recources.Messages.Property_Успешноразблокирован_48__00', window.AlertType.Success, 2000);
                };
            },
            complete: function () {

            }
        });
    }

    function error_handlerPP(e) {
        e.preventDefault(e);
        var grid = $("#GridPermissionRole" + nameData).data("kendoGrid");
        grid.cancelChanges();
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            ShowAlert('Внимание!', message, window.AlertType.Warning, 3000);
        }
    }

    function test228(container, options) {
        console.log(test);
        $('<input required name="' + options.field + '"/>')
            .appendTo(container)
            .kendoDropDownList({
                autoBind: false,
                dataTextField: "CategoryName",
                dataValueField: "CategoryID",
                dataSource: {
                    type: "odata",
                    transport: {
                        read: "https://demos.telerik.com/kendo-ui/service/Northwind.svc/Categories"
                    }
                }
            });
    }

    $.ajax({
        type: 'get',
        url: '/Employe/EmployeRead?Id=' + nameData + '&ParentId=' + parentId,
        contentType: 'application/json; charset=utf-8',
        success: function (result) {
            result = JSON.parse(result);
            // alert(JSON.stringify(result));
            viewModel.set("item", result);
            viewModelProfile.set("item", result);
            //viewModel.person = JSON.stringify(result);
            kendo.bind($("#formEmploye" + nameData), viewModel);
            kendo.bind($("#formProfile" + nameData), viewModelProfile);
            InitProperty();
        },
        complete: function () {
            //  alert('Success! User Loaded!');
        }
    });

    function InitProperty() {
        var dataSexType = [
            { text: "@PW.Ncels.Database.Recources.Messages.Property_Неизвестно_246__00", value: "0" },
            { text: "@PW.Ncels.Database.Recources.Messages.Property_Мужской_338__00", value: "1" },
            { text: "@PW.Ncels.Database.Recources.Messages.Property_Женский_339__00", value: "2" }
        ];

        var dataDegreeType = [
            { text: "@PW.Ncels.Database.Recources.Messages.Property_Нет_396__00", value: "0" },
            { text: "@PW.Ncels.Database.Recources.Messages.Property_Да_401__00", value: "1" }
        ];

        var dataMilitaryType = [
            { text: "@PW.Ncels.Database.Recources.Messages.Property_Невоеннообязанный_86__00", value: "0" },
            { text: "@PW.Ncels.Database.Recources.Messages.Property_Призывник_286__00", value: "1" },
            { text: "@PW.Ncels.Database.Recources.Messages.Property_Военнообязанный_145__00", value: "2" },
            { text: "@PW.Ncels.Database.Recources.Messages.Property_СнятсВУподостижениюпредельноговозраста_4__00", value: "3" }
        ];

        var dataFamilyStatusType = [
            { text: "@PW.Ncels.Database.Recources.Messages.Property_Неизвестно_246__00", value: "0" },
            { text: "@PW.Ncels.Database.Recources.Messages.Property_Неженатнезамужем_72__00", value: "1" },
            { text: "@PW.Ncels.Database.Recources.Messages.Property_Женатзамужем_203__00", value: "2" },
            { text: "@PW.Ncels.Database.Recources.Messages.Property_Вразводе_287__00", value: "3" },
            { text: "@PW.Ncels.Database.Recources.Messages.Property_Вдовецвдова_226__00", value: "4" }
        ];

        $("#MilitaryType" + nameData).kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            index: 0,
            //select: function (e) {
            //    var dataItem = this.dataItem(e.item.index());
            //    if (dataItem.value == 0) {
            //        document.getElementById('MilitaryCategoryId').style.display = 'none';
            //        document.getElementById('MilitarySostavId').style.display = 'none';
            //        document.getElementById('MilitaryRankId').style.display = 'none';
            //        document.getElementById('MilitaryVusId').style.display = 'none';
            //        document.getElementById('MilitaryLocationId').style.display = 'none';
            //        document.getElementById('MilitaryLastDateId').style.display = 'none';
            //    }
            //    if (dataItem.value == 1) {
            //        document.getElementById('MilitaryCategoryId').style.display = 'none';
            //        document.getElementById('MilitarySostavId').style.display = 'none';
            //        document.getElementById('MilitaryRankId').style.display = 'none';
            //        document.getElementById('MilitaryVusId').style.display = 'none';
            //        document.getElementById('MilitaryLocationId').style.display = 'table-row';
            //        document.getElementById('MilitaryLastDateId').style.display = 'table-row';
            //    }
            //    if (dataItem.value == 2 || dataItem.value == 3) {
            //        document.getElementById('MilitaryCategoryId').style.display = 'table-row';
            //        document.getElementById('MilitarySostavId').style.display = 'table-row';
            //        document.getElementById('MilitaryRankId').style.display = 'table-row';
            //        document.getElementById('MilitaryVusId').style.display = 'table-row';
            //        document.getElementById('MilitaryLocationId').style.display = 'table-row';
            //        document.getElementById('MilitaryLastDateId').style.display = 'table-row';
            //    }
            //},
            dataSource: dataMilitaryType
        });

        $("#Sex" + nameData).kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            index: 0,
            dataSource: dataSexType
        });


        $("#FamilyStatus" + nameData).kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            index: 0,
            dataSource: dataFamilyStatusType
        });

        $("#IsDegree" + nameData).kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            index: 0,
            //select: function (e) {
            //    var dataItem = this.dataItem(e.item.index());
            //    if (dataItem.value == 0) {
            //        document.getElementById('DegreeDateId').style.display = 'none';
            //        document.getElementById('DegreeSpecId').style.display = 'none';
            //        document.getElementById('DegreeNameId').style.display = 'none';
            //    }
            //    if (dataItem.value == 1) {
            //        document.getElementById('DegreeDateId').style.display = 'table-row';
            //        document.getElementById('DegreeSpecId').style.display = 'table-row';
            //        document.getElementById('DegreeNameId').style.display = 'table-row';
            //    }
            //},
            dataSource: dataDegreeType
        });

        $("#IsAcademic" + nameData).kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            index: 0,
            //select: function (e) {
            //    var dataItem = this.dataItem(e.item.index());
            //    if (dataItem.value == 0) {
            //        document.getElementById('AcademicDateId').style.display = 'none';
            //        document.getElementById('AcademicSpecId').style.display = 'none';
            //        document.getElementById('AcademicNameId').style.display = 'none';
            //    }
            //    if (dataItem.value == 1) {
            //        document.getElementById('AcademicDateId').style.display = 'table-row';
            //        document.getElementById('AcademicSpecId').style.display = 'table-row';
            //        document.getElementById('AcademicNameId').style.display = 'table-row';
            //    }
            //},
            dataSource: dataDegreeType
        });

        $("#ExperienceTotal" + nameData).kendoNumericTextBox({ format: "#" });

        $("#ExperienceSpec" + nameData).kendoNumericTextBox({ format: "#" });

        $("#NationalityId" + nameData).kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            maxSelectedItems: 1,
            filter: "contains",
            autoBind: false,
            dataSource: {
                transport: {
                    read: {
                        url: '/Reference/List',
                        data: { text: "NationalityDictionary" }
                    }
                }
            }
        });

        $("#QualificationCategoryId" + nameData).kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            maxSelectedItems: 1,
            filter: "contains",
            autoBind: false,
            dataSource: {
                transport: {
                    read: {
                        url: '/Reference/List',
                        data: { text: "QualificationCategoryDictionary" }
                    }
                }
            }
        });

        $("#CauseLayoffsId" + nameData).kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            maxSelectedItems: 1,
            filter: "contains",
            autoBind: false,
            dataSource: {
                transport: {
                    read: {
                        url: '/Reference/List',
                        data: { text: "CauseLayoffsDictionary" }
                    }
                }
            }
        });

        $("#MilitarySostavId" + nameData).kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            maxSelectedItems: 1,
            filter: "contains",
            autoBind: false,
            dataSource: {
                transport: {
                    read: {
                        url: '/Reference/List',
                        data: { text: "MilitarySostavDictionary" }
                    }
                }
            }
        });

        $("#MilitaryRankId" + nameData).kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            maxSelectedItems: 1,
            filter: "contains",
            autoBind: false,
            dataSource: {
                transport: {
                    read: {
                        url: '/Reference/List',
                        data: { text: "MilitaryRankDictionary" }
                    }
                }
            }
        });

        $("#DegreeNameId" + nameData).kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            maxSelectedItems: 1,
            filter: "contains",
            autoBind: false,
            dataSource: {
                transport: {
                    read: {
                        url: '/Reference/List',
                        data: { text: "DegreeNameDictionary" }
                    }
                }
            }
        });

        $("#AcademicNameId" + nameData).kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            maxSelectedItems: 1,
            filter: "contains",
            autoBind: false,
            dataSource: {
                transport: {
                    read: {
                        url: '/Reference/List',
                        data: { text: "AcademicNameDictionary" }
                    }
                }
            }
        });

        $("#DeputyId" + nameData).kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            autoBind: false,

            dataSource: {
                transport: {
                    read: {
                        url: '/Reference/ListEmploye'

                    }
                }
            }
        });

        $("#AssistantsId" + nameData).kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            autoBind: false,

            dataSource: {
                transport: {
                    read: {
                        url: '/Reference/ListEmploye'
                    }
                }
            }
        });

        $("#DateFile" + nameData).kendoDatePicker();
        $("#TerminationDate" + nameData).kendoDatePicker();
        $("#Birthday" + nameData).kendoDatePicker();
        $("#UlDate" + nameData).kendoDatePicker();
        $("#EducationDate" + nameData).kendoDatePicker();
        $("#EducationDate2" + nameData).kendoDatePicker();
        $("#EducationDate3" + nameData).kendoDatePicker();
        $("#DegreeDate" + nameData).kendoDatePicker();
        $("#AcademicDate" + nameData).kendoDatePicker();
        $("#MilitaryLastDateIdId").kendoDatePicker();

        $("#AddEducation2").kendoButton();
        $("#AddEducation3").kendoButton();

        var initialFiles1 = viewModel.get('item.AttachFiles');
        console.log('viewModel', viewModel);
        console.log('initialFiles', initialFiles1);
        $("#files" + nameData).kendoUpload({
            localization: {
                select: 'Выбрать файл...',
                remove: '',
                cancel: '',
                headerStatusUploading: "Загрузка...",
                headerStatusUploaded: "Загружено!"
            },
            // multiple: true,
            async: {
                saveUrl: "/Upload/save",
                removeUrl: "/Upload/remove",
                autoUpload: true
            },
            upload: function(e) {
                e.data = { documentId: nameData };
            },
            remove: function(e) {
                e.data = { documentId: nameData };
            },
            complete: function(e) {
                var files = $("#files" + nameData).closest(".k-upload").find("a");
                $.each(files,
                    function(i, file) {
                        file.onclick = function() {
                            fileView(nameData, file.getAttribute('fileName'));
                        };
                    });
                var filesButton = $("#files" + nameData).closest(".k-upload").find("button");

                $.each(filesButton,
                    function(i, file) {
                        if (file.className == 'file-edit') {
                            file.onclick = function() {
                                fileEdit(nameData, file.getAttribute('fileName'));
                            };
                        };
                    });
                var filesDownload = $("#files" + nameData).closest(".k-upload").find("button");
                $.each(filesDownload,
                    function(i, file) {
                        if (file.className == 'file-download') {
                            file.onclick = function() {
                                fileDownload(nameData, file.getAttribute('fileName'));
                            };
                        };
                    });
            },
            select: function(e) {},
            template: kendo.template($('#fileTemplate').html()),
            files: initialFiles1
        });

        function addEducation2() {
            //document.getElementById('Education2Id').style.display = 'table-row';
            //document.getElementById('EducationNumber2Id').style.display = 'table-row';
            //document.getElementById('EducationDate2Id').style.display = 'table-row';
            //document.getElementById('EducationSpec2Id').style.display = 'table-row';
            //document.getElementById('EducationQual2Id').style.display = 'table-row';
            //document.getElementById('Education3AddId').style.display = 'table-row';
        }

        function addEducation3() {
            //document.getElementById('Education3Id').style.display = 'table-row';
            //document.getElementById('EducationNumber3Id').style.display = 'table-row';
            //document.getElementById('EducationDate3Id').style.display = 'table-row';
            //document.getElementById('EducationSpec3Id').style.display = 'table-row';
            //document.getElementById('EducationQual3Id').style.display = 'table-row';
        }

    }

    $("#Iin").on("change",
        function () {
            var row = $(this).val();
            if (row.length > 12 || row.length < 12) {
                alert("Поле должно содержать 12 цифр");
                validIIN = false;
                return;
            }
            if (row.match(/[^0-9'".]/)) {
                alert("Поле должно содержать только цифры");
                validIIN = false;
                return;
            }
            validIIN = true;
        });
</script>
<div class="pwUnitsPage">
    <div class="pwUnitsHeader">@PW.Ncels.Database.Recources.Messages.Property_Сотрудник_288__00</div>
    @(Html.Kendo().TabStrip()
                  .Name("tabstripEmploye" + Model[0])
          .Animation(false)
          .HtmlAttributes(new { @class = "pwUnitsEmployee" })
          .Items(tabstrip => {
              tabstrip.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Личныеданные_204__00)
                  .Selected(true)
                  .Content(@<text>
                                <form id="@("formEmploye" + Model[0])" class="pwEmployeeContent">
                                    <div id="pwEmployeeContentWrapper">
                                        <table>
                                            <colgroup>
                                                <col width="30%" />
                                                <col width="100%" />
                                            </colgroup>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_ИИН_388__00</td>
                                                <td><input type="text" id="Iin" data-bind="value: item.Iin" class="k-textbox pwWidth100"/></td>
                                            </tr>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Фамилия_312__00</td>
                                                <td><input type="text" data-bind="value: item.LastName" class="k-textbox pwWidth100" /></td>
                                            </tr>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Имя_386__00</td>
                                                <td><input type="text" data-bind="value: item.FirstName" class="k-textbox pwWidth100" /></td>
                                            </tr>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Отчество_289__00</td>
                                                <td><input type="text" data-bind="value: item.MiddleName" class="k-textbox pwWidth100" /></td>
                                            </tr>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Должность_267__00</td>
                                                <td><input type="text" data-bind="value: item.Position" class="k-textbox pwWidth100" readonly /></td>
                                            </tr>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Пол_387__00</td>
                                                <td><input id="@("Sex" + Model[0])" data-bind="value: item.Sex" class="pwWidth100" /></td>
                                            </tr>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Датарождения_176__00</td>
                                                <td><input id="@("Birthday" + Model[0])" data-bind="value: item.Birthday" placeholder="@PW.Ncels.Database.Recources.Messages.Property_Выберитедату_117__00" class="pwWidth100" /></td>
                                            </tr>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Телефонрабочий_127__00</td>
                                                <td><input type="text" data-bind="value: item.Phone" class="k-textbox pwWidth100" /></td>
                                            </tr>
                                            <tr>
                                                <td>E-mail:</td>
                                                <td><input type="text" data-bind="value: item.Email" class="k-textbox pwWidth100" /></td>
                                            </tr>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Заместители_229__00</td>
                                                <td><input id="@("DeputyId" + Model[0])" data-bind="value: item.DeputyId" class="pwWidth100" /></td>
                                            </tr>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Соисполнители_180__00</td>
                                                <td><input id="@("AssistantsId" + Model[0])" data-bind="value: item.AssistantsId" class="pwWidth100" /></td>
                                            </tr>
                                        </table>
                                      
                                    </div>
                                    <div hidden="@(!EmployePermissionHelper.IsEditOs)" class="pwEmployeeFooter k-block">
                                        <button id="saveButtonEmployee" type="button" class="btn btn-default" data-bind="click: Save">@PW.Ncels.Database.Recources.Messages.Property_Сохранить_278__00</button>
                                    </div>
                                </form>
                            </text>);
              if (EmployePermissionHelper.IsEditOs) {
                  tabstrip.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Профиль_343__00)
                      .Content(@<text>
                                    <form id="@("formProfile" + Model[0])" class="pwEmployeeContent" style="overflow: auto">
                                        <table>
                                            <colgroup>
                                                <col width="30%" />
                                                <col width="100%" />
                                            </colgroup>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Логин_362__00</td>
                                                <td><input data-bind="value: item.Login" class="k-textbox pwWidth100" /></td>
                                            </tr>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Последнийвход_150__00</td>
                                                <td><input data-bind="value: item.LastLoginDate, enabled:false" class="k-textbox pwWidth100" /></td>
                                            </tr>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Заблокированный_129__00</td>
                                                <td><input data-bind="value: item.IsLockedOut, enabled:false" class="k-textbox pwWidth100" /></td>
                                            </tr>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Изменитьлогин_151__00</td>
                                                <td><button data-bind="click: LoginSave" type="button" style="width: 250px" class="btn btn-default">@PW.Ncels.Database.Recources.Messages.Property_Сохранитьлогин_152__00</button></td>
                                            </tr>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Разблокировать_153__00</td>
                                                <td><button data-bind="click: Release" type="button" style="width: 250px" class="btn btn-default">@PW.Ncels.Database.Recources.Messages.Property_Разблокировать_181__00</button></td>
                                            </tr>
                                            <tr>
                                                <td>@PW.Ncels.Database.Recources.Messages.Property_Сброситьпароль_130__00</td>
                                                <td><button data-bind="click: Reset" type="button" style="width: 250px" class="btn btn-default">@PW.Ncels.Database.Recources.Messages.Property_Сброситьпароль_154__00</button></td>
                                            </tr>
                                        </table>
                                    </form>
                                </text>);
                       tabstrip.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Настройки_295__00)
                      .Content(@<text>
                                    @(Html.Kendo().Grid<PermissionRoleModel>()
                                .Name("GridPermissionRole" + Model[0])
                                .Columns(columns => {
                                    columns.Bound(p => p.RoleName).Title("Наименование роли");
                                    columns.Command(command => { command.Edit(); command.Destroy(); }).Width(200);
                                })
                                .ToolBar(toolbar => toolbar.Create().HtmlAttributes(new { @class = "pwRefAdd" }))
                                .HtmlAttributes(new { @class = "pwGrid" })
                                .Reorderable(reorderable => reorderable.Columns(true))
                                .Resizable(resizable => resizable.Columns(true))
                                .Sortable()
                                //.Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                                .Editable(editable => editable.Mode(GridEditMode.PopUp))
                                .Scrollable()
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .Model(model => {
                                        model.Id(p => p.EmployeeRoleId);
                                        model.Field(p => p.RoleId);
                                        model.Field(f => f.RoleName);
                                    })
                                    .Read(read => read.Action("EmployeePermissionRoleRead", "Employe").Data("PermissionParams"))
                                    .Create(update => update.Action("EmployeePermissionRoleCreate", "Employe").Data("PermissionParams"))
                                    .Update(update => update.Action("EmployeePermissionRoleUpdate", "Employe").Data("PermissionParams"))
                                    .Destroy(update => update.Action("EmployeePermissionRoleDestroy", "Employe").Data("PermissionParams"))
                                    .Events(events => events.Error("error_handlerPP")))
                                .Events(e => e.DataBound("dataBoundPermission"))
                                    )
                                </text>);

              }
          })
)
</div>
<script>
    resizeGrid3("#GridPermission" + '@Model[0]', 320);
    resizeGrid3("#GridPermissionRole" + '@Model[0]', 360);
    resizeGrid2("#gridAdminListDoc" + '@Model[0]');
    resizeGrid2("#gridHolidays" + '@Model[0]');
    resizeGrid2("#gridExperiences" + '@Model[0]');

    var treeviewElement = $("#pwEmployeeContentWrapper");
    treeviewElement.height($(window).height() - 320);

    var treeviewElement2 = $("#pwEmployeeContentWrapper2");
    treeviewElement2.height($(window).height() - 320);

    var treeviewElement3 = $("#formProfile" + '@Model[0]');
    treeviewElement3.height($(window).height() - 320);
</script>
