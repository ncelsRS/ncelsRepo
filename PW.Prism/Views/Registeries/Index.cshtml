@using PW.Ncels.Database.DataModel
@using PW.Ncels.Database.Models
@model Guid




<script>
    function DicParams() {
        return {
            type: 1
        };
    }
    InitFilterDictionaryGrid('@Model.ToString()');
</script>


                    <div class="pwPanelBar">
                        <div class="pwBlockAdd k-block">

                            <div id="pwOne">
                                @(Html.Kendo().MaskedTextBox().Name("findText" + Model).Mask("").HtmlAttributes(new { @class = "pwWidth100" }))
                            </div>

                            <div id="pwTwo" hidden="true">
                                    @(Html.Kendo().DropDownList().Name("findType" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                                       .DataTextField("Text")
                                       .DataValueField("Value")
                                       .BindTo(new List<SelectListItem>() {
                                           new SelectListItem() {
                                               Text = PW.Ncels.Database.Recources.Messages.Property_Все_394__00, Value = "0"
                                           },
                                           new SelectListItem() {
                                               Text = PW.Ncels.Database.Recources.Messages.Property_Пономеру_281__00, Value = "1"
                                           },
                                           new SelectListItem() {
                                               Text = PW.Ncels.Database.Recources.Messages.Property_Покоду_345__00, Value = "2"
                                           },
                                           new SelectListItem() {
                                               Text = PW.Ncels.Database.Recources.Messages.Property_Попримечанию_215__00, Value = "3"
                                           }
                                       })
                                       .SelectedIndex(0)
                                    )
                                </div>

                            <div id="pwThree">
                                @(Html.Kendo().Button().Name("find" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                                   .Content(PW.Ncels.Database.Recources.Messages.Property_Найти_372__00)
                                   .ImageUrl("/Content/images/find.png"))
                            </div>

        

                        </div>
                        <div id="pwSix">
                            @(Html.Kendo().Button().Name("reload" + Model).HtmlAttributes(new { @class = "pwWidth100 pwButtonReload" })
                                                    .Content("")
                               .ImageUrl("/Content/images/reload.png"))

                        </div>
                        @(Html.Kendo().Grid<Registery>()
                                   .Name("gridListDic" + Model)
                           .Columns(columns => {
                               columns.Bound(p => p.Code).Title(PW.Ncels.Database.Recources.Messages.Property_Наименованиенаказахском_33__00).Width(150);
                               columns.Bound(p => p.Name).Title(PW.Ncels.Database.Recources.Messages.Property_Наименованиенарусском_41__00).Width(150).ClientFooterTemplate(PW.Ncels.Database.Recources.Messages.Property_Всего_356__00 +"#=count#");
                               columns.Bound(p => p.Count).Title(PW.Ncels.Database.Recources.Messages.Property_Наименованиенаказахском_33__00).Width(150);
                               columns.Bound(p => p.Cost).Title(PW.Ncels.Database.Recources.Messages.Property_Наименованиенаказахском_33__00).Width(150);
                               columns.Command(command => { command.Edit(); command.Destroy(); }).Width(80);

                           })
                            .ToolBar(toolbar => toolbar.Create().HtmlAttributes(new { @class = "pwRefAdd" }))
                            .Editable(editable => editable.Mode(GridEditMode.PopUp))
                            .Reorderable(reorderable => reorderable.Columns(true))
                            .Resizable(resizable => resizable.Columns(true))
                            .Scrollable(scrollable => scrollable.Virtual(true))
                             .Filterable()
                            .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                            .HtmlAttributes(new { @class = "pwGridRef" })
                            .DataSource(dataSource => dataSource
                               .Ajax()
                                       .Model(model => model.Id(p => p.Id))
                                               .Aggregates(aggregates => { aggregates.Add(p => p.Name).Count(); })

                            .PageSize(50)
                            .Sort(sort => sort.Add("Name").Ascending())
                            .Create(update => update.Action("RegisterCreate", "Registeries").Data("DicParams"))
                            .Read(read => read.Action("AllList", "Registeries").Data("DicParams"))
                            .Update(update => update.Action("RegisterUpdate", "Registeries").Data("DicParams"))
                            .Destroy(update => update.Action("RegisterDestroy", "Registeries").Data("DicParams"))

                           ))
                    </div>
         
<input type="hidden" id="@("typeDic" + Model)" />
<script>
    resizeGrid('@("#gridListDic" + Model)');



</script>
