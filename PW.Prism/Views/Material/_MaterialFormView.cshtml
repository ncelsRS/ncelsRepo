@using PW.Ncels.Database.DataModel
@using PW.Ncels.Database.Recources
@model EXP_Materials

<table style="width: 100%">
    <tr style="vertical-align: top;">
        <td class="editColumn">
            <dl class="pwEditRef">
                <dt>
                    @Html.DisplayNameFor(model => model.Id)
                </dt>
                <dd>
                    @Html.Kendo().TextBoxFor(model => model.Id).Enable(false)
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.IsAdditional)
                </dt>
                <dd>
                    @Html.CheckBoxFor(model => model.IsAdditional)
                    <span data-for="IsAdditional" class="k-invalid-msg"></span>
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.TypeId)
                </dt>
                <dd>
                    @(Html.Kendo().ComboBoxFor(p => p.TypeId)
                        .ValuePrimitive(true)
                        .DataValueField("Id")
                        .DataTextField("Name")
                        .DataSource(source => source.Read("GetReference", "Dictionaries", new { type = "MaterialRdType" }))
                     )
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.Name)
                </dt>
                <dd>
                    @Html.Kendo().TextBoxFor(model => model.Name)
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.DrugFormId)
                </dt>
                <dd>
                    @(Html.Kendo().ComboBoxFor(p => p.DrugFormId)
                        .ValuePrimitive(true).DataValueField("Id")
                        .DataTextField("Name")
                        .DataSource(source => source.Read("GetDrugFormNodes", "Material")))
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.Dosage)
                </dt>
                <dd>
                    @Html.Kendo().NumericTextBoxFor(model => model.Dosage)
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.DosageUnitId)
                </dt>
                <dd>
                    @(Html.Kendo().ComboBoxFor(p => p.DosageUnitId)
                        .ValuePrimitive(true).DataValueField("Id")
                        .DataTextField("Name")
                        .DataSource(source => source.Read("GetReference", "Dictionaries", new { type = "MeasureType" }))
                          )
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.Concentration)
                </dt>
                <dd>
                    @Html.Kendo().TextBoxFor(model => model.Concentration)
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.Volume)
                </dt>
                <dd>
                    @Html.Kendo().NumericTextBoxFor(model => model.Volume)
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.VolumeUnitId)
                </dt>
                <dd>
                    @(Html.Kendo().ComboBoxFor(p => p.VolumeUnitId)
                                                        .ValuePrimitive(true).DataValueField("Id")
                                                        .DataTextField("Name")
                                                        .DataSource(source => source.Read("GetReference", "Dictionaries", new { type = "MeasureType" })))
                </dd>
                <br />


                <dt>
                    @Html.DisplayNameFor(model => model.DosageQuantity)
                </dt>
                <dd>
                    @Html.Kendo().NumericTextBoxFor(model => model.DosageQuantity)
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.IsContainNPP)
                </dt>
                <dd>
                    @Html.CheckBoxFor(model => model.IsContainNPP)
                    <span data-for="IsAdditional" class="k-invalid-msg"></span>
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.ProducerIdNullable)
                </dt>
                <dd>
                    @(Html.Kendo().ComboBoxFor(p => p.ProducerIdNullable)
                                                        .ValuePrimitive(true).DataValueField("Id")
                                                        .DataTextField("Name")
                                                        .DataSource(source => source.Read("GetOrganizations", "Dictionaries"))
                    )
                @*
                    @(Html.Kendo().DropDownListFor(model => model.ProducerId)
                        .OptionLabel("Выберите производителя")
                        .ValuePrimitive(true).DataValueField("Id")
                        .DataTextField("Name")
                        .DataSource(source => source.Read("GetOrganizations", "Dictionaries"))
                    )
                *@
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.CountryIdNullable)
                </dt>
                <dd>
                    @(Html.Kendo().ComboBoxFor(p => p.CountryIdNullable)
                                                        .ValuePrimitive(true).DataValueField("Id")
                                                        .DataTextField("Name")
                                                        .DataSource(source => source.Read("GetReference", "Dictionaries", new { type = "Country" })))
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.Quantity)
                </dt>
                <dd>
                    @Html.Kendo().NumericTextBoxFor(model => model.Quantity)
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.UnitIdNullable)
                </dt>
                <dd>
                    @(Html.Kendo().ComboBoxFor(p => p.UnitIdNullable)
                                                        .ValuePrimitive(true).DataValueField("Id")
                                                        .DataTextField("Name")
                                                        .DataSource(source => source.Read("GetReference", "Dictionaries", new { type = "MeasureType" })))
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.Batch)
                </dt>
                <dd>
                    @Html.Kendo().TextBoxFor(model => model.Batch)
                </dd>
                <br />
            </dl>

        </td>
        <td class="editColumn">
            <dl class="pwEditRef">
                <dt>
                    @Html.DisplayNameFor(model => model.DateOfManufacture)
                </dt>
                <dd>
                    @Html.Kendo().DatePickerFor(model => model.DateOfManufacture)
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.ExpirationDate)
                </dt>
                <dd>
                    @Html.Kendo().DatePickerFor(model => model.ExpirationDate)
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.RetestDate)
                </dt>
                <dd>
                    @Html.Kendo().DatePickerFor(model => model.RetestDate)
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.IsCertificatePassport)
                </dt>
                <dd>
                    @Html.CheckBoxFor(model => model.IsCertificatePassport)
                    <span data-for="IsCertificatePassport" class="k-invalid-msg"></span>
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.StorageConditionId)
                </dt>
                <dd>
                    @(Html.Kendo().ComboBoxFor(p => p.StorageConditionId)
                                                        .ValuePrimitive(true).DataValueField("Id")
                                                        .DataTextField("Name")
                                                        .DataSource(source => source.Read("GetReference", "Dictionaries", new { type = "StorageCondition" })))
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.StorageTemperatureFrom)
                </dt>
                <dd>
                    @Html.Kendo().NumericTextBoxFor(model => model.StorageTemperatureFrom)
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.StorageTemperatureTo)
                </dt>
                <dd>
                    @Html.Kendo().NumericTextBoxFor(model => model.StorageTemperatureTo)
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.ExternalStateId)
                </dt>
                <dd>
                    @(Html.Kendo().ComboBoxFor(p => p.ExternalStateId)
                                                        .ValuePrimitive(true).DataValueField("Id")
                                                        .DataTextField("Name")
                                                        .DataSource(source => source.Read("GetReference", "Dictionaries", new { type = "MaterialRdExternalState" })))
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.ActiveSubstancePercent)
                </dt>
                <dd>
                    @Html.Kendo().NumericTextBoxFor(model => model.ActiveSubstancePercent)
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.WaterContentPercent)
                </dt>
                <dd>
                    @Html.Kendo().NumericTextBoxFor(model => model.WaterContentPercent)
                </dd>
                <br />


                <dt>
                    @Html.DisplayNameFor(model => model.ConcordanceStatementId)
                </dt>
                <dd>
                    @(Html.Kendo().ComboBoxFor(p => p.ConcordanceStatementId)
                                                        .ValuePrimitive(true).DataValueField("Id")
                                                        .DataTextField("Name")
                                                        .DataSource(source => source.Read("GetReference", "Dictionaries", new { type = "MaterialRdExternalState" }))
                      )
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.OpeningDate)
                </dt>
                <dd>
                    @Html.Kendo().DatePickerFor(model => model.OpeningDate)
                </dd>
                <br />

                <dt>
                    @Html.DisplayNameFor(model => model.ExpirationAfterOpeningDate)
                </dt>
                <dd>
                    @Html.Kendo().DatePickerFor(model => model.ExpirationAfterOpeningDate)
                </dd>
                <br />

            </dl>
        </td>
    </tr>
</table>
