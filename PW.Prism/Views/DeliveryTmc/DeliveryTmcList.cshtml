@using PW.Ncels.Database.DataModel
@using PW.Ncels.Database.Models
@using PW.Ncels.Database.Recources
<!-- Список ТМЦ на получение -->
@model  PW.Prism.ViewModels.Lims.OrderTmcListViewModel
<script>
    var DeliveryTMCList = {
        _reload: function () {
            var grid = $('@("#gridDeliveryTmcList" + Model.Id)').data("kendoGrid");
            grid.dataSource.read();
        },
        _syncHandler: function (e) {
            this.read();
        },
        _callRejectDialog: function (dataItem, url, text) {
            var window = $("#TaskCommandWindow");
            window.kendoWindow({
                width: "550px",
                height: "auto",
                modal: true,
                title: 'Отклонить ТМЦ',
                actions: ["Close"],
                content: '@Url.Action("RejectDialog", "Dialog")?Id=' + dataItem.Id
                + '&url=' + url
                + '&text=' + text
            });
            window.data("kendoWindow").gridId = 'gridDeliveryTmcList' + '@Model.Id';
            window.data("kendoWindow").center();
            window.data("kendoWindow").open();
        },

        issueFn: function () {
            var grid = $('#gridDeliveryTmcList' + '@Model.Id').data('kendoGrid');
            var selectedRow = grid.select();
            var dataItem = grid.dataItem(selectedRow);

            var window = $("#TaskCommandWindow");
            window.kendoWindow({
                width: "550px",
                height: "auto",
                modal: true,
                title: 'Выдать ТМЦ',
                actions: ["Close"],
                position: {
                    top: 100,
                    left: "30%"
                },
                content: '/DeliveryTmc/DeliveryTmcIssueView?id=' + dataItem.Id
            });
            window.data("kendoWindow").dialogCallback = function () {
                DeliveryTMCList._reload();
            };
            window.data("kendoWindow").open();
        },
        rejectFn: function () {
            var grid = $('#gridDeliveryTmcList' + '@Model.Id').data('kendoGrid');
            var selectedRow = grid.select();
            var dataItem = grid.dataItem(selectedRow);

            var text = "Отклонить?";
            var url = encodeURIComponent('@Url.Action("RejectOrder", "DeliveryTmc")?tmcOutId=' +
                dataItem.TmcOutId);
            DeliveryTMCList._callRejectDialog(dataItem, url, text);
        },
        changeHandler: function (e) {
            debugger;
            var grid = $('#gridDeliveryTmcList' + '@Model.Id').data('kendoGrid');
            var selectedRow = grid.select();
            var dataItem = grid.dataItem(selectedRow);

            if (dataItem.StateType == '@TmcOut.TmcOutStatuses.Ordered') {
                $('#custombtnIssue').removeClass("k-state-disabled");
                $('#custombtnReject').removeClass("k-state-disabled");
            } else {
                $('#custombtnIssue').addClass("k-state-disabled");
                $('#custombtnReject').addClass("k-state-disabled");
            }
            

//            if (dataItem.StateType == '@TmcOut.TmcOutStatuses.Issued') {
//                $('#custombtnIssue').addClass("k-state-disabled");
//                $('#custombtnReject').addClass("k-state-disabled");
//            }
        },
        changeStatusFn: function(e) {
            var selectType = $(e.item).find("> .k-link").attr('ItemType');
            if (selectType != null) {

                var gridId = $(e.item).find("> .k-link").attr('ModelId');
                var filter = new Array();

                $("#TmcTypeId" + gridId).val(selectType);
                filter.push({ field: "StateType", operator: "eq", value: selectType });
                
                var grid = $("#gridDeliveryTmcList" + gridId).data("kendoGrid");
                if (selectType == '') {
                    grid.dataSource.filter([]);
                } else {
                    grid.dataSource.filter({
                        filters: filter
                    });
                }
            }
        }
    };
</script>

@(Html.Kendo().Splitter()
            .HtmlAttributes(new { @class = "pwSplitter k-block" })
            .Name(("splitter" + Model))
            .Panes(panes =>
            {
            panes.Add()
                .Size("250px")
                .Collapsible(true)
                .MaxSize("500px")
                .MinSize("250px")
                .Content(
                @<div class="pwPanelBar">
                    @(Html.Kendo().PanelBar().HtmlAttributes(new { @class = "pwPanelBar" })
                                   .Name("panelbar" + Model)
                                   .ExpandMode(PanelBarExpandMode.Multiple)
                                   .ExpandAll(true)
                                   .HtmlAttributes(new { style = "width:auto;" })
                                   .Events(e => e.Select("DeliveryTMCList.changeStatusFn"))
                                   .Items(panelbar =>
                                   {
                                       panelbar.Add().Expanded(true);
                                       panelbar.Add().Text("По статусу")
                                           .Items(panelbarItem =>
                                           {
                                               panelbarItem.Add().Text("Все")
                                                   .LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemType", "" }, { "ModelId", Model.Id.ToString() } });

                                               foreach (Item dictionaryInfo in (List<Item>)ViewBag.StatusTypes)
                                               {
                                                   panelbarItem.Add().Text(dictionaryInfo.Name)
                                                   .LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemType", dictionaryInfo.Id }, { "ModelId", Model.Id.ToString() } });
                                               }
                                           });
                                   })
                    )
                </div>
                );

                panes.Add().Scrollable(false).Size("100%").Content(
                    @<div class="pwPanelBar">
                        <div class="pwBlockAdd k-block">
                        </div>
                        <div id="pwSix">
                            @(Html.Kendo().Button().Name("reload" + Model.Id)
                            .HtmlAttributes(new { @class = "pwWidth100 pwButtonReload" }).Content("")
                            .ImageUrl("/Content/images/reload.png"))
                        </div>
                        @(Html.Kendo().Grid<LimsTmcOutView>()
                            .Name("gridDeliveryTmcList" + Model.Id)
                            .Columns(columns =>
                            {
                                columns.Bound(p => p.Name).Title("Наименование ТМЦ").Width(150);
                                columns.Bound(p => p.Code).Title("Код").Width(100);
                                columns.Bound(p => p.Count).Title("Количество/объем на получение").Width(100);
                                columns.Bound(p => p.CountFact).Title("Количество/объем выдано").Width(100);
                                columns.Bound(p => p.MeasureTypeConvertName).Title("Единица измерения").Width(100);
                                columns.Bound(p => p.OutTypeDicValue).Title("Вид получения").Width(150);
                                columns.Bound(p => p.OwnerEmployeeFullName).Title("ФИО МОЛ").Width(150);
                                columns.Bound(p => p.CreatedEmployeeFullName).Title("ФИО сотрудника").Width(150);
                                columns.Bound(p => p.StateTypeValue).Title("Статус").Filterable(false).Sortable(false).Width(150);
                                columns.Bound(p => p.CreatedDate).Format("{0:dd.MM.yyyy}").Title("Дата создания").Width(100);
                                columns.Bound(p => p.Note).Title("Описание (цель использования)").Width(150);
                                columns.Bound(p => p.Comment).Title("Комментарии").Width(150);
                            })
                            .ColumnMenu(c => c.Columns(true))
                            .Reorderable(reorder => reorder.Columns(true))
                            .ToolBar(toolbar =>
                            {
                                toolbar.Custom().Name("btnIssue").Text("Выдать").HtmlAttributes(new { Id = "custombtnIssue", @class = "k-state-disabled" });
                                toolbar.Custom().Name("btnReject").Text("Отклонить").HtmlAttributes(new { Id = "custombtnReject", @class = "k-state-disabled" });
                            })
                            .Groupable()
                            .Filterable()
                            .Sortable()
                            .Pageable(s => s.Refresh(true))
                            .Scrollable()
                            .Resizable(s => s.Columns(true))
                            .Selectable(c => c.Mode(GridSelectionMode.Single))
                            .HtmlAttributes(new { @class = "pwGrid" })
                            .DataSource(dataSource => dataSource
                                .Ajax().Model(model =>
                                {
                                    model.Id(p => p.Id);
                                })
                                .PageSize(20)
                                .Read(read => read.Action("ReadData", "DeliveryTmc"))
                            )
                            .Events(c =>
                            {
                                c.Change("DeliveryTMCList.changeHandler");
                            })
                        )
                    </div>
                );
            }))

<script>
    (function () {
        var name = '@Model.Id';

        resizeGrid3("#gridDeliveryTmcList" + name, 110);

        $('#reload' + name).click(function (e) {
            DeliveryTMCList._reload();
        });

        $("#custombtnIssue").click(function (e) {
            e.preventDefault();
            DeliveryTMCList.issueFn();
            return false;
        });

        $("#custombtnReject").click(function (e) {
            e.preventDefault();
            DeliveryTMCList.rejectFn();
            return false;
        });
    })();
</script>


