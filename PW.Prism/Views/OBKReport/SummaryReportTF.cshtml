@using PW.Ncels.Database.Constants
@using PW.Ncels.Database.DataModel
@using PW.Ncels.Database.Helpers
@using PW.Ncels.Database.Models
@model Guid?


@helper ToolbarDeclarationReport()
    {
        <div class="pull-left">
            <label>Дата начала</label>
            @( Html.Kendo().DatePicker().Name("dateFrom" + Model).Format("{0:dd.MM.yyyy}") )
            <label>Дата окончания</label>
            @( Html.Kendo().DatePicker().Name("dateTo" + Model).Format("{0:dd.MM.yyyy}") )

            @( Html.Kendo().Button().Name("search" + Model).Content("Найти"))                                                                                 
            @( Html.Kendo().Button().Name("export" + Model).Content("Экспорт"))

        </div>
        <div class="pull-right">
            <div style="display: inline-block" id="columnMenu" class="custom-grid-menu"></div>
            <div style="display: inline-block">
                @( Html.Kendo().Button().Name("reload" + Model).Content("").ImageUrl("/Content/images/reload.png"))
            </div>
        </div>
}

@(Html.Kendo().Splitter()
                      .HtmlAttributes(new { @class = "pwSplitter k-block" })
                      .Name(("splitter"))
                      .Panes(panes =>
                      {
                          panes.Add().Scrollable(false).Size("100%").Content(
                            @<div class="pwPanelBar">
                                <div id="OBK_SummaryReportTF"></div>
                                @( Html.Kendo().Grid<SummaryReportTF_Result>()
                                                                             .Name("SummaryReportTF_Result" + Model)

                                                                             .Columns(columns =>
                                                                             {
                                                                                 columns.Bound(p => p.Name).Title("Филиал").Width(80);
                                                                                 columns.Bound(p => p.DeclarationCount).Title("Кол-во заявок").Width(100);
                                                                                 columns.Bound(p => p.ProtocolCount).Title("Общее кол-во протоколов ").Width(120);
                                                                                 columns.Bound(p => p.ProtocolInWorkCount).Title("Кол-во протоколов в работе").Width(80);
                                                                                 columns.Bound(p => p.TaskMaterialCompletedCount).Title("Кол-во протоколов <br> в статусе завершено").Width(150);
                                                                                 columns.Bound(p => p.ZBKCount).Title("Общее кол-во сертификатов").Width(100);
                                                                                 columns.Bound(p => p.DeclarationZBKCount).Title("Кол-во сертификатов <br> путем декларирование").Width(80);
                                                                                 columns.Bound(p => p.SerialZBKCount).Title("Кол-во серийных <br> сертификатов").Width(100);
                                                                                 columns.Bound(p => p.PartyZBKCount).Title("Кол-во ОБК каждой <br> серии (партии)").Width(100);
                                                                                 columns.Bound(p => p.DefectiveProductsCount).Title("Кол-во забракованной <br> продукции").Width(100);
                                                                             })
                                                                         .AutoBind(false)
                                                                         .Reorderable(reorderable => reorderable.Columns(true))
                                                                         .Resizable(resizable => resizable.Columns(true))
                                                                         .ToolBar(toolbar => { toolbar.Template(ToolbarDeclarationReport().ToHtmlString()); })
                                                                         .Sortable()
                                                                         .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                                                                         .Scrollable(scrollable => scrollable.Virtual(true))
                                                                         .Pageable()
                                                                         .HtmlAttributes(new { style = "height:500px; font-size: 12px" })
                                                                         .DataSource(dataSource => dataSource
                                                                             .Ajax()
                                                                             .PageSize(30)
                                                                             .Read(read => read.Action("SummaryReportTF", "OBKReport")
                                                                               .Data(
                                                                               " function getDates(){  "
         + "return {dateFrom: $('#dateFrom' + '"+Model+"').val(),"
           + "dateTo: $('#dateTo' + '" + Model + "').val()};} "
                                                                               )
                                                                             ))
                                                                            )
                                ))

                            </div>
                                                              );
                              }))

                             <script>

    function reloadSummaryReportTFReport(){
        $("#SummaryReportTF_Result" + "@Model").data("kendoGrid").dataSource.read();
    }

    $("#reload" + "@Model").click(function ()
        {
        $("#search" + "@Model").click();
        });

    function getDates(){
        return {
            dateFrom: $("#dateFrom" + "@Model").val(),
            dateTo: $("#dateTo" + "@Model").val()
        };
    }

    $("#export" + "@Model").click(function ()
    {
         var fr = $("#dateFrom" + "@Model").val();
         var to = $("#dateTo" + "@Model").val();

         if(fr != '' || to != ''){
             window.open('/OBKReport/ExportSummaryReportTF?dateFrom=' + fr + '&dateTo=' + to);
         } else
         {
             alert("Заполните основные параметры поиска!");
         }

    });

     $("#search" + "@Model").click(function ()
     {
         var fr = $("#dateFrom" + "@Model").val();
         var to = $("#dateTo" + "@Model").val();

         if(fr != '' || to != ''){
             reloadSummaryReportTFReport();
         } else
         {
             alert("Заполните основные параметры поиска!");
         }

    });


                             </script>

