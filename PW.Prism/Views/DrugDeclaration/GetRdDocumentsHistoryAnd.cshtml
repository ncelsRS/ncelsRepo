@using PW.Ncels.Database.Helpers
@model PW.Ncels.Database.Models.Common.FileGroup

@{
    var andGroup = Model;
    var downloadActionGrp = "/Upload/FileDownload?";
    var removeActionGrp = "/Upload/FileDelete?";
    var path = (Guid)ViewBag.Path;
    var currentEmployeeGuid = UserHelper.GetCurrentEmployee().Id;
}
<script>
    function onBeforeAndUploaded(e) {
        e.data = {
            comment: $("#newAndComment").val()
        };

    }
</script>
<div class="panel">
    <div class="panel-heading">
        <strong>Номер АНД 0000</strong>
    </div>
    <div class="panel-body">
        <table class="table table-bordered table-hover tbl_rdHist">
            <thead>
                <tr>
                    <th>
                        Источник
                    </th>
                    <th>
                        Этап
                    </th>
                    <th>Дата</th>
                    <th>Версия</th>
                    <th>Файл</th>
                    <th>Комментарий</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (andGroup != null)
                {
                    var origins = andGroup.FileGroupItems.OrderByDescending(x => x.Version).ToList();
                    var origin = origins.FirstOrDefault();
                    var uploadExists = andGroup.FileGroupItems.Any(x => x.OwnerId == currentEmployeeGuid);
                    foreach (var gr in andGroup.FileGroupItems.OrderBy(x => x.Version))
                    {
                        var currentDownloadAction = downloadActionGrp + gr.AttachId;
                        <tr>
                            <td>@gr.OwnerName</td>
                            <td>@gr.Stage</td>
                            <td>@gr.CreateDate</td>
                            <td>@gr.Version</td>
                            <td>@gr.AttachName</td>
                            <td class="comment">@gr.Comment</td>
                            <td>
                                <div class="btn-group" style="float: right; margin-right: 10px; color: white; text-align: left">
                                    <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Операции <span class="caret"></span></button>
                                    <ul class="dropdown-menu btnmenu">
                                        <li class="btn-info">
                                            <a href="#" onclick="fileView('@ViewBag.Path', '@string.Format("{0}/{1}{2}", andGroup.Id, gr.MetadataId, System.IO.Path.GetExtension(gr.AttachName))')" class="link-object" style="color: white; padding: 5px"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span> Просмотр</a>
                                        </li>
                                        <li class="btn-info">
                                            <a href="@currentDownloadAction" class="link-object" style="color: white; padding: 5px"><span class="glyphicon glyphicon-download" aria-hidden="true"></span> Скачать</a>
                                        </li>
                                        @if (gr.OwnerId == currentEmployeeGuid)
                                        {
                                            var currentRemoveAction = removeActionGrp + gr.AttachId;
                                            <li class="btn-danger edit-li">
                                                <a href="#" data-link="@currentRemoveAction" data-activetab="andTab" onclick="TryRemoveHistoryFile(this);" style="color: white; padding: 5px"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Удалить</a>
                                            </li>
                                        }
                                    </ul>
                                </div>


                            </td>
                        </tr>
                        //string id = null, string path = null, string name = null, string fileId = null
                    }
                    <tr>
                        <td colspan="7">
                            @if (!uploadExists)
                            {

                                @(Html.Kendo().Upload().Name("attachAnd").Multiple(false).HtmlAttributes(new { accept = "application/pdf,application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, image/jpeg", data_activetab = "andTab" })
                                    .Events(ev => ev.Success("SuccessAndUploaded")
                                    .Upload("onBeforeAndUploaded"))
                                    .Messages(m => m.Select("Выбрать АНД для загрузки..."))
                                    .Async(ac => ac.AutoUpload(false)
                                          .Save("FilePostv2", "Upload", new
                                          {
                                              code = andGroup.Id,
                                              path = path,
                                              saveMetadata = true,
                                              originFileId = origin == null ? null : origin.MetadataId
                                          })))

                                <div class="form-group">
                                    <label for="newAndComment" class="control-label col-md-4">Комментарий</label>
                                    <div class="col-md-8">
                                        <input type="text" id="newAndComment" class="form-control" />
                                    </div>
                                </div>
                            }

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>