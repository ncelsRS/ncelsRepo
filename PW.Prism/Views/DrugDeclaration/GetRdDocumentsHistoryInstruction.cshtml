@using PW.Ncels.Database.Constants
@using PW.Ncels.Database.Helpers
@model PW.Ncels.Database.Models.Common.FileGroup
@{
    var instrGroup = Model;
    var downloadActionGrp = "/Upload/FileDownload?";
    var removeActionGrp = "/Upload/FileDelete?";
    var path = (Guid)ViewBag.Path;
    var currentEmployeeGuid = UserHelper.GetCurrentEmployee().Id;
    var kzLang = "kz";
}
<script>
    function onBeforeRuInstrUploaded(e) {
        e.data = {
            comment: $("#newInstrRuComment").val(),
            numOfPages: $("#newInstrRuPagesCount").val()
    };
    }
    function onBeforeKzInstrUploaded(e) {
        e.data = {
            comment: $("#newInstrKzComment").val(),
            numOfPages: $("#newInstrKzPagesCount").val()
        };
    }
</script>
<div class="panel panel-info">
    <div class="panel-heading">
        Инструкция на русском языке
    </div>
    <div class="panel-body">
        <table class="table table-bordered table-hover tbl_rdHist">
            <thead>
            <tr>
                <th>
                    Источник
                </th>
                <th>
                    Этап
                </th>
                <th>Дата</th>
                <th>Версия</th>
                <th>Файл</th>
                <th>Комментарий</th>
                <th>Кол-во стр.</th>
             
                <th></th>
            </tr>
            </thead>
            <tbody>
            @if (instrGroup != null)
            {
                var origin = instrGroup.FileGroupItems.Where(x=>x.Language!=kzLang).OrderByDescending(x => x.Version).FirstOrDefault();
                var uploadExists = instrGroup.FileGroupItems.Any(x => x.OwnerId == currentEmployeeGuid && x.Language!=kzLang);
                foreach (var gr in instrGroup.FileGroupItems.Where(x=>x.Language!=kzLang).OrderBy(x=>x.Version))
                {
                    var currentDownloadAction = downloadActionGrp + gr.AttachId;
                  
                    <tr>
                        <td>@gr.OwnerName</td>
                        <td>@gr.Stage</td>
                        <td>@gr.CreateDate</td>
                        <td>@gr.Version</td>
                        <td>@gr.AttachName</td>
                        <td class="comment">@gr.Comment</td>
                        <td>@gr.NumOfPages</td>
                       
                        <td>
                            <a href="@currentDownloadAction" class="btn btn-default"><span class="glyphicon glyphicon-download"></span></a>
                            @if (gr.OwnerId == currentEmployeeGuid)
                            {
                                var currentRemoveAction = removeActionGrp + gr.AttachId;
                                <a href="#" data-link="@currentRemoveAction" data-activetab="instrTab" onclick="TryRemoveHistoryFile(this);" class="btn btn-default"><span class="glyphicon glyphicon-remove"></span></a>
                            }
                        </td>
                    </tr>
                }
                <tr>
                    <td colspan="8">
                        @if (!uploadExists)
                        {
                            @(Html.Kendo().Upload().Name("attachInstr").Multiple(false).HtmlAttributes(new {accept = "application/pdf,application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, image/jpeg", data_activetab = "instrTab"})
                                  .Events(ev => ev.Success("SuccessInstructionUploaded")
                                  .Upload("onBeforeRuInstrUploaded"))
                                  .Messages(m => m.Select("Выбрать инструкцию для загрузки..."))
                                  .Async(ac => ac.AutoUpload(false)
                                      .Save("FilePostv2", "Upload", new
                                      {
                                          code = instrGroup.Id,
                                          path = path,
                                          saveMetadata = true,
                                          originFileId = origin == null ? null : origin.MetadataId
                                      })))

                            <div class="form-group">
                                <label for="newInstrRuComment" class="control-label col-md-4">Комментарий</label>
                                <div class="col-md-8">
                                    <input type="text" id="newInstrRuComment" class="form-control" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="newInstrRuPagesCount" class="control-label col-md-8">Кол-во страниц</label>
                                <div class="col-md-4">
                                    <input type="number" id="newInstrRuPagesCount" class="form-control" />
                                </div>
                            </div>
                        }


                        
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>
<div class="panel panel-info">
    <div class="panel-heading">
        Инструкция на казахском языке
    </div>
    <div class="panel-body">
        <table class="table table-bordered table-hover tbl_rdHist">
            <thead>
                <tr>
                    <th>
                        Источник
                    </th>
                    <th>
                        Этап
                    </th>
                    <th>Дата</th>
                    <th>Версия</th>
                    <th>Файл</th>
                    <th>Комментарий</th>
                      <th>Кол-во стр.</th> 
                        <th>Статус</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (instrGroup != null)
                    {
                        var origin = instrGroup.FileGroupItems.Where(x=>x.Language == kzLang).OrderByDescending(x => x.Version).FirstOrDefault();
                        var uploadExists = instrGroup.FileGroupItems.Any(x => x.OwnerId == currentEmployeeGuid && x.Language == kzLang);
                        foreach (var gr in instrGroup.FileGroupItems.Where(x=>x.Language== kzLang).OrderBy(x=>x.Version))
                        {
                            var currentDownloadAction = downloadActionGrp + gr.AttachId;
                            var statusId = gr.MetadataId + "_status";
                            var sendBtn = gr.MetadataId + "_sendBtn";
                            <tr>
                                <td>@gr.OwnerName</td>
                                <td>@gr.Stage</td>
                                <td>@gr.CreateDate</td>
                                <td>@gr.Version</td>
                                <td>@gr.AttachName</td>
                                <td class="comment">@gr.Comment</td>
                                <td>@gr.NumOfPages</td>
                                <td id="@statusId">
                                    @gr.StatusName
                                </td>
                                <td>
                                    <div class="btn-group" style="float: right; margin-right: 10px; color: white; text-align: left">
                                        <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Операции <span class="caret"></span></button>
                                        <ul class="dropdown-menu btnmenu">

                                            <li class="btn-info">
                                                <a href="@currentDownloadAction" class="link-object" style="color: white; padding: 5px"><span class="glyphicon glyphicon-download" aria-hidden="true"></span> Скачать</a>
                                            </li>
                                            @if (gr.OwnerId == currentEmployeeGuid)
                                            {
                                                var currentRemoveAction = removeActionGrp + gr.AttachId;
                                                if (gr.StatusCode == null || gr.StatusCode == CodeConstManager.STATUS_FILE_CODE_DRAFT)
                                                {
                                                    <li class="btn-danger edit-li">
                                                        <a href="#" data-link="@currentRemoveAction" data-activetab="instrTab" onclick="TryRemoveHistoryFile(this);" style="color: white; padding: 5px"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Удалить</a>
                                                    </li>
                                                }
                                                if (gr.StatusCode == null || gr.StatusCode == CodeConstManager.STATUS_FILE_CODE_DRAFT || gr.StatusCode == CodeConstManager.STATUS_FILE_CODE_REFUSED)
                                                {
                                                    <li class="btn-primary edit-li">
                                                        <a href="#" style="color: white; padding: 5px" onclick="sendTranslateOnAgreement(this, '@gr.MetadataId', '1','1')"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> На согласование</a>
                                                    </li>
                                                }
                                            
                                            }
                                        </ul>
                                    </div>
                                </td>
                            </tr>
                        }
                        <tr>
                            <td colspan="8">
                                @if (!uploadExists)
                                {
                                    @(Html.Kendo().Upload().Name("attachInstrKz").Multiple(false).HtmlAttributes(new { accept = "application/pdf,application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, image/jpeg", data_activetab = "instrTab" })
                                          .Events(ev => ev.Success("SuccessInstructionUploaded")
                                          .Upload("onBeforeKzInstrUploaded"))
                                          .Messages(m => m.Select("Выбрать инструкцию на казахском языке для загрузки..."))
                                          .Async(ac => ac.AutoUpload(false)
                                              .Save("FilePostv2", "Upload", new
                                              {
                                                  code = instrGroup.Id,
                                                  path = path,
                                                  saveMetadata = true,
                                                  originFileId = origin == null ? null : origin.MetadataId,
                                                  lang = kzLang
                                              })))

                                    <div class="form-group">
                                        <label for="newInstrKzComment" class="control-label col-md-4">Комментарий</label>
                                        <div class="col-md-8">
                                            <input type="text" id="newInstrKzComment" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="newInstrKzPagesCount" class="control-label col-md-8">Кол-во страниц</label>
                                        <div class="col-md-4">
                                            <input type="number" id="newInstrKzPagesCount" class="form-control" />
                                        </div>
                                    </div>
                                }


                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>