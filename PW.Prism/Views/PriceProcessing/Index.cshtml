@using PW.Ncels.Database.Helpers
@model Guid


<script>
    InitFilterPriceProcessingGrid('@Model.ToString()');
</script>

@(Html.Kendo().Splitter()
            .HtmlAttributes(new { @class = "pwSplitter k-block" })
            .Name(("splitter" + Model))
            .Panes(panes =>
            {
            panes.Add()
                .Size("260px")
                .Collapsible(true)
                .MaxSize("500px")
                .MinSize("250px")
                .Content(
                @<div class="pwPanelBar">
                    @(Html.Kendo().PanelBar().HtmlAttributes(new { @class = "pwPanelBar" })
                               .Name("panelbarType" + Model)
                               .ExpandMode(PanelBarExpandMode.Multiple)
                               .ExpandAll(true)
                               .HtmlAttributes(new { style = "width:auto;" })
                               .Events(e => e.Select("panelPriceProcessingSelect"))
                               .Items(panelbar =>{
                                   panelbar.Add().Expanded(true);

                                   panelbar.Add().Text("По типу")
                                       .Items(projects =>{
                                           projects.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Все_394__00).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "" }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                           projects.Add().Text("Регистрация цен на ЛС").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", 0 }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                           projects.Add().Text("Регистрация цен на ИМН").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", 1 }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                           projects.Add().Text("Внесение изменений цен на ЛС").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", 2 }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                           projects.Add().Text("Внесение изменений цен на ИМН").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", 3 }, { "ItemType", "Type" }, { "ModelId", Model.ToString() } });
                                       });

                               })
                          )
                     @(Html.Kendo().PanelBar().HtmlAttributes(new { @class = "pwPanelBar" })
                               .Name("panelbarStatus" + Model)
                               .ExpandMode(PanelBarExpandMode.Multiple)
                               .ExpandAll(true)
                               .HtmlAttributes(new { style = "width:auto;" })
                               .Events(e => e.Select("panelPriceProcessingSelect"))
                               .Items(panelbar =>{
                                   panelbar.Add().Expanded(true);
                                   panelbar.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Постатусу_262__00)
                                       .Items(projects =>{
                                           projects.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Все_394__00).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "" }, { "ItemType", "Status" }, { "ModelId", Model.ToString() } });
                                           projects.Add().Text("Новые").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "1" }, { "ItemType", "SelectStatus" }, { "ModelId", Model.ToString() } });
                                           projects.Add().Text("В работе").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "2" }, { "ItemType", "SelectStatus" }, { "ModelId", Model.ToString() } });
                                           projects.Add().Text("Отказные").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "3" }, { "ItemType", "SelectStatus" }, { "ModelId", Model.ToString() } });
                                           projects.Add().Text("Завершенные").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "4" }, { "ItemType", "SelectStatus" }, { "ModelId", Model.ToString() } });
                                       });

                               })
                     )
                </div>
                );

            panes.Add().Scrollable(false).Size("100%").Content(
                @<div class="pwPanelBar">
                    <div class="pwBlockAdd k-block">
                        <div id="pwOne">
                            @(Html.Kendo().MaskedTextBox().Name("findText" + Model).Mask("").HtmlAttributes(new { @class = "pwWidth100" }))
                        </div>
                        <div id="pwTwo">
                            @(Html.Kendo().DropDownList().Name("findType" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                                   .DataTextField("Text")
                                   .DataValueField("Value")
                                   .BindTo(new List<SelectListItem>() {
                                       new SelectListItem() {
                                           Text = PW.Ncels.Database.Recources.Messages.Property_Все_394__00, Value = "0"
                                       },
                                       new SelectListItem() {
                                           Text = PW.Ncels.Database.Recources.Messages.Property_Пономеру_281__00, Value = "1"
                                       },
                                       new SelectListItem() {
                                           Text = PW.Ncels.Database.Recources.Messages.Property_Поисполнителю_170__00, Value = "2"
                                       },
                                       new SelectListItem() {
                                           Text = PW.Ncels.Database.Recources.Messages.Property_Поотправителю_171__00, Value = "3"
                                       }
                                   })
                                   .SelectedIndex(0)
                            )
                        </div>
                        <div id="pwThree">
                            @(Html.Kendo().Button().Name("find" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                                   .Content(PW.Ncels.Database.Recources.Messages.Property_Найти_372__00)
                                   .ImageUrl("/Content/images/find.png"))
                        </div>
                        <div id="pwFour">
                            @(Html.Kendo().Button().Name("export" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                                   .Content(PW.Ncels.Database.Recources.Messages.Property_Экспорт_335__00)
                                   .ImageUrl("/Content/images/export.png").Events(e => e.Click("onExportInDoc")))
                        </div>
                    </div>
                    <div id="pwSix">
                        @(Html.Kendo().Button().Name("reload" + Model).HtmlAttributes(new { @class = "pwWidth100 pwButtonReload" })
                                                    .Content("")
                               .ImageUrl("/Content/images/reload.png"))
                    </div>
                    @(Html.Kendo().Grid<PW.Ncels.Database.DataModel.PP_ProcessingJournal>()
                                   .Name("gridPriceProcessing" + Model)
                           .Columns(columns =>
                           {
                               columns.Bound(p => p.Number).Width(150).ClientTemplate(
                                "<div class=\"btn-group btn-group-xs\" style='height:14px;margin-top: -9px;'>" +
                                    "<button  type='button' style='width:90px;' class='btn btn-default btn-xs' onclick=\"getPpDetails('#=Id#', '#=Number#')\"><span style=\"color:rgb(66,139,202);\">#=Number#</span></button>" +
                                "</div>"
                                ).Title("Номер заявления").Locked(true).Lockable(false).ClientFooterTemplate(PW.Ncels.Database.Recources.Messages.Property_Всего_356__00 + "#=count#");
                               columns.Bound(p => p.IncomeNumber).Title("Входящий номер").Width(120).Locked(true);

                               columns.Bound(p => p.CreatedDate).Format("{0:dd.MM.yyyy}").Title("Дата подачи").Width(120).Locked(true);
                               columns.Bound(p => p.ProxyOrgName).Title("Заявитель").Width(150);
                               columns.Bound(p => p.ManufacturerOrgName).Title(PW.Ncels.Database.Recources.Messages.Ncels_Производитель_5).Width(150);
                               columns.Bound(p => p.RegNumber).Title(PW.Ncels.Database.Recources.Messages.Ncels_Н_регистрации_28).Width(150);
                               columns.Bound(p => p.MnnRu).Title("МНН").Width(150);
                               columns.Bound(p => p.TradeName).Title("Торговое наименование").Width(150);
                               columns.Bound(p => p.HasSign).Title("Наличие ЭЦП").ClientTemplate("<input type='checkbox' #= HasSign ? checked='checked' :'' # onclick='return false;' />").Width(120).HtmlAttributes(new {style = "text-align: center;"});
                               columns.Bound(p => p.EndExecDate).Format("{0:dd.MM.yyyy}").Title("Дата завершения исполнения").Width(150);
                           })

                           .Reorderable(reorderable => reorderable.Columns(true))
                           .Resizable(resizable => resizable.Columns(true))
                           .Sortable(sortable => sortable.AllowUnsort(false))
                           //.Groupable()
                           .Scrollable(scrollable => scrollable.Virtual(true))
                                  .Filterable()

                           .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                           .HtmlAttributes(new { @class = "pwGrid" })
                           .DataSource(dataSource => dataSource
                               .Ajax()
                               .Aggregates(aggregates => { aggregates.Add(p => p.Number).Count(); })
                               .Sort(sort => { sort.Add("Number").Descending(); sort.Add("CreatedDate").Descending(); })
                               .PageSize(50)
                               .Read(read => read.Action("ListPpRpc", "PriceProcessing"))
                           ) )
                </div>
             );
            }))
<script>
    resizeGrid('@("#gridPriceProcessing" + Model)');

</script>
