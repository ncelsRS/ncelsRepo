@model PW.Ncels.Database.DataModel.OBK_ActReception

@{ 
    var date = (DateTime)Model.ActDate;

}
<div style="margin-left: 10px; margin-right: 60px; width: 90%" class="pwPage pwPageEx">
    <div class="panel-body">
        <div class="row">
            <div class="col-lg-8">
                <label>Акт приема-передачи</label>
                <table class="table table-striped table-bordered table-hover dataTable">
                    <thead>
                        <tr>
                            <th>№ акта отбора </th>
                            <th>Дата отбора</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@Model.Number</td>
                            <td>@date.ToString("dd.MM.yyyy")</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-lg-4">
                <div class="row" style="margin-top: 25px;">
                    <div class="col-lg-6">
                        <a href="#" onclick="loadActData(event)" id="viewActDataBtn" class="k-button" style="background-color: #0066cc; width:130px; color: white;font-weight: 700;">Просмотр</a>
                    </div>
                </div>
            </div>
        </div>


        <div class="row">
            <div id="act-data-@Model.Id" style="margin-top:20px;">

            </div>
        </div>

    </div>
</div>

<script>
    function loadActData(event) {
        var itemId = '@Model.Id';
        $("#viewActDataBtn").hide();
        window.Showbusy(event);
        $.ajax({
            url: "/SafetyAssessment/LoadActData?Id=" + itemId +"&AssessmentDeclarationId="+ '@ViewData["AssessmentDeclarationId"]',
            success: function (result) {
                $("#act-data-@Model.Id").css('border-style', 'groove');
                $("#act-data-@Model.Id").html(result);
                $("#loading").hide();

                                $.ajax({
                                    processData: false,
                                    type: "POST",
                                    url: '/SafetyAssessment/GetSamples?id=' + '@ViewData["ContractId"]',
                                    dataType: 'json',
                                    cache: false,
                                    success: function (data) {
                                        if (data.isSuccess) {
                                            initSamplesTable(data);
                                            $('.act-control').attr('disabled', 'disabled');
                                           }
                                    },
                                   error: function (e) {
                                        log("Connection Failed. Please Try Again", e);
                                 }});
            }
        });

            }



    function initSamplesTable(data) {
        $("#samples-@Model.Id").DataTable({
            autoWidth: false,
            searching: false,
            paging: false,
            bInfo: false,
            data: data.data,
            "columns": [
                { data: 'name', sWidth: "50px", title: "Наименование образцов предьявленной продукции" },
                { data: 'measure', sWidth: "20px", title: "Ед. измерения" },
                { data: 'serie', sWidth: "20px", title: "Номер партии" },
                { data: 'serieParty', sWidth: "50px", title: "Размер партии" },
                { data: 'seriesStartDate', sWidth: "50px", title: "Дата изготовления" },
                { data: 'seriesEndDate', sWidth: "50px", title: "Срок годности" },
                {
                    data: 'quantity', sWidth: "150px", title: "Кол-во отобранных образцов продукции",
                    render: function (data, type, row, meta) {
                        return row.quantity + " " + row.measure;
                    }
                },
                {
                    data: 'available', sWidth: "50px", title: "Наличие",
                    render: function (data, type, row, meta) {

                        var res = '<input type="checkbox" id= "Available" ' + checkChecked(row.available)
                            + '" class="avalable-control" name="Available" data-serieId="' + row.serieId + '"  >'
                        return res;
                    }
                },
                {
                    data: 'comment', sWidth: "150px", title: "Примечание",
                    render: function(data, type, row, meta) {
                        var res = '<input type="text" id= "Comment" value="' + checkNull(row.comment)
                            + '" class="comment-control" name="Comment" data-serieId="' + row.serieId +'"  >'
                        return res;
                    }

                }
            ]
        });

        initActControl();

        if('@Model.Accept' == 'True'){
            $(".avalable-control").attr('disabled', 'disabled');
            $(".comment-control").attr('disabled', 'disabled');
        }
    }

    function checkNull(cellVal) {
        if (cellVal == null){
            return "";
        }
        return cellVal;
    }

    function checkChecked(check) {

        if (check == true){
            return " checked='checked' ";
        }
        return "";
    }

       function acceptAct(){
    var r = confirm("После нажатия Принять данные не подлежать к изменению ");
        if (r == true) {
 if(checkValidationCheckBox() == true){
                var $j_availables = $(".avalable-control");
                var $j_comments = $(".comment-control");
                var arr_availables = new Map();
                var arr_comments = new Map();

                $j_availables.each( function(){
                    arr_availables.set($(this).attr('data-serieId'),$(this).is(':checked'));
                })

                $j_comments.each( function(){
                    arr_comments.set($(this).attr('data-serieId'),$(this).val());
                })

                var arr_union = [];

                arr_availables.forEach(function (item, key, mapObj) {
                    arr_union.push({
                        SerieId: key,
                        Comment: arr_comments.get(key),
                        Available: arr_availables.get(key)
                    });

                });

                var productSeries = JSON.stringify(arr_union);

                     $.ajax({
                        type: "POST",
                        url: '/SafetyAssessment/UpdateProductSeries/',
                        data: {'productSeries':productSeries,'actReceptionId':'@Model.Id'},
                        dataType: 'json',
                        cache: false,
                        success: function(data) {
                            $("#loading").hide();

                            if(data.Success === true){
                                $("#commandRow").hide();
                                $(".avalable-control").attr('disabled', 'disabled');
                                $(".comment-control").attr('disabled', 'disabled');
                            }
                        },
                        error: function(data) {
                            alert("1Error" + data);
                        }
                        });
        }
        }

    }

    function checkValidationCheckBox(){

        var ch = true;

        var $j_object = $(".avalable-control");
            $j_object.each( function(){
            ch = $(this).is(':checked');
            if(ch == false){
                $(this).parent().addClass("redBackground");
                $("#checkBoxLabel").show();
            }
        });

        return ch;
    }

    function initActControl() {
        $(".avalable-control").change(function () {

            if ($(this).is(':checked')) {
                    $(this).parent().removeClass("redBackground");
                }
        });
    }

</script>


