@model PW.Ncels.Database.DataModel.OBK_ActReception

<div class="tabs-container">
    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#tab-1">Акт отбора</a></li>
        <li class=""><a data-toggle="tab" href="#tab-2"><span id="tab-2-title">Образцы продукции</span></a></li>
    </ul>
    <div class="tab-content">
        <div id="tab-1" class="tab-pane active">
            <div class="panel-body">
                <div class="panel panel-default" style="padding:15px">
                    <div class="row">
                        <div class="col-lg-6">
                            <label>№ акта отбора *</label>
                            <div class="input-group" id="typeIds">
                                @Html.TextBoxFor(model => model.Number, new { @class = "form-control edit-control act-control", placeholder = "Введите значение", @disabled = "disabled" })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <label id="ActDate-label">Дата акта*</label>
                            <div class="input-group">
                                <input id="ActDate" value="@Model.ActDate" style="width: 100%" />
                            </div>
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-6">
                            <br>
                            <label id="ApplicantId-label">Представитель органа*</label>
                            <div class="input-group">
                                @Html.DropDownList("ApplicantId", (IEnumerable<SelectListItem>)(ViewData["OBKApplicants"]),
String.Empty,
new
{
@class = "form-control edit-control act-table-cont act-control"
})
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <br>
                            <label id="Declarer-label">ФИО заявителя/представителя*</label>
                            <div class="input-group">
                                @Html.TextBoxFor(model => model.Declarer, new { @class = "form-control edit-control act-control ", placeholder = "Введите значение" })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                    </div>

                    <br>
                    <div class="row">
                        <div class="col-lg-6">
                            <label id="Provider-label">Поставщик*</label>
                            <div class="input-group">
                                @Html.TextBoxFor(model => model.Provider, new { @class = "form-control edit-control act-control ", placeholder = "Введите значение" })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <label id="PackageConditionId-label">Состояние упаковки*</label>
                            <div class="input-group">
                                @Html.DropDownList("PackageConditionId", (IEnumerable<SelectListItem>)(ViewData["PackageConditionList"]),
                                             String.Empty,
                                             new
                                             {
                                                 @class = "form-control edit-control act-table-cont act-control"
                                             })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-6">
                            <label id="StorageConditionsId-label">Условия хранения*</label>
                            <div class="input-group">
                                @Html.DropDownList("StorageConditionsId", (IEnumerable<SelectListItem>)(ViewData["StorageConditionsList"]),
                                             String.Empty,
                                             new
                                             {
                                                 @class = "form-control edit-control act-table-cont act-control"
                                             })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <label id="MarkingId-label">Маркировка*</label>
                            <div class="input-group">
                                @Html.DropDownList("MarkingId", (IEnumerable<SelectListItem>)(ViewData["MarkingList"]),
                                             String.Empty,
                                             new
                                             {
                                                 @class = "form-control edit-control act-table-cont act-control"
                                             })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-6">
                            <label id="InspectionInstalledId-label">Осмотром установлено*</label>
                            <div class="input-group">
                                @Html.DropDownList("InspectionInstalledId", (IEnumerable<SelectListItem>)(ViewData["InspectionInstalledList"]),
                                                        String.Empty,
                                                        new
                                                        {
                                                            @class = "form-control edit-control act-table-cont act-control"
                                                        })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="input-group">
                                <div id="InspectionInstalledContext" style="border: antiquewhite; border-style:groove!important; border-color:lavenderblush; height: 80px;">
                                    @{ var list = (IEnumerable<SelectListItem>)(ViewData["InspectionInstalledList"]);
                                        var toList = list.ToList();
                                        var InspectionInstalledId = Model.InspectionInstalledId;
                                        string text = "";
                                        if (InspectionInstalledId != null)
                                        {
                                            text = toList.FirstOrDefault(o => o.Value == Model.InspectionInstalledId.ToString()).Text.ToString();

                                        }
                                        <span style="margin-left: 10px;" id="InspectionInstalledContext-text">@text</span>

                                    }
                                </div>
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-6">
                            <br>
                            <label id="ProductSamplesId-label">Образцы предьявленной продукции отобраны соответсвии с*</label>
                            <div class="input-group">
                                @Html.DropDownList("ProductSamplesId", (IEnumerable<SelectListItem>)(ViewData["ProductSampleList"]),
String.Empty,
new
{
@class = "form-control edit-control act-table-cont act-control"
})
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-12">
                            <label>Прикрепить файл</label>
                            <div class="input-group">
                                <input name="files" id="@("files" + Model.Id)" type="file" title="@PW.Ncels.Database.Recources.Messages.ВыбратьФайл" />
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                    </div>

                    <div class="row" style="margin-top:30px;">
                        <div class="col-lg-12">
                            <a href="#" onclick="saveExpertAct(event)" id="viewActDataBtn" class="k-button" style="background-color: #0066cc; width:130px; color: white;font-weight: 700;">Сохранить</a>
                            <a class="k-button" data-dismiss="modal" style="background-color: #3399ff; width:150px; color: white;font-weight: 700;">Отменить</a>
                        </div>
                    </div>
                    <span id="popupNotification"></span>
                </div>
            </div>
        </div>
        <input type="hidden" value="" id="AttachPath">
        <div id="tab-2" class="tab-pane">
            <br>
            <div class="row">
                <div class="col-lg-8">
                    <div class="input-group">
                        @Html.DropDownList("product" + Model.Id, (IEnumerable<SelectListItem>)(ViewData["ProductList"]),
String.Empty,
new
{
@class = "form-control edit-control act-table-cont act-control"
})
                        <span class="input-group-addon">
                            <a class="OBKcommentDialog" href="#">
                                <i class="glyphicon glyphicon-info-sign"></i>
                            </a>
                        </span>
                    </div>
                </div>
                <div class="col-lg-4">
                    <a href="#" onclick="addProduct(event)" id="@("addProduct" + Model.Id)" class="k-button" style="background-color: #0066cc; color: white;font-weight: 700;">Добавить продукцию</a>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <br>
                    <table id="samples-@Model.Id" class="table table-striped table-bordered table-hover dataTable"></table>
                </div>
            </div>
        </div>
    </div>
</div>



<script>

    var fileId = '@Model.Id';

    $('input[name="files"]').attr('id', 'files' + fileId);

    var addedProducts = [];
    var measureList = [];

    $(document).ready(function ()
    {
        $.ajax({
            type: 'POST',
            url: '/SafetyAssessment/MeasureSelectList/',
            success: function (data)
            {
                if (data.success == true)
                {
                    measureList = data.list;
                    getSamples();
                }
            }
        });

        InitializeSerialActRecepttionFile(fileId, '@ViewData["AttachPath"]');
    })

    var popupNotification = $("#popupNotification").kendoNotification({
        position: {
            pinned: true,
            top: 200,
            left: null,
            bottom: null,
            right: 100
        }
    });

    
    function addProduct()
    {
        var productId = $("#product" + "@Model.Id").val();
        debugger;
        if (addedProducts.includes(productId)){
            alert("Продукт уже добавлен!");
            return;
        }

        if (productId == null || productId == "")
        {
            alert("Выберите продукт!");
        } else
        {
            $.ajax({
                type: 'POST',
                url: '/SafetyAssessment/GetProduct/',
                data: { productId: productId },
                success: function (data)
                {
                    if (data.success = true)
                    {
                        table.row.add({
                            "name": data.name,
                            "measure": "<input id='measure-" + productId + "' style='width:200px;' class='act-select-control-" + fileId +"'>",
                            "serie": "<input id='serie-" + productId + "' style='width:50px;' class='act-input-control-" + fileId+"' >",
                            "serieParty": "<input id='serieParty-" + productId + "' style='width:50px;' class='act-input-control-" + fileId +"'>",
                            "seriesStartDate": "<input id='start-" + productId + "' style='width:120px;' class='act-input-control-" + fileId +"'>",
                            "seriesEndDate": "<input id='end-" + productId + "' style='width:120px;' class='act-input-control-" + fileId +"'>",
                            "producerName": data.producer,
                            "quantity": "<input id='quantity-" + productId + "' style='width:50px;' class='act-input-control-" + fileId +"'>",
                            "delete": "<a onclick='deleteProduct(" + productId+", this)' class='k-button'> Удалить</a>",
                            "productId": productId
                        }).draw();

                        addedProducts.push(productId);

                        $("#start-" + productId).kendoDatePicker();
                        $("#end-" + productId).kendoDatePicker();

                        
                        if (data.success == true){
                            $("#measure-" + productId).kendoDropDownList({
                                autoBind: false,
                                minLength: 3,
                                dataTextField: "Name",
                                dataValueField: "Id",
                                dataSource: measureList,
                                filter: "contains",
                            });
                        }
                        

                    }
                }
            });
        }

    }

    function deleteProduct(prouctId, element)
    {
        var index = addedProducts.indexOf(prouctId.toString());
        if (index > -1)
        {
            addedProducts.splice(index, 1);
        }
        var row = table.row($(element).parents('tr'));
        row.remove().draw();

    }

    function deleteAct()
    {
        $.ajax({
            type: 'POST',
            url: '/SafetyAssessment/DeleteSerialActReception/',
            data: { actReceptionId: '@Model.Id' },
        });
    }

    $("#ActDate").kendoDatePicker();

    function validateAttributes() {
        var valid = true;
        valid = checkAttr("Declarer", valid);
        valid = checkAttr("ApplicantId", valid);
        valid = checkAttr("Producer", valid);
        valid = checkAttr("Provider", valid);
        valid = checkAttr("InspectionInstalledId", valid);
        valid = checkAttr("PackageConditionId", valid);
        valid = checkAttr("ApplicantId", valid);
        valid = checkAttr("StorageConditionsId", valid);
        valid = checkAttr("MarkingId", valid);
        valid = checkAttr("ProductSamplesId", valid);
        valid = checkAttr("ActDate", valid);

        return valid;
    }

    function checkValidationCheckBox() {

        var result = true;
        var $j_object = $(".act-input-control-" + '@Model.Id');
        $j_object.each(function () {
            if ($(this).is("input"))
            {
                var ch = $(this).val();
                if (ch === "")
                {
                    result = false;
                }
            }

        });

        var $m_object = $(".act-select-control-"+'@Model.Id');
        $m_object.each(function () {
            if ($(this).is("input"))
            {
                var ch = $(this).val();
                if (ch === "")
                {
                    result = false;
                }
            }

        });

        if (result == false){
            $("#tab-2-title").css({ 'color': '#a94442' });
        } else {
            $("#tab-2-title").css({ 'color': '#555' });
        }

        return result;
    }

    function checkAttr(attr, valid){

        if($("#"+attr+"").val() == ""){
            $("#"+attr+"-label").css({ 'color': '#a94442' });
            valid = false;
        } else {
            $("#"+attr+"-label").css({ 'color': '#555'  });
        }
        return valid;
    }

    function saveExpertAct(){
      if(!validateAttributes()){
          $("#popupNotification").getKendoNotification().show("Заполните обязательные поля!", "error");
          return;
      } else
          if (!checkValidationCheckBox())
      {
              $("#popupNotification").getKendoNotification().show("Заполните образцы продукции!", "error");

          return;
          } else
          {

        SaveExpertActReception();
        }
    }

    function SaveExpertActReception() {
        var actDate = $("#ActDate").val();
        var worker = $("#Worker").val();
        var number = $("#Number").val();
        $.ajax({
            type : 'POST',
            url: '/SafetyAssessment/SaveSerialExpertActReception/',
            data: {
                reception : {
                    Id: '@Model.Id',
                    Address: $("#Address").val(),
                    Worker: worker,
                    Producer: $("#Producer").val(),
                    Provider: $("#Provider").val(),
                    InspectionInstalledId: $("#InspectionInstalledId").val(),
                    PackageConditionId: $("#PackageConditionId").val(),
                    MarkingId: $("#MarkingId").val(),
                    StorageConditionsId: $("#StorageConditionsId").val(),
                    ApplicantId: $("#ApplicantId").val(),
                    AttachPath: $("#AttachPath").val(),
                    Declarer: $("#Declarer").val(),
                    ProductSamplesId: $("#ProductSamplesId").val(),
                    OBK_AssessmentDeclarationId: '@Model.OBK_AssessmentDeclarationId',
                    Number: '@Model.Number'
                },
                actDate : actDate
            },
            success : function (data){
                if (data.success == true)
                {
                    $("#modal" + $("#ActReceptionId").val()).modal("hide");
                    //reInitSerialActs();
                    reloadAddedActs();
                    saveProductSeries();
                }
            }
        });
    }
    var table = null;

    function initSamplesTable(data){
        table =  $("#samples-@Model.Id").DataTable({
                        autoWidth: false,
                        searching: false,
                        paging: false,
                        bInfo: false,
                        "columns": [
                            { data: 'name', sWidth: "50px",title:"Наименование образцов предьявленной продукции"},
                            { data: 'measure', sWidth: "20px",title:"Ед. измерения"},
                         { data: 'serie', sWidth: "20px",title:"Номер партии"},
                         { data: 'serieParty', sWidth: "50px",title:"Размер партии"},
                         { data: 'seriesStartDate', sWidth: "70px",title:"Дата изготовления"},
                         { data: 'seriesEndDate', sWidth: "70px", title: "Срок годности" },
                         { data: 'producerName', sWidth: "50px", title: "Производитель" },
                         { data: 'quantity', sWidth: "70px", title: "Кол-во отобранных образцов продукции" },
                         { data: 'delete', sWidth: "70px", title: "Удалить" },
                         { data: 'productId'}
                        ],
                        "columnDefs": [
                            { "visible": false, "targets": 9 }
                        ]
        });

        initTableData(data.list);

        $("#InspectionInstalledId").change(function () {
        $("#InspectionInstalledContext-text").html($('#InspectionInstalledId').find(":selected").text());
    });

    }



    function initTableData(list)
    {
        for (var i = 0; i < list.length; i++){
            table.row.add({
                "name": list[i].name,
                "measure": "<input id='measure-" + list[i].productId + "' style='width:200px;' class='act-select-control-" + fileId + "'>",
                "serie": "<input id='serie-" + list[i].productId + "' style='width:50px;' class='act-input-control-" + fileId + "' value='" + list[i].serie +"' >",
                "serieParty": "<input id='serieParty-" + list[i].productId + "' style='width:50px;' class='act-input-control-" + fileId + "' value='" + list[i].serieParty +"' >",
                "seriesStartDate": "<input id='start-" + list[i].productId + "' style='width:120px;' class='act-input-control-" + fileId + "'>",
                "seriesEndDate": "<input id='end-" + list[i].productId + "' style='width:120px;' class='act-input-control-" + fileId + "'>",
                "producerName": list[i].producerName,
                "quantity": "<input id='quantity-" + list[i].productId + "' style='width:50px;' class='act-input-control-" + fileId + "'  value='" + list[i].quantity +"' >",
                "delete": "<a onclick='deleteProduct(" + list[i].productId + ", this)' class='k-button'> Удалить</a>",
                "productId": list[i].productId
            })

            table.draw();

            var start = list[i].seriesStartDate;
            var startDate = new Date(start.split(".")[2] + '-' + start.split(".")[1] + '-' + start.split(".")[0]);

            var end = list[i].seriesEndDate;
            var endDate = new Date(end.split(".")[2] + '-' + end.split(".")[1] + '-' + end.split(".")[0]);

            $("#start-" + list[i].productId).kendoDatePicker({
                value: start
            });

            $("#end-" + list[i].productId).kendoDatePicker({
                value: endDate
            });

            $("#measure-" + list[i].productId).kendoDropDownList({
                autoBind: false,
                minLength: 3,
                dataTextField: "Name",
                dataValueField: "Id",
                dataSource: measureList,
                filter: "contains",
            })

            $("#measure-" + list[i].productId).data('kendoDropDownList').value(list[i].measureId);

            addedProducts.push(String(list[i].productId));
        }
    }



    function getSamples()
    {
        $.ajax({
            processData: false,
            type: "POST",
            url: '/SafetyAssessment/GetSerialSamples?actReceptionId=' + '@Model.Id',
            dataType: 'json',
            cache: false,
            success: function (data)
            {
                if (data.isSuccess)
                {
                    initSamplesTable(data);
                }
            },
            error: function (e)
            {
                alert("Connection Failed. Please Try Again", e);
            }
        });
    }

    function getSelectBox(serieId, _measureId, _assessmentId) {

        $.ajax({
            type: "POST",
            url: "/SafetyAssessment/MeasureSelect2",
            data: { measureId: _measureId, assessmentId: _assessmentId, serieId: serieId},
            success: function (data) {
                $("#" + serieId).html(data);
            },
            error: function () {
                alert("Connection Failed. Please Try Again");
            }
        });
    }


    function handleQuantity(quantity) {
        return quantity == null ? '' : quantity;
    }

function saveProductSeries(){

    var rows = table.rows().data();
    var series = [];
    for (var i = 0; i < rows.length; i++)
    {
        var productId = rows[i].productId;
        var measureId = $("#measure-" + productId).val();
        var serie = $("#serie-" + productId).val();
        var serieParty = $("#serieParty-" + productId).val();
        var start = $("#start-" + productId).val();
        var end = $("#end-" + productId).val();
        var quantity = $("#quantity-" + productId).val();

        series.push({
            productId: productId,
            measureId: measureId,
            serie: serie,
            serieParty: serieParty,
            startDate: start,
            endDate: end,
            quantity: quantity
        });
    }

    var productSeries = JSON.stringify(series);

    $.ajax({
        type: "POST",
        url: '/SafetyAssessment/SaveProductSeries/',
        data: { 'productSeries': productSeries, 'actReceptionId': '@Model.Id' },
        dataType: 'json',
        cache: false,
        success: function (data)
        {
            $("#loading").hide();

            if (data.Success === true)
            {
                $("#commandRow").hide();
                $(".avalable-control").attr('disabled', 'disabled');
                $(".comment-control").attr('disabled', 'disabled');
            }
        },
        error: function (data)
        {
            alert("1Error" + data);
        }
    });


    }

</script>


