@model PW.Ncels.Database.DataModel.OBK_ActReception

<div class="tabs-container">
    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#tab-1">Акт отбора</a></li>
        <li class=""><a data-toggle="tab" href="#tab-2"><span id="tab-2-title">Образцы продукции</span></a></li>
        <li class="" style="float:right"><span id="close-act-data" class="glyphicon glyphicon-remove"></span></li>

    </ul>
    <div class="tab-content">
        <div id="tab-1" class="tab-pane active">
            <div class="panel-body">
                <div class="panel panel-default" style="padding:15px">
                    <div class="row">
                        <div class="col-lg-6">
                            <label>№ акта отбора *</label>
                            <div class="input-group" id="typeIds">
                                @Html.TextBoxFor(model => model.Number, new { @class = "form-control edit-control act-control", placeholder = "Введите значение", @disabled = "disabled" })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <label id="ActDate-label">Дата акта*</label>
                            <div class="input-group">
                                <input id="ActDate" value="@Model.ActDate" style="width: 100%" />
                            </div>
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-6">
                            <br>
                            <label id="ApplicantId-label">Представитель органа*</label>
                            <div class="input-group">
                                @Html.DropDownList("ApplicantId", (IEnumerable<SelectListItem>)(ViewData["OBKApplicants"]),
   String.Empty,
     new
     {
         @class = "form-control edit-control act-table-cont act-control"
     })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <br>
                            <label id="Declarer-label">ФИО заявителя/представителя*</label>
                            <div class="input-group">
                                @Html.TextBoxFor(model => model.Declarer, new { @class = "form-control edit-control act-control ", placeholder = "Введите значение" })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                    </div>

                    <br>
                    <div class="row">
                        <div class="col-lg-6">
                            <label id="Provider-label">Поставщик*</label>
                            <div class="input-group">
                                @Html.TextBoxFor(model => model.Provider, new { @class = "form-control edit-control act-control ", placeholder = "Введите значение" })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <label id="PackageConditionId-label">Состояние упаковки*</label>
                            <div class="input-group">
                                @Html.DropDownList("PackageConditionId", (IEnumerable<SelectListItem>)(ViewData["PackageConditionList"]),
                         String.Empty,
                         new
                         {
                             @class = "form-control edit-control act-table-cont act-control"
                         })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-6">
                            <label id="StorageConditionsId-label">Условия хранения*</label>
                            <div class="input-group">
                                @Html.DropDownList("StorageConditionsId", (IEnumerable<SelectListItem>)(ViewData["StorageConditionsList"]),
                         String.Empty,
                         new
                         {
                             @class = "form-control edit-control act-table-cont act-control"
                         })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <label id="MarkingId-label">Маркировка*</label>
                            <div class="input-group">
                                @Html.DropDownList("MarkingId", (IEnumerable<SelectListItem>)(ViewData["MarkingList"]),
                         String.Empty,
                         new
                         {
                             @class = "form-control edit-control act-table-cont act-control"
                         })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-6">
                            <label id="InspectionInstalledId-label">Осмотром установлено*</label>
                            <div class="input-group">
                                @Html.DropDownList("InspectionInstalledId", (IEnumerable<SelectListItem>)(ViewData["InspectionInstalledList"]),
                                    String.Empty,
                                    new
                                    {
                                        @class = "form-control edit-control act-table-cont act-control"
                                    })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="input-group">
                                <div id="InspectionInstalledContext" style="border: antiquewhite; border-style:groove!important; border-color:lavenderblush; height: 80px;">
                                    @{ var list = (IEnumerable<SelectListItem>)(ViewData["InspectionInstalledList"]);
                                        var toList = list.ToList();
                                        var InspectionInstalledId = Model.InspectionInstalledId;
                                        string text = "";
                                        if (InspectionInstalledId != null)
                                        {
                                            text = toList.FirstOrDefault(o => o.Value == Model.InspectionInstalledId.ToString()).Text.ToString();

                                        }
                                        <span style="margin-left: 10px;" id="InspectionInstalledContext-text">@text</span>

                                    }
                                </div>
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-6">
                            <br>
                            <label id="ProductSamplesId-label">Образцы предьявленной продукции отобраны соответсвии с*</label>
                            <div class="input-group">
                                @Html.DropDownList("ProductSamplesId", (IEnumerable<SelectListItem>)(ViewData["ProductSampleList"]),
     String.Empty,
       new
       {
           @class = "form-control edit-control act-table-cont act-control"
       })
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-12">
                            <label>Прикрепить файл</label>
                            <div class="input-group">
                                <input name="files" id="@("files" + Model.Id)" type="file" title="@PW.Ncels.Database.Recources.Messages.ВыбратьФайл" />
                                <span class="input-group-addon">
                                    <a class="OBKcommentDialog" href="#">
                                        <i class="glyphicon glyphicon-info-sign"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                    </div>
                                     
                    <div class="row" style="margin-top:30px;">
                        <div class="col-lg-12">
                            <a href="#" onclick="saveExpertAct(event)" id="viewActDataBtn" class="k-button" style="background-color: #0066cc; width:130px; color: white;font-weight: 700;">Сохранить</a>
                            <a class="k-button" onclick="closeAct(event)" style="background-color: #3399ff; width:150px; color: white;font-weight: 700;">Отменить</a>
                        </div>
                    </div>
                    <span id="popupNotification"></span>
                </div>
            </div>
        </div>
        <input type="hidden" value="" id="AttachPath">
        <div id="tab-2" class="tab-pane">
            <div class="row">
                <div class="col-lg-12">
                    <br>
                    <table id="samples-@Model.Id" dt-options="dtOptions" dt-columns="dtColumns" class="table table-striped table-bordered table-hover dataTable"></table>
                </div>
            </div>
        </div>
    </div>
</div>



<script>

    var fileId = '@Model.Id';

    $('input[name="files"]').attr('id', 'files' + fileId);

    InitializeActRecepttionFile(fileId);

    var popupNotification = $("#popupNotification").kendoNotification({
        position: {
            pinned: true,
            top: 200,
            left: null,
            bottom: null,
            right: 100
        }
    });

    
    $("#ActReceptionId").val('@Model.Id');
    $("#ActDate").kendoDatePicker();

    function validateAttributes() {
        var valid = true;
        valid = checkAttr("Declarer", valid);
        valid = checkAttr("ApplicantId", valid);
        valid = checkAttr("Producer", valid);
        valid = checkAttr("Provider", valid);
        valid = checkAttr("InspectionInstalledId", valid);
        valid = checkAttr("PackageConditionId", valid);
        valid = checkAttr("ApplicantId", valid);
        valid = checkAttr("StorageConditionsId", valid);
        valid = checkAttr("MarkingId", valid);
        valid = checkAttr("ProductSamplesId", valid);
        valid = checkAttr("ActDate", valid);

        return valid;
    }

    function checkValidationCheckBox() {

        var result = true;
        var $j_object = $(".act-input-control-" + '@Model.Id');

        $j_object.each(function () {
           var ch = $(this).val();
           if (ch === "") {
               result = false;
            }
        });

        var $m_object = $(".act-select-control-"+'@Model.Id');
        $m_object.each(function () {
           var ch = $(this).val();
           if (ch === "") {
               result = false;
            }
        });

        if (result == false){
            $("#tab-2-title").css({ 'color': '#a94442' });
        } else {
            $("#tab-2-title").css({ 'color': '#555' });
        }

        return result;
    }

    function checkAttr(attr, valid){

        if($("#"+attr+"").val() == ""){
            $("#"+attr+"-label").css({ 'color': '#a94442' });
            valid = false;
        } else {
            $("#"+attr+"-label").css({ 'color': '#555'  });
        }
        return valid;
    }

    function saveExpertAct(){
      if(!validateAttributes()){
          $("#popupNotification").getKendoNotification().show("Заполните обязательные поля!", "error");
          return;
      } else
          if (!checkValidationCheckBox())
      {
              $("#popupNotification").getKendoNotification().show("Заполните образцы продукции!", "error");

          return;
      }else{
        SaveExpertActReception();
        saveProductSeries();
        $("#close-act-data").click();
        }
    }

    function closeAct() {
        $("#close-act-data").click();
    }

    function SaveExpertActReception() {
        var actDate = $("#ActDate").val();
        var worker = $("#Worker").val();
        var number = $("#Number").val();
        $.ajax({
            type : 'POST',
            url : '/SafetyAssessment/SaveExpertActReception/',
            data: {
                reception : {
                    Id: '@Model.Id',
                    Address: $("#Address").val(),
                    Worker: worker,
                    Producer: $("#Producer").val(),
                    Provider: $("#Provider").val(),
                    InspectionInstalledId: $("#InspectionInstalledId").val(),
                    PackageConditionId: $("#PackageConditionId").val(),
                    MarkingId: $("#MarkingId").val(),
                    StorageConditionsId: $("#StorageConditionsId").val(),
                    ApplicantId: $("#ApplicantId").val(),
                    AttachPath: $("#AttachPath").val(),
                    Declarer: $("#Declarer").val(),
                    ProductSamplesId: $("#ProductSamplesId").val(),
                },
                actDate : actDate
            },
            success : function (data){
                if (data.success == true) {
                    $("#ModelNumber").html(number);
                    $("#ModelActDate").html(actDate);
                    $("#ModelWorker").html(data.worker);
                }
            }
              });
    }

    function initSamplesTable(data){
         $("#samples-@Model.Id").DataTable({
                        autoWidth: false,
                        searching: false,
                        paging: false,
                        bInfo: false,
                        data: data.data,
                        "columns": [
                            { data: 'name', sWidth: "50px",title:"Наименование образцов предьявленной продукции"},
                            { data: 'measure', sWidth: "20px",title:"Ед. измерения"},
                         { data: 'serie', sWidth: "20px",title:"Номер партии"},
                         { data: 'serieParty', sWidth: "50px",title:"Размер партии"},
                         { data: 'seriesStartDate', sWidth: "50px",title:"Дата изготовления"},
                         { data: 'seriesEndDate', sWidth: "50px", title: "Срок годности" },
                         { data: 'producerName', sWidth: "50px", title: "Производитель" },
                         {
                             data: 'quantity', sWidth: "150px", title: "Кол-во отобранных образцов продукции",
                             render: function (data, type, row, meta) {
                                 var res = "<input type='text' class='quantity-control act-input-control-"+'@Model.Id'+"' id='Quantity' data-serieId='" + row.serieId
                                     + "' value='" + handleQuantity(row.quantity)
                                     + "'  style='width:35px; float: left; height: 34px;' >  <div style='width:auto;' id='" + row.serieId + "'> </div>";
                                 getSelectBox(row.serieId, row.measureId, '@Model.Id');
                                 return res;
                             }
                         },
                        ]
                    });


       $("#InspectionInstalledId").change(function () {
        $("#InspectionInstalledContext-text").html($('#InspectionInstalledId').find(":selected").text());
    });

    }


    $.ajax({
        processData: false,
        type: "POST",
        url: '/SafetyAssessment/GetSamples2?id=' + '@ViewData["ContractId"]',
        dataType: 'json',
        cache: false,
        success: function (data) {
                if (data.isSuccess) {
                    initSamplesTable(data);
            }
        },
        error: function (e) {
            alert("Connection Failed. Please Try Again", e);
        }
    });


    function getSelectBox(serieId, _measureId, _assessmentId) {

        $.ajax({
            type: "POST",
            url: "/SafetyAssessment/MeasureSelect2",
            data: { measureId: _measureId, assessmentId: _assessmentId, serieId: serieId},
            success: function (data) {
                $("#" + serieId).html(data);
            },
            error: function () {
                alert("Connection Failed. Please Try Again");
            }
        });
    }


    function handleQuantity(quantity) {
        return quantity == null ? '' : quantity;
    }

    $("#close-act-data").click(function ()
    {
        debugger
        $("#act-data").html("");
        $("#act-data").css('border-style', 'none');
        $("#editActReceptionBtn").show();
        $("#deleteActReceptionBtn").show();
        $("#printActReceptionBtn").show();
        $("#viewActReceptionBtn").show();
    });


function saveProductSeries(){

    var $j_quantity = $(".quantity-control");
    var $j_measure = $(".select-control");
                var arr_quantity = new Map();
                var arr_measure = new Map();

                $j_quantity.each( function(){
                    arr_quantity.set($(this).attr('data-serieId'),$(this).val());
                })

                $j_measure.each( function(){
                    var aa = $(this).attr('dataserieid');
                    arr_measure.set($(this).attr('dataserieid'), $(this).val());
                })

                var arr_union = [];

                arr_quantity.forEach(function (item, key, mapObj) {
                    arr_union.push({
                        SerieId: key,
                        Quantity: arr_quantity.get(key),
                        SeriesMeasureId: arr_measure.get(key)
                    });

                });

                var productSeries = JSON.stringify(arr_union);

                     $.ajax({
                        type: "POST",
                        url: '/SafetyAssessment/UpdateProductSeries2/',
                        data: {'productSeries':productSeries,'actReceptionId':'@Model.Id'},
                        dataType: 'json',
                        cache: false,
                        success: function(data) {
                            $("#loading").hide();

                            if(data.Success === true){
                                $("#commandRow").hide();
                                $(".avalable-control").attr('disabled', 'disabled');
                                $(".comment-control").attr('disabled', 'disabled');
                            }
                        },
                        error: function(data) {
                            alert("1Error" + data);
                        }
                        });


    }

</script>


