@using System.Web.UI.WebControls
@using PW.Ncels.Database.DataModel
@using PW.Ncels.Database.Helpers
@using PW.Ncels.Database.Recources
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
    <title>@PW.Ncels.Database.Recources.Messages.Property_Ассистент_99__00</title>
    @Styles.Render("~/Content/kendocss")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/kendo")
    @Scripts.Render("~/bundles/prism")
    @Scripts.Render("~/bundles/ncels")
    @Scripts.Render("~/bundles/plugins")
    @Scripts.Render("~/bundles/declaration")
    @Scripts.Render("~/bundles/crypto")
    @Styles.Render("~/Content/css")

 
    <link href="~/Content/css/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/css/plugins/select2/select2.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/css/plugins/chosen/chosen.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/css/custom/common.css" rel="stylesheet" type="text/css" />

    @{ var culture = System.Threading.Thread.CurrentThread.CurrentCulture.ToString(); }


    <script src="~/Scripts/datatable.js"></script>

    <script>

        kendo.culture("@culture");
    </script>
</head>
<body>
<div id="loading" style="display: none;">
    <div id="loadingcontent">
        <p id="loadingspinner" style="font-size: 25px">
            Идет загрузка...
        </p>
    </div>
</div>
    @Html.Partial("~/Views/Home/MessageDialogBox.cshtml")
    <div>
        @(Html.Kendo().Menu()
      .Name("menuImages")
      .Items(items =>
      {
          items.Add().Text("").HtmlAttributes(new { @class = "pwMemuVer" })
              .ImageUrl(Url.Content("~/Content/images/logo32black.png"))
              .Items(children => children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Обновитестраницу_109__00).HtmlAttributes(new { @id = "pwMemuVerItem" }));

          items.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Канцелярия_275__00).Visible(EmployePermissionHelper.IsMenuOfficeVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Входящие_327__00).Visible(EmployePermissionHelper.IsMenuInDocVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "InListDoc" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Обращениеграждан_97__00).Visible(EmployePermissionHelper.IsMenuCitizenDocVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "CitizenListDoc" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Исходящиедокументы_78__00).Visible(EmployePermissionHelper.IsMenuOutDocVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "OutgoingListDoc" } });
                  //children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Инициативныедокументы_46__00).Visible(EmployePermissionHelper.IsMenuInitiativeOutDocVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "InitiativeListDoc" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Протоколы_302__00).Visible(EmployePermissionHelper.IsMenuProtocolDocVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ProtocolListDoc" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Приказыкадры_216__00).Visible(EmployePermissionHelper.IsMenuAdminDocVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "AdminListDoc" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Приказыпоосновнойдейтельности_14__00).Visible(EmployePermissionHelper.IsMenuAdminMainDocVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "AdminMainListDoc" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Служебныезаписки_110__001).Visible(EmployePermissionHelper.IsMenuInnerDocVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "InnerListDoc" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_СлужебнаяЗаписка).Visible(EmployePermissionHelper.IsMenuInnerDepartmentPermission).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "InnerDepartmentListDoc" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Филиалыдокументы_111__00).Visible(EmployePermissionHelper.IsMenuInDocRegionsVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "InListDocRegions" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_ТрудовыеДоговора).Visible(EmployePermissionHelper.IsMenuContractVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "InListDocContract" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Отчеты_369__00).Visible(EmployePermissionHelper.IsMenuReportDocVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ReportListDic" } });
              });

          items.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Моизадания_256__00).Visible(EmployePermissionHelper.IsMenuTaskVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_НовыеЗадания_346__00).Visible(EmployePermissionHelper.IsMenuTaskNewVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "NewTaskListDoc" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Задания_346__00).Visible(EmployePermissionHelper.IsMenuTaskExcludeVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ExcludeTaskListDoc" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Всезадания_257__00).Visible(EmployePermissionHelper.IsMenuTaskListVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "TaskListDoc" } });

                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Исполненныезадания_79__00).Visible(EmployePermissionHelper.IsMenuTaskRejectVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "RejectTaskListDoc" } });

              });

          items.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Моидокументы_217__00).Visible(EmployePermissionHelper.IsMenuMyDocVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Проекты_347__00).Visible(EmployePermissionHelper.IsMenuMyDocProjectVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "MyProjectListDoc" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Служебныезаписки_110__00).Visible(EmployePermissionHelper.IsMenuMyDocInnerVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "MyInnerListDoc" } });
              });

          items.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Отчеты_369__00).Visible(EmployePermissionHelper.IsMenuMyDocReportVisibility).ImageUrl(Url.Content("~/Content/images/menuItem.png")).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "MyReportDoc" } });
          ;

          items.Add().Text("Экспертиза").Visible(EmployePermissionHelper.IsMenuExpertiseMainVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("Первичная экспертиза").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Stage1" } }).Visible(EmployePermissionHelper.IsMenuExpertiseStage1Visibility);
                  children.Add().Text("Фармацевтическая экспертиза").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Stage2" } }).Visible(EmployePermissionHelper.IsMenuExpertiseStage2Visibility);
                  children.Add().Text("Фармакологическая экспертиза").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Stage3" } }).Visible(EmployePermissionHelper.IsMenuExpertiseStage3Visibility);
                  children.Add().Text("Аналитическая экспертиза").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Stage4" } }).Visible(EmployePermissionHelper.IsMenuExpertiseStage4Visibility);
                  children.Add().Text("Перевод").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Stage5" } }).Visible(EmployePermissionHelper.IsMenuExpertiseStage5Visibility);
                  children.Add().Text("Заключение о безопасности").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Stage6" } }).Visible(EmployePermissionHelper.IsMenuExpertiseStage6Visibility);
                  children.Add().Text("Экспертный совет").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Stage7" } }).Visible(EmployePermissionHelper.IsMenuExpertiseStage7Visibility);
                  children.Add().Text("Направление на оплату").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Stage8" } }).Visible(EmployePermissionHelper.IsMenuExpertiseStage8Visibility);
                  children.Add().Text("Настройка этапов").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Stage9" } }).Visible(EmployePermissionHelper.IsMenuExpertiseStage9Visibility);
                  children.Add().Text("Протокола").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Stage10" } }).Visible(EmployePermissionHelper.IsMenuExpertiseStage10Visibility);
                  children.Add().Text("Согласование").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Stage11" } }).Visible(EmployePermissionHelper.IsMenuExpertiseStage11Visibility);
                  children.Add().Text("Уведомления").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Stage12" } }).Visible(EmployePermissionHelper.IsMenuExpertiseStage11Visibility);
                  children.Add().Text("Документы на согласовании").Visible(EmployePermissionHelper.IsMenuExpertiseDocAgreementVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "EXPDocumentAgreement" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Отчеты_369__00).Visible(EmployePermissionHelper.IsMenuExpertiseReportsVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ExpertiseReportList" } });
              });
          items.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Справочники_258__00).Visible(EmployePermissionHelper.IsMenuDicVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("Реестр розничных цен").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Registery1" } });
                  children.Add().Text("Реестр оптовых цен").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Registery8" } });
                  children.Add().Text("Закупочная цена").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Registery4" } });
                  children.Add().Text("Предельная цена").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Registery5" } });
                  children.Add().Text("Реестр ОБК").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Registery7" } });

                  //children.Add().Text("Реестр дистрибьюторов").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Registery2" } });
                  //children.Add().Text("Ввозная цена").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Registery3" } });

                  children.Add().Text("Реестр стран").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Registery6" } });

                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Линейныесправочники_63__00).Visible(EmployePermissionHelper.IsMenuDicAllVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ListDic" } });
                  // children.Add().Text("Справочник рег номеров").Visible(EmployePermissionHelper.IsMenuDicAllVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "EditRegNomer" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Номенклатурадел_138__00).Visible(EmployePermissionHelper.IsMenuDicNomenVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "NomenklatureListDic" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Корреспонденты_2080__00).Visible(EmployePermissionHelper.IsEditCor).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "CorRefListDic" } });
                  children.Add().Text("Показатели (Аналитическая экспертиза)").Visible(EmployePermissionHelper.IsEditRefAnalyseIndicator).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "RefAnalyseIndicator" } });
                  children.Add().Text("Изменение типа 1").Visible(EmployePermissionHelper.IsEditRefChangeType).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "RefChangeType" } });
                  children.Add().Text("Нормативный Документ, регламентирующий качество или Фармакопея с указанием года издания").Visible(EmployePermissionHelper.IsEditRefNormDocFarm).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "RefNormDocFarm" } });
                  children.Add().Text("Модули первичной экспертизы").Visible(EmployePermissionHelper.IsEditRefPrimaryOtd).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "RefPrimaryOTD" } });

              });

          items.Add().Text("Документы").Visible(EmployePermissionHelper.IsMenuDocumentMainVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("Список заявок на доверенность").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "TmcRequest" } });
                  children.Add().Text("Список заявок на согласовании").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "TmcRequestAgreement" } });
                  children.Add().Text("Список доверенностей").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "TmcRequestIn" } });

                  //children.Add().Text("Список израсходовано").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "TmcSpent" } });
                  children.Add().Text("Список заявок на выдачу").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "TmcDelivery" } });
                  children.Add().Text("Отчеты").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "TmcReport" } });
                  children.Add().Text("Список отчетов").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "TmcReportList" } });
              });

          items.Add().Text("Мои реактивы").Visible(EmployePermissionHelper.IsMenuMyTmcVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("Заявки на получение").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "MyTmcRequest" } });
                  children.Add().Text("Реактивы на складе").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "MyTmcStorage" } });
                  children.Add().Text("Мои реактивы").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "MyTmc" } });
              });

          items.Add().Text("Реактивы").Visible(EmployePermissionHelper.IsMenuTmcMainVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("Список реактивов").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "TmcList" } });
                  children.Add().Text("Список списанных реактивов").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "WriteOffTmcList" } });
              });

          items.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Кадровыйучет_218__00).Visible(EmployePermissionHelper.IsMenuUnitVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Организационнаяструктура_34__00).Visible(EmployePermissionHelper.IsMenuUnitListVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "UnitList" } });
                  //children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Уволенныесотрудники).Visible(EmployePermissionHelper.IsMenuUnitDismissedEmployeesVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "DismissedList" } });
                  //children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_УволенныесотрудникиДеп).Visible(EmployePermissionHelper.IsMenuUnitDismissedEmployeesDepVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "DismissedDepList" } });
                  //children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Отчеты_369__00).Visible(EmployePermissionHelper.IsMenuUnitReportVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ReportOrg" } });

                  //todo локализацию добавить (не мой профиль :( )
                  children.Add().Text("Роли прав доступа").Visible(EmployePermissionHelper.IsMenuPermissionRoleListVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "PermissionRoleList" } });
                  children.Add().Text("Логи пользователей").Visible(EmployePermissionHelper.IsMenuActionLogsListVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ActionLogsList" } });
              });

          items.Add().Text("Приёмы").Visible(EmployePermissionHelper.IsMenuVisitVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("Типы приёма").Visible(EmployePermissionHelper.IsMenuVisitTypeVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "VisitType" } });
                  children.Add().Text("Моё время приёма").Visible(EmployePermissionHelper.IsMenuVisitWokringTimeVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "VisitWokringTime" } });
              });

          items.Add().Text("Коммиссия").Visible(EmployePermissionHelper.IsMenuCommissionVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("Повестки").Visible(EmployePermissionHelper.IsMenuCommissionListVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "CommissionList" } });
                  // children.Add().Text("Резерв").Visible(EmployePermissionHelper.IsMenuVisitWokringTimeVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "VisitWokringTime" } });
              });

          items.Add().Text("Ценообразование").Visible(EmployePermissionHelper.IsMenuProjectVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("Журнал заявок ЦОЗ").Visible(EmployePermissionHelper.IsMenuProjectPriceRpcVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "PriceRpc" } });
                  children.Add().Text("Все").Visible(EmployePermissionHelper.IsMenuProjectPriceAllVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Price" } });
                  children.Add().Text("Регистрация цен на ЛС").Visible(EmployePermissionHelper.IsMenuProjectPriceLsVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "PriceLs" } });
                  children.Add().Text("Регистрация цен ИМН").Visible(EmployePermissionHelper.IsMenuProjectPriceImnVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "PriceImn" } });
                  children.Add().Text("Внесение изменений цен ЛС").Visible(EmployePermissionHelper.IsMenuProjectRePriceLsVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "RePriceLs" } });
                  children.Add().Text("Внесение изменений цен ИМН").Visible(EmployePermissionHelper.IsMenuProjectRePriceImnVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "RePriceImn" } });
                  children.Add().Text("Согласование").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Stage11" } });
                  children.Add().Text("Архив").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "RefArchive" } });
                  children.Add().Text("Исторчиеские записи").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "PriceProjectHistory" } });
                  children.Add().Text("Протоколы").Visible(EmployePermissionHelper.IsMenuProjectProtocolsVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "PriceProjectProtocols" } });

              });
          items.Add().Text("Запросы").Visible(EmployePermissionHelper.IsMenuProjectVisibility).ImageUrl(Url.Content("~/Content/images/menuItem.png")).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "RequestOrders" } });

          items.Add().Text("Регистрация").Visible(EmployePermissionHelper.IsMenuProjectRegister)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  //                  children.Add().Text("Все").Visible(EmployePermissionHelper.IsMenuProjectRegisterAll).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Register" } });
                  children.Add().Text("Регистрация ЛС").Visible(EmployePermissionHelper.IsMenuProjectRegisterLsVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "RegisterLs" } });
                  //                  children.Add().Text("Перегистрация ЛС").Visible(EmployePermissionHelper.IsMenuProjectReRegisterLsVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ReRegisterLs" } });
                  //                  children.Add().Text("Внесение изменений ЛС").Visible(EmployePermissionHelper.IsMenuProjectChRegisterLsVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ChRegisterLs" } });
                  //                  children.Add().Text("В архиве").Visible(EmployePermissionHelper.IsMenuProjectChRegisterLsVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "RegisterArchive" } });
              });

          items.Add().Text("Договоры").Visible(EmployePermissionHelper.IsMenuContractMainVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("Договоры").Visible(EmployePermissionHelper.IsMenuContractIndexVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Contract" } });
                  children.Add().Text("Доп. соглашения").Visible(EmployePermissionHelper.IsMenuContractContractExVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ContractAddition" } });
                  children.Add().Text("Согласование").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Stage11" } });
                  children.Add().Text("Настройки").Visible(EmployePermissionHelper.IsMenuContractSettingsVisibility).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "ContractProcSettings" } });
              });

          items.Add().Text("ЦОЗ").Visible(EmployePermissionHelper.IsMenuCozVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("Исходящие документы").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "OutgoingCoz" } });
                  children.Add().Text("Журнал направлений").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "MaterialDirectionCoz" } });
              });

          items.Add().Text("Оборудование").Visible(EmployePermissionHelper.IsMenuEquipmentVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("Список").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "InstallationList" } });
              });

          items.Add().Text("Гос.Реестр").Visible(EmployePermissionHelper.IsMenuStateRegisterVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("Поиск производителя").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "SrReestrList" } });
              });
          //items.Add().Text("?").HtmlAttributes(new {@style = "float: right"})
          //    .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
          //    .Url("~/Content/help.pdf");
          items.Add().Text("ОБК").Visible(EmployePermissionHelper.IsMenuSafetyAssessmentVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("Заявления ОБК").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "SafetyAssessmentList" } });
                  children.Add().Text("Экспертиза документов").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "SafetyExpertiseList" } }).Visible(EmployePermissionHelper.CanSafetyExpertiseDocumentList);
              });

          items.Add().Text("ОБК Договоры").Visible(EmployePermissionHelper.IsMenuOBKContractVisibility)
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("ОБК Договоры").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "OBKContractList" } });
                  children.Add().Text("Счет на оплату").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "OBKPaymentList" } }).Visible(EmployePermissionHelper.CanOBKPayment);
              });

          items.Add().Text("ОБК справочники").Visible(true).ImageUrl(Url.Content("~/Content/images/menuItem.png")).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "OBKDic" } });

          items.Add().Text(UserHelper.GetCurrentName()).HtmlAttributes(new { @style = "float: right", @class = "sys-notification-menu-item" })
              .ImageUrl(Url.Content("~/Content/images/menuItem.png"))
              .Items(children =>
              {
                  children.Add().Text("Уведомления").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "NotificationList" } });
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Профиль_343__00).LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", "Profile" } }).HtmlAttributes(new { @style = "min-width:250px;" });
                  children.Add().Text("Русский язык").Url("~/?lang=ru-RU");
                  children.Add().Text("Қазақ тiлi").Url("~/?lang=Kk-KZ");
                  children.Add().Text("English").Url("~/?lang=en-US");
                  children.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Выход_381__00).Action("LogOff", "Account");

              });

      }).Events(e => e.Select("onSelectMenu"))
        )
    </div>
    <div id="pwTabs">
        @RenderBody()
    </div>

    @Scripts.Render("~/bundles/bootstrap")

    @RenderSection("scripts", required: false)

    <script id="fileTemplate" type="text/x-kendo-template">
        <span class='k-progress'></span>
        <div class='file-wrapper'>
            <a filename='#=name#' title="@PW.Ncels.Database.Recources.Messages.Property_Просмотр_328__00" onclick='fileView("#=files[0].documentId#" ,"#=name#")'>
                <span class='file-icon #=addExtensionClass(files[0].extension)#'></span>
                <span style="text-decoration:underline;" class='file-heading file-name-heading'>#=substring(name)#</span>
            </a>
            <span class='file-size-heading'>#=bytesToSize(size)#</span>
            <span></span>
            <button filename='#=name#' title="@PW.Ncels.Database.Recources.Messages.Property_Скачать_348__00" type='button' class='file-download' onclick='fileDownload("#=files[0].documentId#", "#=name#")'></button>

            <button title="@PW.Ncels.Database.Recources.Messages.Property_Удалить_334__00" type='button' class='k-upload-action'></button>
        </div>
    </script>

    <script id="fileStampTemplate" type="text/x-kendo-template">
        <span class='k-progress'></span>
        <div class='file-wrapper'>
            <a filename='#=name#' title="@PW.Ncels.Database.Recources.Messages.Property_Просмотр_328__00" onclick='fileView("#=files[0].documentId#" ,"#=name#")'>
                <span class='file-icon #=addExtensionClass(files[0].extension.toLowerCase())#'></span>
                <span style="text-decoration:underline;" class='file-heading file-name-heading'>#=substring(name)#</span>
            </a>
            <span class='file-size-heading'>#=bytesToSize(size)#</span>
            <span></span>
            <button filename='#=name#' title="@PW.Ncels.Database.Recources.Messages.Property_Скачать_348__00" type='button' class='file-download' onclick='fileDownload("#=files[0].documentId#", "#=name#")'></button>
            <button title="@PW.Ncels.Database.Recources.Messages.Property_Удалить_334__00" type='button' class='k-upload-action'></button>
        </div>
    </script>

    <script type="text/x-kendo-tmpl" id="fileReadTemplate">
        <div style="clear: both;">
            <a title="@PW.Ncels.Database.Recources.Messages.Property_Просмотр_328__00" onclick='fileView("#=documentId#" ,"#=name#")'>
                <span class='file-icon #=addExtensionClass(extension)#'></span>
                <span style="text-decoration:underline;" class='file-heading file-name-heading'>#=substring(name)#</span>
            </a>
            <span class='file-size-heading'>[#=bytesToSize(size)#]</span>
            <span></span>
            <button title="@PW.Ncels.Database.Recources.Messages.Property_Скачать_348__00" type='button' class='file-download' onclick='fileDownload("#=documentId#", "#=name#")'></button>
        </div>
    </script>

    <script type="text/x-kendo-tmpl" id="fileEditTemplate">
        <div style="clear: both;">
            <a title="@PW.Ncels.Database.Recources.Messages.Property_Просмотр_328__00" onclick='fileView("#=documentId#" ,"#=name#")'>
                <span class='file-icon #=addExtensionClass(extension)#'></span>
                <span style="text-decoration:underline;" class='file-heading file-name-heading'>#=substring(name)#</span>
            </a>
            <span class='file-size-heading'>[#=bytesToSize(size)#]</span>
            <span></span>
            <button filename='#=name#' title="@PW.Ncels.Database.Recources.Messages.Property_Редактировать_212__00" type='button' class='file-edit' onclick='fileEdit("#=documentId#", "#=name#")'></button>
            <button title="@PW.Ncels.Database.Recources.Messages.Property_Скачать_348__00" type='button' class='file-download' onclick='fileDownload("#=documentId#", "#=name#")'></button>

        </div>
    </script>

</body>
</html>

<div id="ProfileCommandWindow"></div>
<div id="DictionaryCommandWindow"></div>
<div id="CardCommandWindow"></div>
<div id="ReviewListCommandWindow"></div>
<div id="TaskCommandWindow"></div>
<div id="TaskCommandWindowError"></div>
<div id="StampCommandWindow"></div>
<div id="DigSignWindow"></div>
<div id="validWindow"></div>
<div id="mainWindowLoader"></div>
<div id="divDialog" style="padding:0px 0px 10px 0px"></div>
<object id="winFirefoxPlugin" type="application/x-sharepoint" width="0"
        height="0" style="position:absolute; height: 0; width: 0; visibility: collapse;"></object>
<span id="notification" style="display:none;"></span>
<script>
    SetVersion('@typeof(PW.Prism.MvcApplication).Assembly.GetName().Version');
</script>
<script type="text/javascript" src="@Url.Content("~/SignalR/Hubs")"></script>
<script id="emailTemplate" type="text/x-kendo-template">
    <div class="new-mail">
        <img src="../../../content/images/notification.png" />
        <div style="height: 32px;" />
        <b>@PW.Ncels.Database.Recources.Messages.Property_Всегоновыхзаданий_64__00  #= countAll #</b>
        <br />
        <p>@PW.Ncels.Database.Recources.Messages.Property_Новыхзаданийзапоследнийчас_16__00 #= count #</p>
    </div>
</script>
<script type="text/x-kendo-tmpl" id="fileReadProjectTemplate">
    <div style="clear: both;">
        <a title="@PW.Ncels.Database.Recources.Messages.Property_Просмотр_328__00" onclick='fileView("#=AttachId#", "#=AttachName#")'>
            @* <span class='file-icon #=addExtensionClass(extension)#'></span>*@
            <span style="text-decoration:underline;" class='file-heading file-name-heading'>#=substring(AttachName)#</span>
        </a>
        @*<span class='file-size-heading'>[#=bytesToSize(size)#]</span>*@
        <span></span>
        <button title="@PW.Ncels.Database.Recources.Messages.Property_Скачать_348__00" type='button' class='file-download' onclick='fileDownload("#=AttachId#", "#=AttachName#")'></button>
    </div>
</script>
<script>

    $(function () {

        var hub = $.connection.serverSideTimerHub;
        $.connection.hub.start();

        window.onbeforeunload = function (e) {
            $.connection.hub.stop();
        };

        var notification = $("#notification")
            .kendoNotification({
                position: {
                    pinned: true,
                    bottom: 37,
                    right: 10
                },
                autoHideAfter: 0,
                stacking: "up",
                templates: [
                    {
                        type: "info",
                        template: $("#emailTemplate").html()
                    }
                ]

            })
            .data("kendoNotification");

        hub.tick = function (connectionId, userId, dateTime) {
            var result = JSON.parse(dateTime);
            // notification.hide();
            @*if (result.countAll > 0) {
                document.title = '@PW.Ncels.Database.Recources.Messages.Property_заданий_329__00 ' + result.countAll;
                // notification.show(result, "info");
            } else {
                document.title = '@PW.Ncels.Database.Recources.Messages.Property_Системаэлектронногодокументооборота_7__00';
            }*@
            notifyMe(result);
            //alert(userId + dateTime);
        };

        $(document)
            .one("kendo:pageUnload",
                function () {
                    if (notification) {
                        notification.hide();
                    }
                });
        // request permission on page load
        $('.sys-notification-menu-item span[class="k-link"] .k-icon.k-i-arrow-s:first').before(' <span class="badge badge-info" id="systemNotificationCounter">0</span>');
        window.ncelsSysNotificationsCount = 0;
        setInterval(function() {
            $.ajax({
                type: 'GET',
                url: '/Notification/UnreadedCount',
                success: function (result) {
                    if (result != window.ncelsSysNotificationsCount) {
                        window.ncelsSysNotificationsCount = result;
                        $("#systemNotificationCounter").text(result);
                        ShowAlert("Уведомление", "У вас " + result + " не прочитанных уведомлений", window.AlertType.Info,5000);
                    }
                },
                complete: function () {
                }
            });
        }, 60000);
        //обновление дашборда
        /*setInterval(function () {
            if (ReloadDashboard)
                ReloadDashboard();
        }, 60000);*/
    });
    document.addEventListener('DOMContentLoaded', function () {
        if (Notification.permission !== "granted")
            Notification.requestPermission();
    });

    function notifyMe(result) {
        if (!Notification) {
            alert('Уведомления не доступны в Вашем браузере. Используйте Firefox или Chrome.');
            return;
        }

        if (Notification.permission !== "granted")
            Notification.requestPermission();
        else {
            var text = '';
            if (result.countAll > 0) {
                text += 'Новых заданий: ' + result.countAll + '\n';
            }
            if (result.countRegister > 0) {
                text += 'Исходящие для регистрации: ' + result.countRegister + '\n';
            }
            if (result.countWorkNote > 0) {
                text += 'Служебки для регистрации: ' + result.countWorkNote;
            }
            if (text != '') {
                var notificationRegister = new Notification('Новое уведомление:', {
                    icon: '@Url.Content("~/Content/images/assistent.png")', /*'http://13.73.166.25:81/Content/images/assistent.png'*/
                    body: text
                });
            }
        }
    }
</script>

<style>
    .k-notification {
        border: 0;
        margin-top: 5px !important;
        margin-bottom: 5px !important;
    }

    .k-notification-info.k-group {
        background: rgba(0%,0%,0%,.7);
        color: #fff;
    }

    .new-mail {
        width: 350px;
        height: 100px;
        font-size: 12px;
    }

        .new-mail img {
            float: left;
            margin: 28px 15px 30px 30px;
        }
</style>
