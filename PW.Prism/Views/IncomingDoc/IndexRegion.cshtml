@using PW.Ncels.Database.Models
@model Guid

@{
    //Layout = "~/Views/Shared/_LayoutPage.cshtml";
}


<script>
    InitFilterIncomingRegionGrid('@Model.ToString()');
</script>
<input type="hidden" id="@("OrganizationId" + Model)"/>
@(Html.Kendo().Splitter()
            .HtmlAttributes(new { @class = "pwSplitter k-block" })
            .Name(("splitter" + Model))
            .Panes(panes => {
            panes.Add()
                .Size("250px")
                .Collapsible(true)
                .MaxSize("500px")
                .MinSize("250px")
                .Content(
                @<div class="pwPanelBar">

                    @(Html.Kendo().PanelBar().HtmlAttributes(new { @class = "pwPanelBar" })
                               .Name("panelbar" + Model)
                               .ExpandMode(PanelBarExpandMode.Multiple)
                               .ExpandAll(true)
                               .HtmlAttributes(new { style = "width:auto;" })
                               .Events(e => e.Select("panelIncomingRegionSelect"))
                               .Items(panelbar => {
                                   panelbar.Add().Expanded(true);
                                   panelbar.Add().Text(PW.Ncels.Database.Recources.Messages.Property_ПоФилиалам_252__00)
                                   .Items(projects => {
                                        foreach (Item dictionaryInfo in (List<Item>) ViewData["Regions"])
                                        {
                                            projects.Add().Text(dictionaryInfo.Name).LinkHtmlAttributes(new Dictionary<string, object>() {{"ItemType", dictionaryInfo.Id}, {"ModelId", Model.ToString()}});
                                        }

                                   });
                               })
                    )
                </div>
                );

            panes.Add().Scrollable(false).Size("100%").Content(
                @<div class="pwPanelBar">
                    <div class="pwBlockAdd k-block">
                        
                        <div id="pwOne">
                            @(Html.Kendo().MaskedTextBox().Name("findText" + Model).Mask("").HtmlAttributes(new { @class = "pwWidth100" }))
                        </div>

                        <div id="pwTwo">
                            @(Html.Kendo().DropDownList().Name("findType" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                                   .DataTextField("Text")
                                   .DataValueField("Value")
                                   .BindTo(new List<SelectListItem>() {
                                       new SelectListItem() {
                                           Text = PW.Ncels.Database.Recources.Messages.Property_Все_394__00, Value = "0"
                                       },
                                       new SelectListItem() {
                                           Text = PW.Ncels.Database.Recources.Messages.Property_Пономеру_281__00, Value = "1"
                                       },
                                       new SelectListItem() {
                                           Text = PW.Ncels.Database.Recources.Messages.Property_Поисполнителю_170__00, Value = "2"
                                       },
                                       new SelectListItem() {
                                           Text = PW.Ncels.Database.Recources.Messages.Property_Поотправителю_171__00, Value = "3"
                                       }
                                   })
                                   .SelectedIndex(0)
                            )
                        </div>

                        <div id="pwThree">
                            @(Html.Kendo().Button().Name("find" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                                   .Content(PW.Ncels.Database.Recources.Messages.Property_Найти_372__00)
                                   .ImageUrl("/Content/images/find.png"))
                        </div>

                        <div id="pwFour">
                            @(Html.Kendo().Button().Name("export" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                                   .Content(PW.Ncels.Database.Recources.Messages.Property_Экспорт_335__00)
                                   .ImageUrl("/Content/images/export.png").Events(e => e.Click("onExportInDoc")))
                        </div>

                    </div>
                    <div id="pwSix">
                        @(Html.Kendo().Button().Name("reload" + Model).HtmlAttributes(new { @class = "pwWidth100 pwButtonReload" })
                                                    .Content("")
                               .ImageUrl("/Content/images/reload.png"))

                    </div>
                    @(Html.Kendo().Grid<PW.Ncels.Database.DataModel.Document>()
                                   .Name("gridInListDoc" + Model)
                           .Columns(columns => {

                               columns.Bound(p => p.IsAttachments).Width(40).ClientTemplate(
                                   "# if (IsAttachments == true) { #" +
                                   "<img  src='" + Url.Content("~/Content/images/attachTrue.png") + "'  />" +
                                   "# } else { #" +

                                   "# } #"

                                   ).Title(PW.Ncels.Database.Recources.Messages.Property_Ф_402__00).Lockable(false).Locked(true).Lockable(false);
                               columns.Bound(p => p.Number).Width(150).ClientTemplate(
                                    "<div class=\"btn-group btn-group-xs\" style='height:14px;margin-top: -9px;'>" +
                                        "<button  type='button' style='width:90px;' class='btn btn-default btn-xs' onclick=\"getIncomingDetails('#=DocumentId#', '#=Number#')\"><span style=\"color:rgb(66,139,202);\">#=Number#</span></button>" +
                                        "<button type='button' style='width:20px;' class='btn btn-default btn-xs' onclick=\"addInRepeatDocClick('#=DocumentId#')\"><span class=\"glyphicon glyphicon-retweet\"></span></button>" +
                                    "</div>"
                                    ).Title(PW.Ncels.Database.Recources.Messages.Property_Номер_373__00).Locked(true).Lockable(false).ClientFooterTemplate(PW.Ncels.Database.Recources.Messages.Property_Всего_356__00 +"#=count#");
                               //columns.Bound(p => p.SortNumber).Width(65).Title("№").Locked(true).Lockable(false);
                               columns.Bound(p => p.DocumentDate).Format("{0:dd.MM.yyyy HH:mm}").Title(PW.Ncels.Database.Recources.Messages.Property_Датадок_307__00).Width(115).Locked(true).Lockable(false);
                               columns.Bound(p => p.StateType).ClientTemplate("<img  src=\"/Content/images/StateType_#=StateType#.png\" />").Title(PW.Ncels.Database.Recources.Messages.Property_Статус_357__00).Width(100).Filterable(filterable => filterable.UI("StateFilterDoc"));
                               columns.Bound(p => p.MonitoringType).ClientTemplate("<img  src=\"/Content/images/MonitoringType_#=MonitoringType#.png\" />").Title(PW.Ncels.Database.Recources.Messages.Property_Типконтроля_224__00).Width(100).Filterable(filterable => filterable.UI("MonitoringFilterDoc"));
                               columns.Bound(p => p.ExecutionDate).Format("{0:dd.MM.yyyy}").Title(PW.Ncels.Database.Recources.Messages.Property_Срокисп_283__00).Width(100);
                               //columns.Bound(p => p.MonitoringNote).Title(PW.Ncels.Database.Recources.Messages.Property_Типконтроля_224__00).Width(250);
                               columns.Bound(p => p.CorrespondentsValue).Title(PW.Ncels.Database.Recources.Messages.Property_Корреспондент_208__00).Width(250);
                               columns.Bound(p => p.CorrespondentsInfo).Title(PW.Ncels.Database.Recources.Messages.Property_Автор_374__00).Width(250);
                               columns.Bound(p => p.OutgoingNumber).Title(PW.Ncels.Database.Recources.Messages.Property_Исхномер_263__00).Width(100);
                               columns.Bound(p => p.AutoOutgoingDate).Format("{0:dd.MM.yyyy}").Title(PW.Ncels.Database.Recources.Messages.Property_Датаисх_284__00).Width(100);
                               columns.Bound(p => p.Summary).Title(PW.Ncels.Database.Recources.Messages.Property_Краткоесодержание_82__00).Width(250);
                               columns.Bound(p => p.ResponsibleValue).Title(PW.Ncels.Database.Recources.Messages.Property_Отвисполнитель_124__00).Width(250);
                               columns.Bound(p => p.ExecutorsValue).Title(PW.Ncels.Database.Recources.Messages.Property_Исполнитель_244__00).Width(250);
                               columns.Bound(p => p.AnswersValue).Title(PW.Ncels.Database.Recources.Messages.Property_Полученвответна_89__00).Width(100);
                               columns.Bound(p => p.AutoAnswersValue).Title(PW.Ncels.Database.Recources.Messages.Property_Ответныйдокумент_106__00).Width(100);
                               columns.Bound(p => p.AutoAnswersTempValue).Title(PW.Ncels.Database.Recources.Messages.Property_Промежуточныйдокумент_45__00).Width(100);
                               columns.Bound(p => p.LanguageDictionaryValue).Title(PW.Ncels.Database.Recources.Messages.Property_Языкдокумента_175__00).Width(100);
                               columns.Bound(p => p.QuestionDesignDictionaryValue).Title(PW.Ncels.Database.Recources.Messages.Property_Характервопроса_123__00).Width(100);
                               columns.Bound(p => p.DocumentKindDictionaryValue).Title(PW.Ncels.Database.Recources.Messages.Property_Виддокумента_209__00).Width(100);
                               columns.Bound(p => p.Counters).Title(PW.Ncels.Database.Recources.Messages.Property_ЛП_395__00).Width(100);
                               columns.Bound(p => p.FormDeliveryDictionaryValue).Title(PW.Ncels.Database.Recources.Messages.Property_Виддоставки_225__00).Width(100);
                               columns.Bound(p => p.NomenclatureDictionaryValue).Title(PW.Ncels.Database.Recources.Messages.Property_Дело_383__00).Width(100);
                               columns.Bound(p => p.CompleteDocumentsValue).Title(PW.Ncels.Database.Recources.Messages.Property_Кдокументу_242__00).Width(100);
                               columns.Bound(p => p.RegistratorValue).Title(PW.Ncels.Database.Recources.Messages.Property_Регистратор_243__00);
                               columns.Bound(p => p.Note).Title(PW.Ncels.Database.Recources.Messages.Property_Примечание_264__00).Width(100);
                           })

                           .Reorderable(reorderable => reorderable.Columns(true))
                           .Resizable(resizable => resizable.Columns(true))
                           .Sortable(sortable => sortable.AllowUnsort(false))
                           .Groupable()
                           .Scrollable(scrollable => scrollable.Virtual(true))
                                    .Filterable()
                           .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                           .HtmlAttributes(new { @class = "pwGrid" })
                           .DataSource(dataSource => dataSource
                               .Ajax()
                               .Aggregates(aggregates => {aggregates.Add(p => p.Number).Count();})
                               .Sort(sort => { sort.Add("SortNumber").Descending(); sort.Add("CreatedDate").Descending(); })
                               .PageSize(50)
                                       .Read(read => read.Action("ListRegionsDocument", "IncomingDoc"))
                           ))
                </div>
             );
        }))

<script>
    resizeGrid('@("#gridInListDoc" + Model)');


</script>
