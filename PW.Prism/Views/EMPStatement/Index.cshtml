@using Ncels.Teme.Contracts.ViewModels
@using PW.Ncels.Database.Constants
@using PW.Ncels.Database.Helpers
@model Guid
@(Html.Kendo().Splitter()
      .HtmlAttributes(new { @class = "pwSplitter k-block" })
      .Name("splitter")
      .Panes(pane =>
      {
      pane.Add()
          .Size("250px")
          .Collapsible(true)
          .MaxSize("500px")
          .MinSize("250px")
          .Content(
        @<div class="pwPanelBar">
            @( Html.Kendo().PanelBar().HtmlAttributes(new { @class = "pwPanelBar" })
                     .Name("panelbar")
                     .ExpandMode(PanelBarExpandMode.Multiple)
                     .ExpandAll(true)
                     .HtmlAttributes(new { style = "width:auto;" })
                     .Events(e => e.Select("panelEmpContractSelect"))
                     .Items(panelbar =>
                     {
                         panelbar.Add().Expanded(true);
                         panelbar.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Постатусу_262__00)
                             .Items(projects =>
                             {
                                 projects.Add().Text("Все").Selected(true);

                             });

                     })
            )
        </div>);
          pane.Add().Scrollable(false).Size("100%").Content(
              @<div class="pwPanelBar">
                  @( Html.Kendo().Grid<EmpStatementViewModel>()
                         .Name("grid" + Model)
                         .Columns(columns =>
                         {
                             columns.Bound(x => x.Kind).Title("Вид").Width(150);
                             columns.Bound(x => x.Type).Title("Тип заявления").Width(150);
                             columns.Bound(x => x.Name).Title("Наименование изделия/материала").Width(150);
                             columns.Bound(x => x.Number).Title("Номер").Width(100);
                             columns.Bound(x => x.Date).Format("{0:dd.MM.yyyy}").Title("Дата направления").Width(100);
                         })
                         .Reorderable(reorderable => reorderable.Columns(true))
                         .Resizable(resizable => resizable.Columns(true))
                         .Groupable()
                         .Sortable()
                         .Filterable()
                         .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                         .Scrollable(scrollable => scrollable.Virtual(true))
                         .Pageable()
                         .HtmlAttributes(new { @class = "pwGrid" })
                         .DataSource(dataSource => dataSource
                             .Ajax()
                             .Aggregates(aggregates => { aggregates.Add(p => p.Number).Count(); })
                             .Read(read => read.Action("LoadStatements", "EMPStatement"))
                             .PageSize(20)
                         )
                )
              </div>
                );
                })

                )
