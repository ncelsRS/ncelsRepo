@using PW.Ncels.Database.Models
@model Guid?
@{
//Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<script>
    InitFilterVisitTypeAllGrid('@Model.ToString()');

    function error_handlerPP(e) {
        e.preventDefault(e);
        var grid = $("#gridVisitTypeList" + '@Model.ToString()').data("kendoGrid");
        grid.cancelChanges();
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            ShowAlert('Внимание!', message, window.AlertType.Warning, 3000);
        }
    }
</script>
@(Html.Kendo().Splitter()
            .HtmlAttributes(new { @class = "pwSplitter k-block" })
            .Name(("splitter" + Model))
            .Panes(panes =>
            {
            panes.Add().Scrollable(false).Size("100%").Content(
                @<div class="pwPanelBar">
                    <div class="pwBlockAdd k-block">
                        <div id="pwOne">
                            @(Html.Kendo().MaskedTextBox().Name("findText" + Model).Mask("").HtmlAttributes(new { @class = "pwWidth100" }))
                        </div>
                        @*<div id="pwTwo">
                            @(Html.Kendo().DropDownList().Name("findType" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                                   .DataTextField("Text")
                                   .DataValueField("Value")
                                   .BindTo(new List<SelectListItem>() {
                                       new SelectListItem() {
                                           Text = PW.Ncels.Database.Recources.Messages.Property_Все_394__00, Value = "0"
                                       },
                                   })
                                   .SelectedIndex(0)
                            )
                        </div>*@
                        <div id="pwThree">
                            @(Html.Kendo().Button().Name("find" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                             .Content(PW.Ncels.Database.Recources.Messages.Property_Найти_372__00)
                             .ImageUrl("/Content/images/find.png"))
                        </div>
                        <div id="pwFour">
                        </div>
                    </div>
                    <div id="pwSix">
                        @(Html.Kendo().Button().Name("reload" + Model).HtmlAttributes(new { @class = "pwWidth100 pwButtonReload" })
                                                        .Content("")
                                   .ImageUrl("/Content/images/reload.png"))
                    </div>

                    @(Html.Kendo().Grid<VisitTypeModel>()
                                .Name("gridVisitList" + Model)
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.Name).Title("Наименование");
                                    columns.Bound(p => p.CategoryName).Title("Категория");
                                    columns.Bound(p => p.Time).Title("Время приёма(минут)");
                                    columns.Command(command => { command.Edit(); command.Destroy(); }).Width(200);
                                })
                                .ToolBar(toolbar => toolbar.Create().HtmlAttributes(new { @class = "pwRefAdd" }))
                                .Filterable()
                                .Sortable()
                                .Pageable()
                                .Scrollable()
                                .Groupable()
                                .HtmlAttributes(new { @class = "pwGrid" })
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                            .Model(model =>
                                            {
                                                model.Id(p => p.Id);
                                                model.Field(p => p.Name);
                                                model.Field(p => p.CategoryName);
                                                model.Field(p => p.Time);
                                                model.Field(p => p.Id).Editable(false);
                                            })
                                        .PageSize(20)
                                        //.Group(x => x.Add(p => p.CategoryName))
                                        //.Sort(sort => sort.Add("Name").Ascending())
                                        .Read(read => read.Action("VisitTypeRead", "Visit"))
                                        .Create(update => update.Action("VisitTypeCreate", "Visit"))
                                        .Update(update => update.Action("VisitTypeUpdate", "Visit"))
                                        .Destroy(update => update.Action("VisitTypeDestroy", "Visit"))
                                        .Events(events => events.Error("error_handlerPP"))
                                        ))
                </div>
                 );
            }))
<script>
    resizeGrid('@("#gridVisitTypeList" + Model)');
</script>