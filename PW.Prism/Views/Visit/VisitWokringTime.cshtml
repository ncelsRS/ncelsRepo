@using PW.Ncels.Database.Models
@using PW.Prism.ViewModels.Visits
@model VisitWokringTimeModel
@{
    //Layout = "~/Views/Shared/_LayoutPage.cshtml";
    var visitGridId = Guid.NewGuid().ToString();
}
<script>
    InitFilterVisitAllGrid('@visitGridId');
    resizeGrid3("#gridVisitList" + visitGridId, 320);

    var visitGridId = '@visitGridId';
    var events = [];
    function selectDateChange() {
        var calendar = $("#calendar").data("kendoCalendar");
        var value = calendar.value();
        showWorkingHours(value);
    }

    function error_handlerPP(e) {
        e.preventDefault(e);
        var grid = $("#gridVisitList" + visitGridId).data("kendoGrid");
        grid.cancelChanges();
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            ShowAlert('Внимание!', message, window.AlertType.Warning, 3000);
        }
    }
</script>
@(Html.Kendo().Splitter()
            .HtmlAttributes(new { @class = "pwSplitter k-block" })
            .Name(("splitter" + Model))
            .Panes(panes =>
            {
            panes.Add().Scrollable(false).Size("20%").Content(
                @<div class="pwPanelBar">
                    <div>
                        <h3>Типы приёмов</h3>
                        @{
                            var prevGroup = "";
                        }
                        @foreach (var visitType in Model.VisitTypes.OrderBy(x => x.Type.Group).ThenBy(x => x.Type.Name))
                        {
                            if (prevGroup != visitType.Type.Group)
                            {
                                prevGroup = visitType.Type.Group;
                                <div class="visit-group">@prevGroup</div>
                            }
                            var checkProp = visitType.IsEnable ? "checked=checked" : "";
                            <div class="visit-type">
                                <input type="checkbox"
                                       id="@("checkbox"+visitType.Type.Id)"
                                       data-visit-type-id="@visitType.Type.Id"
                                       class="bob-checkbox"
                                       @checkProp
                                       onchange="changeVisitTypeEnable(this)" />
                                <label for="@("checkbox"+visitType.Type.Id)">@visitType.Type.Name</label>
                            </div>
                        }

                    </div>
                </div>
                 );
            panes.Add().Scrollable(false).Size("25%").Content(
                @<div class="pwPanelBar">
                    @(Html.Kendo().Calendar()
                                .Name("calendar")
                                .Events(e =>
                                {
                                    e.Change("selectDateChange");
                                })
                                .Value(DateTime.Today)
                                .Footer(" ")
                                .MonthTemplate(month => month.Content("# if ($.inArray(+data.date, events) != -1) { #" +
                                                        "<div class='" +
                                                    "# if (1 === 1) { #" +
                                                        "working" +
                                                    "# } else if ( data.value < 20 ) { #" +
                                                        "partyUnusing" +
                                                    "# } else { #" +
                                                        "cocktailUnusing" +
                                                    "# } #" +
                                                "'>#= data.value #</div>" +
                                            "# } else { #" +
                                            "#= data.value #" +
                                            "# } #")
                                    )
                    )
                    <div id="workHoursDiv" style="margin-top: 30px;">
                        
                    </div>
                </div>
         );
         panes.Add().Scrollable(false).Size("55%").Content(
                @<div class="pwPanelBar">
                    <div class="pwBlockAdd k-block">
                        <div id="pwOne">
                            @(Html.Kendo().MaskedTextBox().Name("findText" + Model).Mask("").HtmlAttributes(new { @class = "pwWidth100" }))
                        </div>
                        @*<div id="pwTwo">
                            @(Html.Kendo().DropDownList().Name("findType" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                                   .DataTextField("Text")
                                   .DataValueField("Value")
                                   .BindTo(new List<SelectListItem>() {
                                       new SelectListItem() {
                                           Text = PW.Ncels.Database.Recources.Messages.Property_Все_394__00, Value = "0"
                                       },
                                   })
                                   .SelectedIndex(0)
                            )
                        </div>*@
                        <div id="pwThree">
                            @(Html.Kendo().Button().Name("find" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                             .Content(PW.Ncels.Database.Recources.Messages.Property_Найти_372__00)
                             .ImageUrl("/Content/images/find.png"))
                        </div>
                        <div id="pwFour">
                        </div>
                    </div>
                    @*<div id="pwSix">
                        @(Html.Kendo().Button().Name("reload" + Model).HtmlAttributes(new { @class = "pwWidth100 pwButtonReload" })
                                                        .Content("")
                                   .ImageUrl("/Content/images/reload.png"))
                    </div>*@
                    @(Html.Kendo().Grid<VisitModel>()
                                .Name("gridVisitList" + visitGridId)
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.VisitInfo).Title("Время(продолжительность)").Filterable(false);
                                    columns.Bound(p => p.VisitTypeFullName).Title("Тип");
                                    columns.Bound(p => p.VisitStatusName).Title("Статус");
                                    columns.Bound(p => p.VisitorName).Title("Посетитель");
                                    columns.Bound(p => p.VisitComment).Title("Краткое описание");
                                    columns.Bound(p => p.VisitRatingValue).Title("Оценка").ClientTemplate(
                                        "#if(VisitRatingValue != null)" +
                                        "{#" +
                                        "<span title='#=VisitRatingComment#'>#=VisitRatingValue# из 5</span>" +
                                        "#}#");
                                    columns.Bound(p => p.VisitId).ClientTemplate(
                                        "#if(VisitStatusId== 1)" +
                                        "{#" +
                                        "<div class=\"btn-group btn-group-xs\" style='height:14px;margin-top: -9px;'>" +
                                            "<button type='button' style='width:90px;' class='btn btn-default btn-xs' onclick=\"visitConfirm('#=VisitId#')\"><span style=\"color:rgb(66,139,202);\">Подтвердить</span></button>" +
                                        "</div>"+
                                        "<div class=\"btn-group btn-group-xs\" style='height:14px;margin-top: -9px;'>" +
                                            "<button type='button' style='width:90px;' class='btn btn-default btn-xs' onclick=\"visitCancel('#=VisitId#')\"><span style=\"color:rgb(66,139,202);\">Отменить</span></button>" +
                                        "</div>" +
                                        "#}#" +
                                        "#if(VisitStatusId== 2)" +
                                        "{#" +
                                        "<div class=\"btn-group btn-group-xs\" style='height:14px;margin-top: -9px;'>" +
                                            "<button type='button' style='width:90px; background: green;' class='btn btn-default btn-xs' onclick=\"visitComplete('#=VisitId#')\"><span style=\"color:rgb(255,255,255);\">Проведено</span></button>" +
                                        "</div>" +
                                        "<div class=\"btn-group btn-group-xs\" style='height:14px;margin-top: -9px;'>" +
                                            "<button type='button' style='width:100px; background: orange;' class='btn btn-default btn-xs' onclick=\"visitNoOneCOme('#=VisitId#')\"><span style=\"color:rgb(255,255,255);\">Никто не пришёл</span></button>" +
                                        "</div>" +
                                        "#}#"
                                        ).Title("").Width(220).Filterable(false).Sortable(false);
                                    //columns.Command(command => { command.Edit(); command.Destroy(); }).Width(200);
                                })
                                //.ToolBar(toolbar => toolbar.Create().HtmlAttributes(new { @class = "pwRefAdd" }))
                                .Filterable()
                                // .Sortable()
                                .Pageable()
                                .Scrollable()
                                //.Groupable()

                                .Resizable(resizable => resizable.Columns(true))
                                .HtmlAttributes(new { @class = "pwGrid" })
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                            .Model(model =>
                                            {
                                                model.Id(p => p.VisitId);
                                                model.Field(p => p.VisitInfo);
                                                model.Field(p => p.VisitorName);
                                            })
                                        .PageSize(20)
                                        //.Group(x => x.Add(p => p.CategoryName))
                                        // .Sort(sort => sort.Add("VisitInfo").Ascending())
                                        .Read(read => read.Action("VisitListRead", "Visit"))
                                        .Events(events => events.Error("error_handlerPP"))
                                        ))
                </div>
         );
            }))
<script>
    $(document).ready(function () {
        getWorkingTime();
    });

    function getWorkingTime() {
        $.ajax({
            type: 'POST',
            url: "/Visit/GetWorkingDays",
            success: function (result) {
                if (result.success == false) {
                    ShowAlert('Внимание!', result.message, window.AlertType.Warning, 3000);
                }
                else {
                    events = [];
                    $.each(result.dates, function (index, value) {
                        var pattern = /Date\(([^)]+)\)/;
                        var results = pattern.exec(value);
                        var dt = +new Date(parseFloat(results[1]));
                        events.push(dt);
                    });
                    refreshCalendar();
                }
            },
            error: function() {
                ShowAlert('Ошибка!', window.commonErrorMessage, window.AlertType.Error, 3000);
            }
        });
    }

    function refreshCalendar() {
        var calendar = $("#calendar").data("kendoCalendar");
        var value = calendar.value();
        calendar.value(new Date(2017, 0, 0));
        calendar.value(value);
    }

    function showWorkingHours(date) {
        $.ajax({
            type: 'POST',
            url: "/Visit/GetWorkingDayHours",
            data: { date: kendo.toString(date, 'd') },
            success: function (result) {
                if (result.success == false) {
                    ShowAlert('Внимание!', result.message, window.AlertType.Warning, 3000);
                }
                else {
                    $('#workHoursDiv').html(result);
                }
            },
            error: function () {
                ShowAlert('Ошибка!', window.commonErrorMessage, window.AlertType.Error, 3000);
            }
        });
    }

    function changeVisitTypeEnable(elem) {
        var typeId = $(elem).data('visit-type-id');
        var enable = $(elem).prop('checked');
        $.ajax({
            type: 'POST',
            url: "/Visit/UpdateVisitTypeEnable",
            data: { typeId: typeId, isEnable: enable },
            success: function (result) {
                if (result.success == false) {
                    ShowAlert('Внимание!', result.message, window.AlertType.Warning, 3000);
                    $(elem).prop('checked', !enable);
                }
                else {
                    //vse kruto
                }
            },
            error: function () {
                ShowAlert('Ошибка!', window.commonErrorMessage, window.AlertType.Error, 3000);
                $(elem).prop('checked', !enable);
            }
        });
    }

    function visitConfirm(visitId) {
        $.ajax({
            type: 'POST',
            url: "/Visit/ConfirmVisit",
            data: { visitId: visitId },
            success: function (result) {
                if (result.success == false) {
                    ShowAlert('Внимание!', result.message, window.AlertType.Warning, 3000);
                }
                else {
                    $("#gridVisitList" + visitGridId).data("kendoGrid").dataSource.read()
                }
            },
            error: function () {
                ShowAlert('Ошибка!', window.commonErrorMessage, window.AlertType.Error, 3000);
            }
        });
    }

    function visitCancel(visitId) {
        $.ajax({
            type: 'POST',
            url: "/Visit/CancelVisit",
            data: { visitId: visitId },
            success: function (result) {
                if (result.success == false) {
                    ShowAlert('Внимание!', result.message, window.AlertType.Warning, 3000);
                }
                else {
                    $("#gridVisitList" + visitGridId).data("kendoGrid").dataSource.read()
                }
            },
            error: function () {
                ShowAlert('Ошибка!', window.commonErrorMessage, window.AlertType.Error, 3000);
            }
        });
    }
    function visitComplete(visitId) {
        $.ajax({
            type: 'POST',
            url: "/Visit/CompleteVisit",
            data: { visitId: visitId },
            success: function (result) {
                if (result.success == false) {
                    ShowAlert('Внимание!', result.message, window.AlertType.Warning, 3000);
                }
                else {
                    $("#gridVisitList" + visitGridId).data("kendoGrid").dataSource.read()
                }
            },
            error: function () {
                ShowAlert('Ошибка!', window.commonErrorMessage, window.AlertType.Error, 3000);
            }
        });
    }
    function visitNoOneCome(visitId) {
        $.ajax({
            type: 'POST',
            url: "/Visit/NoOneComeVisit",
            data: { visitId: visitId },
            success: function (result) {
                if (result.success == false) {
                    ShowAlert('Внимание!', result.message, window.AlertType.Warning, 3000);
                }
                else {
                    $("#gridVisitList" + visitGridId).data("kendoGrid").dataSource.read()
                }
            },
            error: function () {
                ShowAlert('Ошибка!', window.commonErrorMessage, window.AlertType.Error, 3000);
            }
        });
    }
</script>

<style>
    .working {
        color: #FFFFFF;
        background: #7FD468
    }
    .k-calendar .k-content .k-link {
        padding: 0;
        text-align: center;
    }

    .visit-group {
        margin-bottom: 10px;
        margin-top: 10px;
        font-weight: bold;
    }
    .visit-type {
        margin-bottom: 20px;
    }
</style>