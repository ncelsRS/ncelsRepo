@model PW.Ncels.Database.DataModel.EXP_RegistrationExpSteps

@{
    Layout = null;
    var isUpdate = (bool) (ViewBag.isUpdate ?? false);
    var prevStepId = (ViewBag.PrevStepId??"").ToString();
    var nextStepName = (ViewBag.NextStepName ?? "").ToString();
}
<script> 
    function onPrevStepSelected(e) {
        var id=null;
        if (e.item) {
            var dataItem = this.dataItem(e.item);
            id = dataItem.Id;
        }
        ChangeNextStepBySelected(id);
    }

    function getRegistrationTypeId() {
        return { regId: window.currentRegTypeId }
    }
</script>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "createRegStepForm", @class = "form-horizontal" }))
{
    <fieldset>
        @Html.AntiForgeryToken()

            <hr/>
            @if (isUpdate)
            {
                @Html.HiddenFor(x => x.Id)
            }

            @Html.Hidden("isUpdate", isUpdate)
            <div class="form-group">
                <label class="col-md-4 control-label">Наименование</label>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control input-md"}})
                    @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                </div>
            </div>
        <div class="form-group">
            <label for="prevStepId" class="col-md-4 control-label">Предыдущий этап</label>
            <div class="col-md-8">
                @(Html.Kendo().DropDownList()
                      .Name("prevStepId")
                      .DataTextField("Name")
                      .DataValueField("Id")
                      .OptionLabel("Выбрать из справочника")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetAvailablePrevRegStepsToCreate", "RegistrationSteps", new {id = (isUpdate ? (Guid?) Model.Id : null)})
                              .Data("getRegistrationTypeId");
                          });
                      })
                      .Events(e =>
                      {
                          e.Select("onPrevStepSelected");
                      })
                      .Value(prevStepId)
                      .HtmlAttributes(new {style="width:100%"})
                      )
            </div>
        </div>
        @*<div class="visit-type">
            <input type="checkbox"
                   id="@("checkbox"+visitType.Type.Id checkbox"+visitType.Type.Id)"
                   data-visit-type-id="@visitType.Type.Id"
                   class="bob-checkbox"
                   @checkProp
                   onchange="changeVisitTypeEnable(this)" />
            <label for="@("checkbox"+visitType.Type.Id checkbox"+visitType.Type.Id)">@visitType.Type.Name</label>
        </div>*@
        <div class="form-group">
            <label class="col-md-4 control-label" for="nextStepVal">Следующий этап</label>
            <div class="col-md-4">
                <input type="text" class="form-control" value="@nextStepName" readonly="readonly" id="nextStepVal"/>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-push-4 col-md-4">
                @*<input type="hidden" name="needParallelWithNext"  value="false"/>
                <input type="checkbox" class="bob-checkbox" id="needParallelWithNext" name="needParallelWithNext" value="true"/>*@
                @Html.CheckBox("needParallelWithNext",new {@class="bob-checkbox"})
                <label for="needParallelWithNext" class="col-md-4 control-label">Паралельно следующему</label>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4">Длительность</label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Duration, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div cass="col-md-push-8 col-md-4">
                <input type="button" value="Сохранить" onclick="CreateUpdateExpRegStep('@isUpdate')" class="btn btn-default form-control"/>
            </div>
        </div>
</fieldset>
        }
        <script>
            function ChangeNextStepBySelected(selectedId) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetNextExpRegStepName")',
                    data: { id: selectedId, regId: window.currentRegTypeId },
                    success: function (result) {
                        $('#nextStepVal').val(result.NextStepName);
                    },
                    error: function (xhr, status, error) {
                        ShowAlert('Внимание!', "Не удалось выполнить операцию", window.AlertType.Error, 3000);
                    }
                });
            }
        </script>
