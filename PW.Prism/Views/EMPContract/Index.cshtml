@using Ncels.Teme.Contracts.ViewModels
@using PW.Ncels.Database.Constants
@using PW.Ncels.Database.Helpers
@model EmpContractIndexViewModel


@(Html.Kendo().Splitter()
      .HtmlAttributes(new {@class = "pwSplitter k-block"})
      .Name("splitter")
      .Panes(pane =>
      {
          pane.Add()
              .Size("250px")
              .Collapsible(true)
              .MaxSize("500px")
              .MinSize("250px")
              .Content(
                  @<div class="pwPanelBar">
                      @( Html.Kendo().PanelBar().HtmlAttributes(new {@class = "pwPanelBar"})
                             .Name("panelbar")
                             .ExpandMode(PanelBarExpandMode.Multiple)
                             .ExpandAll(true)
                             .HtmlAttributes(new {style = "width:auto;"})
                             .Events(e => e.Select("panelEmpContractSelect"))
                             .Items(panelbar =>
                             {
                                 panelbar.Add().Expanded(true);
                                 panelbar.Add().Text(PW.Ncels.Database.Recources.Messages.Property_Постатусу_262__00)
                                     .Items(projects =>
                                     {
                                         if (EmployePermissionHelper.EmpContractNewStatusView)
                                         {
                                             projects.Add().Text("Новые").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", CodeConstManager.EmpContractStageStatus.New }, { "ItemType", "StageStatusCode" }, { "ModelId", Model.Id } }).Selected(true);
                                         }
                                         if (EmployePermissionHelper.EmpContractNotDistributedStatusView)
                                         {
                                             projects.Add().Text("Не распределенные").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", CodeConstManager.EmpContractStageStatus.NotDistributed }, { "ItemType", "StageStatusCode" }, { "ModelId", Model.Id } }).Selected(true);
                                         }
                                         if (EmployePermissionHelper.EmpContractInWorkStatusView)
                                         {
                                             projects.Add().Text("В работе").LinkHtmlAttributes(new Dictionary<string, object>() {{"ItemId", CodeConstManager.EmpContractStageStatus.InWork}, {"ItemType", "StageStatusCode"}, {"ModelId", Model.Id}}).Selected(!EmployePermissionHelper.CanViewMenuItemNotAssignedOBKContracts);
                                         }
                                         if (EmployePermissionHelper.EmpContractOnAdjustmentStatusView)
                                         {
                                             projects.Add().Text("На корректировке").LinkHtmlAttributes(new Dictionary<string, object>() {{"ItemId", CodeConstManager.EmpContractStageStatus.OnAdjustment}, {"ItemType", "StageStatusCode"}, {"ModelId", Model.Id}});
                                         }
                                         if (EmployePermissionHelper.EmpContractApprovalRequiredStatusView)
                                         {
                                             projects.Add().Text("Требует согласования").LinkHtmlAttributes(new Dictionary<string, object>() {{"ItemId", CodeConstManager.EmpContractStageStatus.ApprovalRequired}, {"ItemType", "StageStatusCode"}, {"ModelId", Model.Id}});
                                         }
                                         if (EmployePermissionHelper.EmpContractApprovedStatusView)
                                         {
                                             projects.Add().Text("Согласованные").LinkHtmlAttributes(new Dictionary<string, object>() {{"ItemId", CodeConstManager.EmpContractStageStatus.Approved}, {"ItemType", "StageStatusCode"}, {"ModelId", Model.Id}});
                                         }
                                         if (EmployePermissionHelper.EmpContractNotApprovedStatusView)
                                         {
                                             projects.Add().Text("Не согласованные").LinkHtmlAttributes(new Dictionary<string, object>() {{"ItemId", CodeConstManager.EmpContractStageStatus.NotApproved}, {"ItemType", "StageStatusCode"}, {"ModelId", Model.Id}});
                                         }
                                         if (EmployePermissionHelper.EmpContractRegistrationRquiredStatusView)
                                         {
                                             projects.Add().Text("Требуют регистрации").LinkHtmlAttributes(new Dictionary<string, object>() { { "ItemId", CodeConstManager.EmpContractStageStatus.RegistrationRequired }, { "ItemType", "StageStatusCode" }, { "ModelId", Model.Id } });
                                         }
                                         if (EmployePermissionHelper.EmpContractActiveStatusView)
                                         {
                                             projects.Add().Text("Активные").LinkHtmlAttributes(new Dictionary<string, object>() {{"ItemId", CodeConstManager.EmpContractStageStatus.Active}, {"ItemType", "StageStatusCode"}, {"ModelId", Model.Id}}).Selected(!EmployePermissionHelper.CanViewMenuItemNotAssignedOBKContracts && !EmployePermissionHelper.CanViewMenuItemInWorkOBKContracts && !EmployePermissionHelper.CanViewMenuItemRequiresSigningOBKContracts);
                                         }
                                     });

                             })
                            )
                  </div>);
          pane.Add().Scrollable(false).Size("100%").Content(

              @<div class="pwPanelBar">
                   <div class="pwBlockAdd k-block">
                       @*<div style="float: left">
                           <button type="button" class="pwWidth100 k-button k-button-icontext" onclick="callSearchView('@Model.Id')">Расширенный поиск</button>
                       </div>*@
                       @*<div style="float: left" id="@("lblStateBlock" + Model.Id)">
                           @(Html.Kendo().MaskedTextBox().Name("findText" + Model).Mask("").HtmlAttributes(new { @class = "pwWidth100" }))
                           @Html.Label("Статус", new { @class = "pwWidth100", style = "line-height: 30px; margin-right: 5px; font-weight: normal;" })
                       </div>*@
                       @*<div id="pwTwo">
                           @(Html.Kendo().DropDownList().Name("findType" + Model.Id).HtmlAttributes(new { @class = "pwWidth100" })
                                       .DataTextField("Text")
                                       .DataValueField("Value")
                                       .BindTo(new List<SelectListItem>() {
                                           new SelectListItem() {
                                               Text = "Все", Value = "0"
                                           },
                                           new SelectListItem() {
                                               Text = "Согласованные", Value = "1"
                                           },
                                           new SelectListItem() {
                                               Text = "Требуют корректировки", Value = "2"
                                           }
                                       })
                                       .SelectedIndex(0)
                           )
                           @(Html.Kendo().DropDownList().Name("findTypeActiveContract" + Model.Id).HtmlAttributes(new { @class = "pwWidth100" })
                                       .DataTextField("Text")
                                       .DataValueField("Value")
                                       .BindTo(new List<SelectListItem>() {
                                           new SelectListItem() {
                                               Text = "Все", Value = "0"
                                           },
                                           new SelectListItem() {
                                               Text = "На формировании счета", Value = PW.Ncels.Database.Constants.CodeConstManager.STATUS_OBK_INVOCE_GENERATING.ToString()
                                           },
                                           new SelectListItem() {
                                               Text = "Ожидает оплаты", Value = PW.Ncels.Database.Constants.CodeConstManager.STATUS_OBK_EXPECTED_PAYMENT.ToString()
                                           },
                                           new SelectListItem() {
                                               Text = "Оплачен", Value = PW.Ncels.Database.Constants.CodeConstManager.STATUS_OBK_ACTIVE.ToString()
                                           },
                                           new SelectListItem() {
                                               Text = "Оплачен не полностью", Value = PW.Ncels.Database.Constants.CodeConstManager.STATUS_OBK_NOT_FULL_PAYMENT.ToString()
                                           },
                                           new SelectListItem() {
                                               Text = "Срок оплаты истек", Value =  PW.Ncels.Database.Constants.CodeConstManager.STATUS_OBK_PAYMENT_EXPIRED.ToString()
                                           }
                                       })
                                       .SelectedIndex(0)
                           )
                       </div>*@
                       @*<div id="pwThree">
                           @(Html.Kendo().Button().Name("find" + Model.Id).HtmlAttributes(new { @class = "pwWidth100" })
                                       .Content(PW.Ncels.Database.Recources.Messages.Property_Найти_372__00)
                                       .ImageUrl("/Content/images/find.png"))
                           @(Html.Kendo().Button().Name("findTypeActiveBtn" + Model.Id).HtmlAttributes(new { @class = "pwWidth100" })
                                       .Content(PW.Ncels.Database.Recources.Messages.Property_Найти_372__00)
                                       .ImageUrl("/Content/images/find.png"))
                       </div>*@
                       @if (EmployePermissionHelper.EmpContractAssignment)
                       {
                           <div style="float: left">
                               @(Html.Kendo().Button().Name("toWork" + Model.Id).HtmlAttributes(new { @class = "pwWidth100", hidden = true }).Content("Распределить"))
                           </div>
                       }
                       @*<div id="pwFour">
                           @(Html.Kendo().Button().Name("export" + Model.Id).HtmlAttributes(new { @class = "pwWidth100" })
                      .Content(PW.Ncels.Database.Recources.Messages.Property_Экспорт_335__00)
                      .ImageUrl("/Content/images/export.png").Events(e => e.Click("onExportInDoc")))
                       </div>*@
                       @*<div>
                @(Html.Kendo().Button().Name("toPay" + Model).HtmlAttributes(new { @class = "pwWidth100" })
                      .Content("На оплату"))
            </div>*@
                   </div>
                   <div id="pwSix">
                       @(Html.Kendo().Button().Name("reload" + Model.Id).HtmlAttributes(new { @class = "pwWidth100 pwButtonReload" })
                                                    .Content("")
                               .ImageUrl("/Content/images/reload.png"))
                   </div>
                  @( Html.Kendo().Grid<EmpContractViewModel>()
                         .Name("grid" + Model.Id)
                         .Columns(columns =>
                         {
                             columns.Bound(x => x.Number).Width(150).ClientTemplate(
                                 "<div class=\"btn-group btn-group-xs\" style='height:14px;margin-top: -9px;'>" +
                                 "<button type='button' style='width:90px;' class='btn btn-default btn-xs' onclick=\"getEmpContractDetails('#=Id#', '#=ContractStageId#', '#=Number#',)\"><span style=\"color:rgb(66,139,202);\">#=Number#</span></button>" +
                                 "</div>").Title(PW.Ncels.Database.Recources.Messages.Property_Номер_373__00).ClientFooterTemplate(PW.Ncels.Database.Recources.Messages.Property_Всего_356__00 + "#=count#").Locked(true).Lockable(false);
                             columns.Bound(x => x.CreateDate).Format("{0:dd.MM.yyyy}").Title("Дата отправки").Width(100);
                             columns.Bound(x => x.StartDate).Format("{0:dd.MM.yyyy}").Title("Дата начала").Width(100);
                             columns.Bound(x => x.EndDate).Format("{0:dd.MM.yyyy}").Title("Дата окончания").Width(100);
                             columns.Bound(x => x.Declarant).Title("Заявитель").Width(100);
                             columns.Bound(x => x.ContractType).Title("Тип договора").Width(200);
                             columns.Bound(x => x.ValidatinGroup).Title("Группа валидации").Width(100);
                             columns.Bound(x => x.Def).Title("ДЭФ").Width(100);
                             columns.Bound(x => x.Lawyer).Title("Юрист").Width(100);
                         })

                         .Reorderable(reorderable => reorderable.Columns(true))
                         .Resizable(resizable => resizable.Columns(true))
                         .Sortable(sortable => sortable.AllowUnsort(false))
                         .Groupable()
                         .Scrollable(scrollable => scrollable.Virtual(true))
                         .Filterable()
                         .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                         .HtmlAttributes(new { @class = "pwGrid" })


                         .DataSource(dataSource => dataSource
                             .Ajax()
                             .Aggregates(aggregates => { aggregates.Add(p => p.Number).Count(); })
                             .Read(read => read.Action("LoadContracts", "EMPContract"))
                             .PageSize(20)
                         )
                        )
              </div>);
      }
      )
)

<div class="modal" id="modalSearch">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Расширенный поиск</h4>
                        </div>
                        <div class="modal-body" id="bodyMessage">
                            <div class="row">
                                <div class="col-md-12">
                                    <div>
                                        <ul>
                                            <li>
                                                <h4>Дата отправки с</h4>@(Html.Kendo().DatePicker()
                                                                              .Name("SentDateStart")
                                                                              .Events(e =>
                                                                              {

                                                                              })
                                                                              .HtmlAttributes(new { style = "width: 100%" })
                                                                              )
                                            </li>
                                            <li>
                                                <h4>по</h4> @(Html.Kendo().DatePicker()
                                                                  .Name("SentDateEnd")
                                                                  .Events(e =>
                                                                  {

                                                                  })
                                                                  .HtmlAttributes(new { style = "width: 100%" })
                                                                  )
                                            </li>
                                            <li>
                                                <h4>
                                                    Тип договора
                                                </h4>
                                                @Html.DropDownList("TypeContract", new SelectList(new[]{"123","345"}))

                                            </li>
                                        </ul>
                                    </div>
                                </div>

                            </div>

                            <div class="row">
                                <div class="col-lg-offset-4 col-md-4">
                                    <button type="button" class="btn btn-primary" style="width:100%;" onclick="searchFilter('@Model.Id')">Найти</button>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        resizeGrid('@("#grid" + Model.Id)');
        initFilterEmpContract('@Model.Id');
    });
</script>